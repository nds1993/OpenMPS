<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="MpPighisSaleM">
	
	<typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias  alias="mpPighisSaleMSerarchVO" type="nds.mpm.prod.PP0803.vo.MpPighisSaleMVO"/>
	
	<resultMap id="mpPighisSaleM" class="nds.mpm.prod.PP0803.vo.MpPighisSaleMVO">
		<result property="corpCode" column="corp_code" columnIndex="1"/>
		<result property="outCode" column="out_code" columnIndex="2"/>
		<result property="saleDate" column="sale_date" columnIndex="3"/>
		<result property="hisBunchNo" column="his_bunch_no" columnIndex="4"/>
		<result property="custCode" column="cust_code" columnIndex="5"/>
		<result property="custName" column="cust_name" columnIndex="6"/>
		<result property="custRegno" column="cust_regno" columnIndex="7"/>
		<result property="custOwner" column="cust_owner" columnIndex="8"/>
		<result property="custPhone" column="cust_phone" columnIndex="9"/>
		<result property="custAddr" column="cust_addr" columnIndex="10"/>
		<result property="noGubun" column="no_gubun" columnIndex="11"/>
		<result property="gagongNo" column="gagong_no" columnIndex="12"/>
		<result property="basePartCode" column="base_part_code" columnIndex="13"/>
		<result property="basePartName" column="base_part_name" columnIndex="14"/>
		<result property="saleWeig" column="sale_weig" columnIndex="15"/>
		<result property="saleQty" column="sale_qty" columnIndex="16"/>
		<result property="lcYn" column="lc_yn" columnIndex="17"/>
		<result property="memo" column="memo" columnIndex="18"/>
		<result property="apiTime" column="api_time" columnIndex="19"/>
		<result property="deleYn" column="dele_yn" columnIndex="20"/>
		<result property="mdUser" column="md_user" columnIndex="21"/>
		<result property="mdDate" column="md_date" columnIndex="22"/>
		<result property="crUser" column="cr_user" columnIndex="23"/>
		<result property="crDate" column="cr_date" columnIndex="24"/>
	</resultMap>
	
	<insert id="mpPighisSaleMDAO.insertMpPighisSaleM">
		<selectKey keyProperty="basePartCode" resultClass="string">
		    select #basePartCode# as base_part_code
		</selectKey>
		<![CDATA[
			INSERT INTO mp_pighis_sale_m 
				( corp_code
				  , out_code
				  , sale_date
				  , his_bunch_no
				  , cust_code
				  , cust_name
				  , cust_regno
				  , cust_owner
				  , cust_phone
				  , cust_addr
				  , no_gubun
				  , gagong_no
				  , base_part_code
				  , base_part_name
				  , sale_weig
				  , sale_qty
				  , lc_yn
				  , memo
				  , api_time
				  , dele_yn
				  , cr_user
				  , cr_date )
			VALUES ( #corpCode#
				  , #outCode#
				  , #saleDate#
				  , #hisBunchNo#
				  , #custCode#
				  , #custName#
				  , #custRegno#
				  , #custOwner#
				  , #custPhone#
				  , #custAddr#
				  , #noGubun#
				  , #gagongNo#
				  , #basePartCode#
				  , #basePartName#
				  , #saleWeig#::numeric(11,2)
				  , #saleQty#::numeric(11,0)
				  , #lcYn#
				  , #memo#
				  , #apiTime#
				  , 'N'
				  , #crUser#
				  , now() )
		]]>
	</insert>
	
	<update id="mpPighisSaleMDAO.updateMpPighisSaleM">
		<![CDATA[
			UPDATE mp_pighis_sale_m
			SET cust_code=#custCode#
				, cust_name=#custName#
				, cust_regno=#custRegno#
				, cust_owner=#custOwner#
				, cust_phone=#custPhone#
				, cust_addr=#custAddr#
				, no_gubun=#noGubun#
				, gagong_no=#gagongNo#
				, base_part_code=#basePartCode#
				, base_part_name=#basePartName#
				, sale_weig=#saleWeig#
				, sale_qty=#saleQty#
				, lc_yn=#lcYn#
				, memo=#memo#
				, api_time=#apiTime#
				, dele_yn=#deleYn#
				, md_user=#mdUser#
				, md_date=#mdDate#
				, cr_user=#crUser#
				, cr_date=#crDate#
			where 
				corp_code=#corpCode#
				and out_code=#outCode#
				and sale_date=#saleDate#
				and his_bunch_no=#hisBunchNo#
			]]>
	</update>
	
	<delete id="mpPighisSaleMDAO.deleteMpPighisSaleM">
		<![CDATA[
			DELETE FROM mp_pighis_sale_m 
			where a.corp_code = #corpCode#
			and a.sale_date = #saleDate#
			]]>
	</delete>
	
	<select id="mpPighisSaleMDAO.checkDupSaleDate" resultClass="int">
			SELECT
				count(*)
			FROM openmps.mp_pighis_sale_m
			WHERE corp_code=#corpCode#
			AND sale_date = #saleDate#
			limit 1			
	</select>
	
	<select id="mpPighisSaleMDAO.selectMpPighisSaleM_S" resultMap="mpPighisSaleM">
		<![CDATA[
			SELECT
				corp_code
				, out_code
				, sale_date
				, his_bunch_no
				, cust_code
				, cust_name
				, cust_regno
				, cust_owner
				, cust_phone
				, cust_addr
				, no_gubun
				, gagong_no
				, base_part_code
				, base_part_name
				, sale_weig
				, sale_qty
				, lc_yn
				, memo
				, api_time
				, dele_yn
				, md_user
				, md_date
				, cr_user
				, cr_date
			FROM mp_pighis_sale_m a
			where a.corp_code = #corpCode#
			and a.sale_date = #saleDate#
			]]>
	</select>
	<sql id="selectWhere_fragment">
	  	from openmps.mp_pighis_sale_m a
		left outer join openmps.od_oderhd wmsh on ( 
				biz = '1000' 
				and a.out_code = wmsh.oderno 
				and a.corp_code = wmsh.client
				and a.sale_date = wmsh.dealde )
		left outer join openmps.od_oderdt wmsd on ( 
				 wmsh.oderno = wmsd.oderno 
				 and wmsh.dc = wmsd.dc
				 and wmsh.biz = wmsd.biz
				 and wmsh.client = wmsd.client  )
		left outer join openmps.mp_item_master_m m on 
		(
				wmsd.client = m.corp_code
				and wmsd.sku = m.pro_code
		)
		left outer join openmps.tm_userxm usr on (a.corp_code = usr.corp_code and a.md_user = usr.user_code)
		where a.corp_code = #corpCode#
		and a.sale_date = #saleDate#
		<dynamic> 
	        <isEqual prepend="and" property="searchCondition" compareValue="nsend">
	            a.api_time is null
	        </isEqual>
		</dynamic>
		<isEqual property="searchCondition2" compareValue="test">
		limit 1
		</isEqual>
	</sql>
	<select id="mpPighisSaleMDAO.selectMpPighisSaleMList_D" parameterClass="mpPighisSaleMSerarchVO" resultClass="egovMap">
		select 
			a.sale_date,
			a.his_bunch_no,
			a.base_part_code,
			a.base_part_name,
			a.sale_weig::varchar,
			usr.user_name,
			
			a.api_time,
			a.out_code,
			a.sale_qty,
			a.cust_name,
			a.cust_regno,
			a.cust_owner,
			a.cust_phone,
			a.cust_addr,
			a.gagong_no
			
		<include refid="selectWhere_fragment"/>
	</select>	
	<select id="mpPighisSaleMDAO.selectMpPighisSaleMListTotCnt_S" parameterClass="mpPighisSaleMSerarchVO" resultClass="int">
		SELECT
			COUNT(*)
		<include refid="selectWhere_fragment"/>
	</select>
	<select id="mpPighisSaleMDAO.selectMpPighisSaleMSendFormatList" resultClass="egovMap">
		select 
		title , his_bunch_no, sale_date, cust_regno, cust_name, cust_owner, cust_phone
		, cust_addr, sale_weig
		, base_part_code, base_part_name
		, sort1 , sort2
		from
		(
		select 
		'P1' as title, max(a.sale_date) as sale_date , his_bunch_no, max(cust_regno) as cust_regno, max(cust_name) as cust_name , max(cust_owner) as cust_owner, max(cust_phone) as cust_phone
		, max(cust_addr) as cust_addr, sum(sale_weig) as sale_weig
		, '' base_part_code, '' base_part_name
		, his_bunch_no as sort1 , 1 sort2
		from openmps.mp_pighis_sale_m a
		where a.sale_date = #saleDate#
		and a.api_time is null
		group by his_bunch_no
		union
		select
		'P2' as title, a.sale_date, his_bunch_no, '' as cust_regno, '' cust_name, '' as cust_owner, '' as cust_phone
		, '' as cust_addr, sale_weig
		, base_part_code , base_part_name
		, his_bunch_no sort1 , 2 sort2 
		from openmps.mp_pighis_sale_m a
		where a.sale_date = #saleDate#
		and a.api_time is null
		union
		select
		'P3' as title, a.sale_date, his_bunch_no , '' as cust_regno, '' cust_name, '' as cust_owner, '' as cust_phone
		, '' as cust_addr, 0 as sale_weig
		, '' base_part_code, '' base_part_name
		, his_bunch_no as sort1 , 2 sort2 
		from openmps.mp_pighis_sale_m a
		where a.sale_date = #saleDate#
		and a.api_time is null
		) aa
		order by sort1, sort2
	</select>
	
	<update id="mpPighisSaleMDAO.updateApiTimeMpPighisSaleM">
			UPDATE openmps.mp_pighis_sale_m
			SET api_time=now()
				, memo=#memo#
				, md_user=#mdUser#
				, md_date=now()
			WHERE  
				corp_code=#corpCode#
				and out_code=#outCode#
				and sale_date=#saleDate#
				and his_bunch_no=#hisBunchNo#
	</update>
	
	<select id="mpPighisSaleMDAO.selectMpPighisSaleMProcodeList" resultClass="egovMap">
		select
			aa.cust_code
			,aa.cust_name
			,aa.pro_code
			,openmps."FN_GET_PROCODENM"(aa.corp_code,aa.pro_code) as pro_name
			,aa.sale_box
			,aa.sale_weight
			,aa.sale_amt
			,aa.sale_vat
			,aa.total_amt
		from 
		(
			select
				b.corp_code 
				,b.cust_code
				,openmps."FN_GET_CUSTCODENM"(b.corp_code,b.cust_code ) as cust_name
				,b.pro_code
				,b.sale_box
				,b.sale_weight
				,b.sale_amt
				,b.sale_vat
				,(b.sale_amt + b.sale_vat) total_amt
				,b.sale_date
			from
			openmps.mp_cust_record b 
			where b.corp_code = #corpCode#
			and b.sale_date = #saleDate#
		) aa
		order by aa.cust_code
	</select>
	<select id="mpPighisSaleMDAO.selectMpPighisSaleSum" resultClass="int">
		select
			coalesce(sum(b.sale_amt + b.sale_vat),0) total_amt
		from
		openmps.mp_cust_record b 
		where b.corp_code = #corpCode#
		and b.sale_date = #saleDate#
	</select>
	<!-- 
	신고대상 od_oderhd
	 -->
	 <sql id="selectWhere_OdOderhdfragment">
		from openmps.od_oderhd hd 
		inner join openmps.od_oderdt dt on ( 
				 hd.oderno = dt.oderno 
				 and hd.dc = dt.dc
				 and hd.biz = dt.biz
				 and hd.client = dt.client  )
		left outer join openmps.st_lot stl on ( 
				 dt.biz = stl.biz
				 and dt.dc = stl.dc
				 and dt.client = stl.client
				 and dt.sku = stl.sku  )
		left outer join openmps.od_oderasgn od on ( 
				 dt.oderno = od.oderno 
				 and dt.dc = od.dc
				 and dt.biz = od.biz
				 and dt.client = od.client 
				 and dt.sku = od.sku  )
		left outer join openmps.mp_item_master_m m on 
		(
				dt.client = m.corp_code
				and dt.sku = m.pro_code
		)
		left outer join openmps.mp_cust_info cust on 
		(
				hd.client = cust.corp_code
				and hd.socust = cust.cust_code
		)
		where hd.client = #corpCode#
		and hd.dealde = #saleDate#
		<dynamic> 
		</dynamic>
	</sql>
	<select id="mpPighisSaleMDAO.selectOdOderhdList_D" parameterClass="mpPighisSaleMSerarchVO" resultClass="egovMap">
		select 
			hd.dealde as sale_date
			,hd.oderno bar_code
			,hd.oderno out_code
			,stl.mfrno his_bunch_no
			,hd.socust as cust_code
			,cust.cust_name
			,cust.biz_no as cust_regno
			,cust.owner as cust_owner
			,cust.phone cust_phone
			,cust.delv_addr cust_addr
			,'' no_gubun
			,'' gagong_no
			,dt.sku as base_part_code
			,m.pro_name as base_part_name
			,sum(od.wt) as sale_weig
			,sum(od.oderqty) as sale_qty
			,'' lc_yn
			,cust.cust_name
		<include refid="selectWhere_OdOderhdfragment"/>
			group by hd.oderno 
			,hd.dealde 
			,stl.mfrno
			,hd.socust 
			,cust.cust_name
			,cust.biz_no 
			,cust.owner 
			,cust.phone 
			,cust.delv_addr 
			,hd.oderno 
			,dt.sku  
			,m.pro_name 
	</select>	
	<select id="mpPighisSaleMDAO.selectOdOderhdListTotCnt_S" parameterClass="mpPighisSaleMSerarchVO" resultClass="int">
		SELECT
			COUNT(*)
		<include refid="selectWhere_OdOderhdfragment"/>
	</select>
</sqlMap>
