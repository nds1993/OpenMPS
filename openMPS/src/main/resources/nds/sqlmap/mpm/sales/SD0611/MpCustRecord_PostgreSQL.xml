<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="SD0611MpCustRecord">
	
	<typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias  alias="SD0611mpCustRecordSerarchVO" type="nds.mpm.sales.SD0604.vo.MpCustRecordVO"/>
	
	<select id="SD0611mpCustRecordDAO.selectMpCustRecordList_D" parameterClass="SD0611mpCustRecordSerarchVO" resultClass="egovMap">
			WITH SALE_RECORD AS (
			   SELECT A.SALE_MONTH AS SALE_MONTH, C.SALESMAN AS SALESMAN, A.CORP_CODE AS CORP_CODE, A.HEAD_CUST AS HEAD_CUST, A.CUST_CODE AS CUST_CODE, C.PART_CODE AS PART_CODE,  B.DIST_TYPE AS DIST_TYPE, A.SALE_BOX AS SALE_BOX, 
				A.SALE_BOX AS SALE_BOX,	A.SALE_WEIGHT AS SALE_WEIGHT, A.SALE_AMT AS SALE_AMT, A.SALE_VAT AS SALE_VAT, 
				AD.SALE_BOX AS D_SALE_BOX,AD.SALE_WEIGHT AS D_SALE_WEIGHT, AD.SALE_AMT AS D_SALE_AMT, AD.SALE_VAT AS D_SALE_VAT,
				AU.SALE_BOX AS U_SALE_BOX,AU.SALE_WEIGHT AS U_SALE_WEIGHT, AU.SALE_AMT AS U_SALE_AMT, AU.SALE_VAT AS U_SALE_VAT,
				AM.SALE_BOX AS M_SALE_BOX,AM.SALE_WEIGHT AS M_SALE_WEIGHT, AM.SALE_AMT AS M_SALE_AMT, AM.SALE_VAT AS M_SALE_VAT,
				AY.SALE_BOX AS Y_SALE_BOX,AY.SALE_WEIGHT AS Y_SALE_WEIGHT, AY.SALE_AMT AS Y_SALE_AMT, AY.SALE_VAT AS Y_SALE_VAT
				FROM
				(
				 SELECT  SUBSTR(SALE_DATE,1,6) AS SALE_MONTH,CORP_CODE, HEAD_CUST, CUST_CODE, SUM(SALE_BOX) AS SALE_BOX, SUM(SALE_WEIGHT) AS SALE_WEIGHT, SUM(SALE_AMT) AS SALE_AMT, SUM(SALE_VAT) AS SALE_VAT 
				 FROM MP_CUST_RECORD
				 WHERE SALE_DATE BETWEEN #strtDate# AND #lastDate# 
				 GROUP BY  SUBSTR(SALE_DATE,1,6),CORP_CODE, HEAD_CUST, CUST_CODE
				 ) A  /* 조회일자 */
				 LEFT JOIN (
				 SELECT  SUBSTR(SALE_DATE,1,6) AS SALE_MONTH,CORP_CODE, HEAD_CUST, CUST_CODE, SUM(SALE_BOX) AS SALE_BOX, SUM(SALE_WEIGHT) AS SALE_WEIGHT, SUM(SALE_AMT) AS SALE_AMT, SUM(SALE_VAT) AS SALE_VAT 
				 FROM MP_CUST_RECORD
				 WHERE SALE_DATE  = #lastDate#
				 GROUP BY  SUBSTR(SALE_DATE,1,6),CORP_CODE, HEAD_CUST, CUST_CODE
				 ) AD   /* 일계 */
				 ON A.CORP_CODE = AD.CORP_CODE
				 AND A.HEAD_CUST = AD.HEAD_CUST
				 AND A.CUST_CODE = AD.CUST_CODE
				 LEFT JOIN (
				 SELECT  SUBSTR(SALE_DATE,1,6) AS SALE_MONTH,CORP_CODE, HEAD_CUST, CUST_CODE, SUM(SALE_BOX) AS SALE_BOX, SUM(SALE_WEIGHT) AS SALE_WEIGHT, SUM(SALE_AMT) AS SALE_AMT, SUM(SALE_VAT) AS SALE_VAT 
				 FROM MP_CUST_RECORD
				 WHERE SALE_DATE BETWEEN  TO_CHAR(DATE(#strtDate#),'YYYYMMDD') AND TO_CHAR(DATE(#lastDate#),'YYYYMMDD')
				 GROUP BY  SUBSTR(SALE_DATE,1,6),CORP_CODE, HEAD_CUST, CUST_CODE
				 ) AU   /* 누계 */
				 ON A.CORP_CODE = AU.CORP_CODE
				 AND A.HEAD_CUST = AU.HEAD_CUST
				 AND A.CUST_CODE = AU.CUST_CODE
				 LEFT JOIN 
				 (
				 SELECT  SUBSTR(SALE_DATE,1,6) AS SALE_MONTH,CORP_CODE, HEAD_CUST, CUST_CODE, SUM(SALE_BOX) AS SALE_BOX, SUM(SALE_WEIGHT) AS SALE_WEIGHT, SUM(SALE_AMT) AS SALE_AMT, SUM(SALE_VAT) AS SALE_VAT 
				 FROM MP_CUST_RECORD
				 WHERE SALE_DATE BETWEEN TO_CHAR( DATE_TRUNC('MONTH', DATE(#strtDate#) - INTERVAL '1 MONTHS')::DATE ,'YYYYMMDD') 
				 AND CASE WHEN #lastDate# = TO_CHAR( DATE_TRUNC('MONTH', DATE(#lastDate#) + INTERVAL '1 MONTHS')::DATE - 1,'YYYYMMDD') THEN
			           TO_CHAR( DATE_TRUNC('MONTH', DATE(SUBSTR(#lastDate#,1,6)||'01'))::DATE - 1,'YYYYMMDD')
			        ELSE  
			     		  TO_CHAR( DATE(#lastDate#) - INTERVAL '1 MONTHS','YYYYMMDD')
			        END
				 GROUP BY  SUBSTR(SALE_DATE,1,6),CORP_CODE, HEAD_CUST, CUST_CODE
				 ) AM  /* 전월 */
				 ON A.CORP_CODE = AM.CORP_CODE
				 AND A.HEAD_CUST = AM.HEAD_CUST
				 AND A.CUST_CODE = AM.CUST_CODE	 	 
				 LEFT JOIN 
				 (
				 SELECT  SUBSTR(SALE_DATE,1,6) AS SALE_MONTH,CORP_CODE, HEAD_CUST, CUST_CODE, SUM(SALE_BOX) AS SALE_BOX, SUM(SALE_WEIGHT) AS SALE_WEIGHT, SUM(SALE_AMT) AS SALE_AMT, SUM(SALE_VAT) AS SALE_VAT 
				 FROM MP_CUST_RECORD
				 WHERE SALE_DATE BETWEEN TO_CHAR( DATE_TRUNC('MONTH', DATE(#lastDate#) - INTERVAL '12 MONTHS')::DATE,'YYYYMMDD') AND TO_CHAR( DATE(#lastDate#) - INTERVAL '12 MONTHS','YYYYMMDD')
				 GROUP BY  SUBSTR(SALE_DATE,1,6),CORP_CODE, HEAD_CUST, CUST_CODE
				 ) AY  /* 전년 */
				 ON A.CORP_CODE = AY.CORP_CODE
				 AND A.HEAD_CUST = AY.HEAD_CUST
				 AND A.CUST_CODE = AY.CUST_CODE	 
				LEFT JOIN MP_CUST_INFO B
				ON A.CORP_CODE = B.CORP_CODE
				AND A.CUST_CODE = B.CUST_CODE
				LEFT JOIN MP_CUST_HIST C
				ON B.CORP_CODE = C.CORP_CODE
				AND B.CUST_CODE = C.CUST_CODE
				WHERE A.CORP_CODE = #corpCode#
				<isNotEmpty property="teamCode">
					<isNotEqual property="teamCode" compareValue="ALL">
					 	AND C.PART_CODE = #teamCode# 
					</isNotEqual>
				</isNotEmpty>
			)
			SELECT
			SR.SALE_MONTH                                                                       AS sale_month       /* 판매월  */  
			,CASE WHEN SALEMAN.HEAD_NAME IS NULL THEN '' ELSE SALEMAN.HEAD_NAME END             AS head_name        /* 영업부문명 */
			,CASE WHEN SALEMAN.DEPT_NAME IS NULL THEN '' ELSE SALEMAN.DEPT_NAME END             AS team_name        /* 영업파트명 */
			,SR.SALESMAN                                                                        AS salesman_id      /* 영업사원번호 */
			,CASE WHEN SALEMAN.SALESNAME IS NULL THEN SR.SALESMAN ELSE SALEMAN.SALESNAME END    AS salesman         /* 영업사원명  */
			,SR.CUST_CODE                                                                       AS cust_code        /* 거래처코드 */
			,"FN_GET_CUSTCODENM"(SR.CORP_CODE, SR.CUST_CODE) 		                            AS cust_name        /* 거래처명 */
			,"FN_GET_TMCODEXDNM"(SR.CORP_CODE,'SD005',SR.DIST_TYPE)                             AS dist_type        /* 유통경로명 */
			,( TO_CHAR(CASE WHEN #lastDate# = TO_CHAR( DATE_TRUNC('MONTH', DATE(#lastDate#) + INTERVAL '1 MONTHS')::DATE - 1,'YYYYMMDD') THEN
			     (DATE_TRUNC('MONTH', DATE(SUBSTR(#lastDate#,1,6)||'01'))::DATE - 1 ) - DATE_TRUNC('MONTH', DATE(#strtDate#) - INTERVAL '1 MONTHS')
			   ELSE  
			     (DATE(#lastDate#) - INTERVAL '1 MONTHS')  - DATE_TRUNC('MONTH', DATE(#strtDate#) - INTERVAL '1 MONTHS')
			   END,'DD')::INT   
			)                                                                                   AS day_cnt          /* 전월일수 */
			,CASE WHEN SR.D_SALE_WEIGHT IS NULL THEN 0 ELSE SR.D_SALE_WEIGHT END                AS sale_weight      /* 매출중량 */  
			,CASE WHEN SR.D_SALE_WEIGHT IS NULL THEN 0 ELSE FLOOR((SR.D_SALE_AMT+SR.D_SALE_VAT)/NULLIF(SR.D_SALE_WEIGHT,0)) END  AS avg_price  /* 평균단가 */
			,CASE WHEN SR.D_SALE_AMT IS NULL THEN 0 ELSE SR.D_SALE_AMT+SR.D_SALE_VAT END        AS sale_amt         /* 매출금액  */
			,SR.U_SALE_WEIGHT                                		                            AS total_weight     /* 누계중량 */
			,SR.U_SALE_AMT+SR.U_SALE_VAT                                                        AS total_amt        /* 누계금액 */
			,CASE WHEN D.TARGET_WEIGHT  IS NULL THEN 0 ELSE D.TARGET_WEIGHT END                 AS target_weight    /* 목표중량 */
			,CASE WHEN D.TARGET_WEIGHT  IS NULL THEN 0 ELSE ROUND((SR.U_SALE_WEIGHT / NULLIF(D.TARGET_WEIGHT,0) )*100,1) END  AS rate /* 달성율 */ 
			,CASE WHEN SR.M_SALE_WEIGHT IS NULL THEN 0 ELSE SR.M_SALE_WEIGHT END                AS month_sync       /* 전월동기 */
			,CASE WHEN SR.M_SALE_WEIGHT IS NULL THEN 0 ELSE FLOOR(SR.M_SALE_WEIGHT/
			   (TO_CHAR(CASE WHEN #lastDate# = TO_CHAR( DATE_TRUNC('MONTH', DATE(#lastDate#) + INTERVAL '1 MONTHS')::DATE - 1,'YYYYMMDD') THEN
			     (DATE_TRUNC('MONTH', DATE(SUBSTR(#lastDate#,1,6)||'01'))::DATE - 1 ) - DATE_TRUNC('MONTH', DATE(#strtDate#) - INTERVAL '1 MONTHS')
			   ELSE  
			     (DATE(#lastDate#) - INTERVAL '1 MONTHS')  - DATE_TRUNC('MONTH', DATE(#strtDate#) - INTERVAL '1 MONTHS')
			   END,'DD')::INT))  END                                        				    AS pasale_weight    /* 전월평균 */
			,CASE WHEN SR.M_SALE_WEIGHT IS NULL THEN SR.U_SALE_WEIGHT ELSE (SR.U_SALE_WEIGHT - SR.M_SALE_WEIGHT ) END  AS variation_mon_weight /* 전월증감중량 */
			,CASE WHEN SR.Y_SALE_WEIGHT IS NULL THEN 0 ELSE SR.Y_SALE_WEIGHT  END               AS yyyy_sync        /* 전년동기 */
			,CASE WHEN SR.Y_SALE_WEIGHT IS NULL THEN SR.U_SALE_WEIGHT ELSE (SR.U_SALE_WEIGHT - SR.Y_SALE_WEIGHT ) END  AS variation_yy_weight  /* 전년증감중량 */
			FROM SALE_RECORD SR
			LEFT JOIN 
			(
				SELECT DISTINCT USR.CORP_CODE AS CORP_CODE,DEPT.HEAD_CODE AS HEAD_CODE, USR.DEPT_CODE AS PART_CODE, USR.USER_CODE AS SALESMAN, USR.USER_NAME AS SALESNAME, DEPT.DEPT_NAME AS DEPT_NAME, ORGU.HEAD_NAME AS HEAD_NAME
				FROM  openmps.TM_USERXM USR 
				LEFT JOIN openmps.TM_DEPTXM DEPT 
				ON USR.CORP_CODE = DEPT.CORP_CODE 
				AND USR.DEPT_CODE = DEPT.DEPT_CODE
				LEFT JOIN openmps.TM_ORGUXM ORGU 
				ON DEPT.CORP_CODE = ORGU.CORP_CODE 
				AND DEPT.HEAD_CODE = ORGU.HEAD_CODE
				 
			) SALEMAN
			ON SR.CORP_CODE = SALEMAN.CORP_CODE
			AND ( SR.PART_CODE = SALEMAN.PART_CODE OR SALEMAN.PART_CODE IS NULL  )
			AND SR.SALESMAN = SALEMAN.SALESMAN
			LEFT JOIN 
			(
			SELECT CORP_CODE,TARGET_YYMM,HEAD_CUST,CUST_CODE,SUM(TARGET_WEIGHT) AS TARGET_WEIGHT
			FROM MP_CUSTGOAL_YYMM
			GROUP BY CORP_CODE,TARGET_YYMM,HEAD_CUST,CUST_CODE
			) D
			ON SR.CORP_CODE = D.CORP_CODE
			AND SR.CUST_CODE = D.CUST_CODE
			AND SR.HEAD_CUST = D.HEAD_CUST
			AND SR.SALE_MONTH = D.TARGET_YYMM
			WHERE ( SALEMAN.HEAD_CODE LIKE '%'  OR SALEMAN.HEAD_CODE IS NULL )
			AND SR.CORP_CODE = #corpCode#
	</select>	
	<select id="SD0611mpCustRecordDAO.selectMpCustRecordListTotCnt_S" parameterClass="SD0611mpCustRecordSerarchVO" resultClass="int">
			 SELECT COUNT(*) AS cnt
			 FROM (
				 SELECT A.SALE_MONTH, A.CORP_CODE, B.DIST_TYPE, SALE_WEIGHT
				 FROM
				 (
				 SELECT  SUBSTR(SALE_DATE,1,6) AS SALE_MONTH,CORP_CODE, CUST_CODE, SUM(SALE_WEIGHT) AS SALE_WEIGHT
				 FROM MP_CUST_RECORD
				 WHERE SALE_DATE BETWEEN #strtDate# AND #lastDate# 
				 GROUP BY  SUBSTR(SALE_DATE,1,6),CORP_CODE, CUST_CODE
				 ) A  /* 조회일자 */	 
				LEFT JOIN MP_CUST_INFO B
				ON A.CORP_CODE = B.CORP_CODE
				AND A.CUST_CODE = B.CUST_CODE
				LEFT JOIN MP_CUST_HIST C
				ON B.CORP_CODE = C.CORP_CODE
				AND B.CUST_CODE = C.CUST_CODE
				WHERE A.CORP_CODE = #corpCode#
				<isNotEmpty property="teamCode">
					<isNotEqual property="teamCode" compareValue="ALL">
					 	AND C.PART_CODE = #teamCode# 
					</isNotEqual>
				</isNotEmpty>
				) SO
	</select>
	
	
	<select id="SD0611mpCustRecordDAO.selectDetailTab1MpCustRecordList_D" parameterClass="SD0611mpCustRecordSerarchVO" resultClass="egovMap">
			WITH SALE_RECORD AS (
			   SELECT A.SALE_MONTH AS SALE_MONTH, C.SALESMAN AS SALESMAN, A.CORP_CODE AS CORP_CODE, A.HEAD_CUST AS HEAD_CUST, A.CUST_CODE AS CUST_CODE, A.PRO_CODE AS PRO_CODE, C.PART_CODE AS PART_CODE, 
				A.SALE_BOX AS SALE_BOX,	A.SALE_WEIGHT AS SALE_WEIGHT, A.SALE_AMT AS SALE_AMT, A.SALE_VAT AS SALE_VAT, 
				AD.SALE_BOX AS D_SALE_BOX,AD.SALE_WEIGHT AS D_SALE_WEIGHT, AD.SALE_AMT AS D_SALE_AMT, AD.SALE_VAT AS D_SALE_VAT,
				AU.SALE_BOX AS U_SALE_BOX,AU.SALE_WEIGHT AS U_SALE_WEIGHT, AU.SALE_AMT AS U_SALE_AMT, AU.SALE_VAT AS U_SALE_VAT,
				AM.SALE_BOX AS M_SALE_BOX,AM.SALE_WEIGHT AS M_SALE_WEIGHT, AM.SALE_AMT AS M_SALE_AMT, AM.SALE_VAT AS M_SALE_VAT,
				AY.SALE_BOX AS Y_SALE_BOX,AY.SALE_WEIGHT AS Y_SALE_WEIGHT, AY.SALE_AMT AS Y_SALE_AMT, AY.SALE_VAT AS Y_SALE_VAT
				FROM
				(
				 SELECT  SUBSTR(SALE_DATE,1,6) AS SALE_MONTH,CORP_CODE, HEAD_CUST, CUST_CODE, PRO_CODE, SUM(SALE_BOX) AS SALE_BOX, SUM(SALE_WEIGHT) AS SALE_WEIGHT, SUM(SALE_AMT) AS SALE_AMT, SUM(SALE_VAT) AS SALE_VAT 
				 FROM MP_CUST_RECORD
				 WHERE SALE_DATE BETWEEN #strtDate# AND #lastDate# 
				 GROUP BY  SUBSTR(SALE_DATE,1,6),CORP_CODE, HEAD_CUST, CUST_CODE, PRO_CODE
				 ) A  /* 조회일자 */
				 LEFT JOIN (
				 SELECT  SUBSTR(SALE_DATE,1,6) AS SALE_MONTH,CORP_CODE, HEAD_CUST, CUST_CODE, PRO_CODE, SUM(SALE_BOX) AS SALE_BOX, SUM(SALE_WEIGHT) AS SALE_WEIGHT, SUM(SALE_AMT) AS SALE_AMT, SUM(SALE_VAT) AS SALE_VAT 
				 FROM MP_CUST_RECORD
				 WHERE SALE_DATE  = #lastDate#
				 GROUP BY  SUBSTR(SALE_DATE,1,6),CORP_CODE, HEAD_CUST, CUST_CODE, PRO_CODE
				 ) AD   /* 일계 */
				 ON A.CORP_CODE = AD.CORP_CODE
				 AND A.HEAD_CUST = AD.HEAD_CUST
				 AND A.CUST_CODE = AD.CUST_CODE
				 AND A.PRO_CODE = AD.PRO_CODE
				 LEFT JOIN (
				 SELECT  SUBSTR(SALE_DATE,1,6) AS SALE_MONTH,CORP_CODE, HEAD_CUST, CUST_CODE, PRO_CODE, SUM(SALE_BOX) AS SALE_BOX, SUM(SALE_WEIGHT) AS SALE_WEIGHT, SUM(SALE_AMT) AS SALE_AMT, SUM(SALE_VAT) AS SALE_VAT 
				 FROM MP_CUST_RECORD
				 WHERE SALE_DATE BETWEEN  TO_CHAR(DATE(#strtDate#),'YYYYMMDD') AND TO_CHAR(DATE(#lastDate#),'YYYYMMDD')
				 GROUP BY  SUBSTR(SALE_DATE,1,6),CORP_CODE, HEAD_CUST, CUST_CODE, PRO_CODE
				 ) AU   /* 누계 */
				 ON A.CORP_CODE = AU.CORP_CODE
				 AND A.HEAD_CUST = AU.HEAD_CUST
				 AND A.CUST_CODE = AU.CUST_CODE
				 AND A.PRO_CODE = AU.PRO_CODE	 	
				 LEFT JOIN 
				 (
				 SELECT  SUBSTR(SALE_DATE,1,6) AS SALE_MONTH,CORP_CODE, HEAD_CUST, CUST_CODE, PRO_CODE, SUM(SALE_BOX) AS SALE_BOX, SUM(SALE_WEIGHT) AS SALE_WEIGHT, SUM(SALE_AMT) AS SALE_AMT, SUM(SALE_VAT) AS SALE_VAT
				 FROM MP_CUST_RECORD
				 WHERE SALE_DATE BETWEEN TO_CHAR( DATE_TRUNC('MONTH', DATE(#strtDate#) - INTERVAL '1 MONTHS')::DATE ,'YYYYMMDD') 
				 AND CASE WHEN #lastDate# = TO_CHAR( DATE_TRUNC('MONTH', DATE(#lastDate#) + INTERVAL '1 MONTHS')::DATE - 1,'YYYYMMDD') THEN
			           TO_CHAR( DATE_TRUNC('MONTH', DATE(SUBSTR(#lastDate#,1,6)||'01'))::DATE - 1,'YYYYMMDD')
			        ELSE  
			     		  TO_CHAR( DATE(#lastDate#) - INTERVAL '1 MONTHS','YYYYMMDD')
			        END
				 GROUP BY  SUBSTR(SALE_DATE,1,6),CORP_CODE, HEAD_CUST, CUST_CODE, PRO_CODE
				 ) AM  /* 전월 */
				 ON A.CORP_CODE = AM.CORP_CODE
				 AND A.HEAD_CUST = AM.HEAD_CUST
				 AND A.CUST_CODE = AM.CUST_CODE
				 AND A.PRO_CODE = AM.PRO_CODE	 	 
				 LEFT JOIN 
				 (
				 SELECT  SUBSTR(SALE_DATE,1,6) AS SALE_MONTH,CORP_CODE, HEAD_CUST, CUST_CODE, PRO_CODE, SUM(SALE_BOX) AS SALE_BOX, SUM(SALE_WEIGHT) AS SALE_WEIGHT, SUM(SALE_AMT) AS SALE_AMT, SUM(SALE_VAT) AS SALE_VAT 
				 FROM MP_CUST_RECORD
				 WHERE SALE_DATE BETWEEN TO_CHAR( DATE_TRUNC('MONTH', DATE(#lastDate#) - INTERVAL '12 MONTHS')::DATE,'YYYYMMDD') AND TO_CHAR( DATE(#lastDate#) - INTERVAL '12 MONTHS','YYYYMMDD')
				 GROUP BY  SUBSTR(SALE_DATE,1,6),CORP_CODE, HEAD_CUST, CUST_CODE, PRO_CODE
				 ) AY  /* 전년 */
				 ON A.CORP_CODE = AY.CORP_CODE
				 AND A.HEAD_CUST = AY.HEAD_CUST
				 AND A.CUST_CODE = AY.CUST_CODE
				 AND A.PRO_CODE = AY.PRO_CODE	 		 
				LEFT JOIN MP_CUST_INFO B
				ON A.CORP_CODE = B.CORP_CODE
				AND A.CUST_CODE = B.CUST_CODE
				LEFT JOIN MP_CUST_HIST C
				ON B.CORP_CODE = C.CORP_CODE
				AND B.CUST_CODE = C.CUST_CODE
				WHERE A.CORP_CODE = #corpCode#
				<isNotEmpty property="teamCode">
					<isNotEqual property="teamCode" compareValue="ALL">
					 	AND C.PART_CODE = #teamCode# 
					</isNotEqual>
				</isNotEmpty>
			)
			SELECT
			SR.SALE_MONTH                                                 AS sale_month       			    /* 판매월  */  
			,SR.SALESMAN                                                  AS salesman         			    /* 영업사원명 */
			,"FN_GET_CUSTCODENM"(SR.CORP_CODE, SR.CUST_CODE) 		      AS cust_name        			    /* 거래처명 */
			,E.SALE_GROUP1                                                AS etc1_code        			    /* 품목군 */
			,"FN_GET_TMCODEXDNM"(E.CORP_CODE,'SD024',E.SALE_GROUP1)       AS etc1_name        			    /* 품목코드 */
			,E.SALE_GROUP2                                                AS pro_lcode        			    /* 품목코드 */
			,"FN_GET_TMCODEXDNM"(E.CORP_CODE,'SD025',E.SALE_GROUP2)       AS pro_lname        			    /* 품목명 */
			,SR.PRO_CODE                                                  AS pro_code         			    /* 제품코드 */
			,"FN_GET_PROCODENM"(SR.CORP_CODE, SR.PRO_CODE)                AS pro_name         			    /* 제품명 */
			,( TO_CHAR(CASE WHEN #lastDate# = TO_CHAR( DATE_TRUNC('MONTH', DATE(#lastDate#) + INTERVAL '1 MONTHS')::DATE - 1,'YYYYMMDD') THEN
			     (DATE_TRUNC('MONTH', DATE(SUBSTR(#lastDate#,1,6)||'01'))::DATE - 1 ) - DATE_TRUNC('MONTH', DATE(#strtDate#) - INTERVAL '1 MONTHS')
			   ELSE  
			     (DATE(#lastDate#) - INTERVAL '1 MONTHS')  - DATE_TRUNC('MONTH', DATE(#strtDate#) - INTERVAL '1 MONTHS')
			   END,'DD')::INT    
			)                                                             AS day_cnt                        /* 전월일수 */
			,CASE WHEN SR.D_SALE_WEIGHT IS NULL THEN 0 ELSE SR.D_SALE_WEIGHT END   AS sales_weight          /* 매출중량 */
			,CASE WHEN SR.D_SALE_WEIGHT IS NULL THEN 0 ELSE FLOOR((SR.D_SALE_AMT+SR.D_SALE_VAT)/ NULLIF(SR.D_SALE_WEIGHT,0)) END      AS avg_price  /* 평균단가 */
			,CASE WHEN SR.D_SALE_AMT IS NULL THEN 0 ELSE SR.D_SALE_AMT+SR.D_SALE_VAT END  AS sale_amt       /* 매출금액 */
			,SR.U_SALE_WEIGHT                                		                      AS total_weight   /* 누계중량 */
			,SR.U_SALE_AMT+SR.U_SALE_VAT                                                  AS total_amt      /* 누계금액 */
			,CASE WHEN D.TARGET_WEIGHT  IS NULL THEN 0 ELSE D.TARGET_WEIGHT END           AS target_weight  /* 목표중량 */
			,CASE WHEN D.TARGET_WEIGHT  IS NULL THEN 0 ELSE ROUND((SR.U_SALE_WEIGHT / NULLIF(D.TARGET_WEIGHT,0) )*100,1) END          AS rate  /* 달성율 */
			,CASE WHEN SR.M_SALE_WEIGHT IS NULL THEN 0 ELSE SR.M_SALE_WEIGHT END          AS month_sync     /* 전월동기 */
			,CASE WHEN SR.M_SALE_WEIGHT IS NULL THEN 0 ELSE FLOOR(SR.M_SALE_WEIGHT/
			   (TO_CHAR(CASE WHEN #lastDate# = TO_CHAR( DATE_TRUNC('MONTH', DATE(#lastDate#) + INTERVAL '1 MONTHS')::DATE - 1,'YYYYMMDD') THEN
			     (DATE_TRUNC('MONTH', DATE(SUBSTR(#lastDate#,1,6)||'01'))::DATE - 1 ) - DATE_TRUNC('MONTH', DATE(#strtDate#) - INTERVAL '1 MONTHS')
			   ELSE  
			     (DATE(#lastDate#) - INTERVAL '1 MONTHS')  - DATE_TRUNC('MONTH', DATE(#strtDate#) - INTERVAL '1 MONTHS')
			   END,'DD')::INT))  END                                        			 AS pasale_weight    /* 전월평균 */
			,CASE WHEN SR.M_SALE_WEIGHT IS NULL THEN SR.U_SALE_WEIGHT ELSE (SR.U_SALE_WEIGHT - SR.M_SALE_WEIGHT ) END                 AS variation_mon_weight /* 전월증감중량 */
			,CASE WHEN SR.Y_SALE_WEIGHT IS NULL THEN 0 ELSE SR.Y_SALE_WEIGHT  END        AS yyyy_sync        /* 전년동기 */
			,CASE WHEN SR.Y_SALE_WEIGHT IS NULL THEN SR.U_SALE_WEIGHT ELSE (SR.U_SALE_WEIGHT - SR.Y_SALE_WEIGHT ) END                 AS variation_yy_weight  /* 전년증감중량 */
			FROM SALE_RECORD SR
			LEFT JOIN 
			(
				SELECT DISTINCT USR.CORP_CODE AS CORP_CODE,DEPT.HEAD_CODE AS HEAD_CODE, USR.DEPT_CODE AS PART_CODE, USR.USER_CODE AS SALESMAN, USR.USER_NAME AS SALESNAME, DEPT.DEPT_NAME AS DEPT_NAME, ORGU.HEAD_NAME AS HEAD_NAME
				FROM  openmps.TM_USERXM USR 
				LEFT JOIN openmps.TM_DEPTXM DEPT 
				ON USR.CORP_CODE = DEPT.CORP_CODE 
				AND USR.DEPT_CODE = DEPT.DEPT_CODE
				LEFT JOIN openmps.TM_ORGUXM ORGU 
				ON DEPT.CORP_CODE = ORGU.CORP_CODE 
				AND DEPT.HEAD_CODE = ORGU.HEAD_CODE
			) SALEMAN
			ON SR.CORP_CODE = SALEMAN.CORP_CODE
			AND ( SR.PART_CODE = SALEMAN.PART_CODE OR SALEMAN.PART_CODE IS NULL  )
			AND SR.SALESMAN = SALEMAN.SALESMAN
			LEFT JOIN MP_ITEM_MASTER_M E
			ON SR.CORP_CODE = E.CORP_CODE
			AND SR.PRO_CODE = E.PRO_CODE
			LEFT JOIN MP_CUSTGOAL_YYMM D
			ON SR.CORP_CODE = D.CORP_CODE
			AND SR.CUST_CODE = D.CUST_CODE
			AND SR.SALE_MONTH = D.TARGET_YYMM
			AND E.SALE_GROUP2 = D.SALE_GROUP2
			WHERE ( SALEMAN.HEAD_CODE LIKE '%'  OR SALEMAN.HEAD_CODE IS NULL )
			AND SR.CORP_CODE = #corpCode#
	</select>	
	<select id="SD0611mpCustRecordDAO.selectDetailTab2MpCustRecordList_D" parameterClass="SD0611mpCustRecordSerarchVO" resultClass="egovMap">
			SELECT 
			DELV_DATE      					        AS delv_date    /* 일자 */ 
			,ORDR_NO       					        AS ordr_no      /* 전표번호 */ 
			,CODE_NAME     					        AS ordr_type    /* 구분 */ 
			,PRO_CODE                               AS pro_code     /* 제품명 */ 
			,"FN_GET_PROCODENM"(CORP_CODE,PRO_CODE) AS pro_name     /* 제품명 */ 
			,MARK*ORDR_BOX      		            AS ordr_box     /* 주문수량 */ 
			,((MARK*DELV_BOX) - (MARK*ORDR_BOX))    AS adj_box       /* 조정수량 */
			,MARK*DELV_BOX                          AS delv_box     /* 출고수량 */ 
			,MARK*DELV_WEIGHT                       AS delv_weight  /* 출고중량 */ 
			,MARK*UNIT_PRICE                        AS unit_price   /* 단가 */ 
			,MARK*DELV_AMT                          AS delv_amt     /* 공급가 */ 
			,MARK*DELV_VAT                          AS delv_vat     /* 부가세 */ 
			FROM (
			SELECT 
				A.DELV_DATE     AS DELV_DATE
				,A.ORDR_NO      AS ORDR_NO
				,C.CODE_NAME    AS CODE_NAME
				,B.CORP_CODE    AS CORP_CODE
				,B.PRO_CODE     AS PRO_CODE
				,B.ORDR_BOX     AS ORDR_BOX
				,B.DELV_BOX     AS DELV_BOX
				,B.DELV_WEIGHT  AS DELV_WEIGHT
				,B.UNIT_PRICE   AS UNIT_PRICE
				,B.DELV_AMT     AS DELV_AMT
				,B.DELV_VAT     AS DELV_VAT
				,CASE WHEN C.ETC02 = '+' THEN 1 ELSE -1 END  AS MARK 
				FROM MP_ORDER_H A
				LEFT JOIN MP_ORDER_D B
				ON A.CORP_CODE = B.CORP_CODE
				AND A.DELV_DATE = B.DELV_DATE
				AND A.ORDR_NO = B.ORDR_NO
				LEFT JOIN TM_CODEXD C
				ON A.CORP_CODE = C.CORP_CODE
				AND A.ORDR_TYPE = C.CODE_ID 
				AND GROUP_CODE = 'SD017'
				WHERE A.DELV_DATE BETWEEN #strtDate# AND #lastDate# 
				AND A.CORP_CODE = #corpCode#
			) SO
	</select>
</sqlMap>
