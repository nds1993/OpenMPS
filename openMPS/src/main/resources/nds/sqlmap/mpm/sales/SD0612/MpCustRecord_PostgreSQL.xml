<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="SD0612MpCustRecord">
	
	<typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias  alias="SD0612mpCustRecordSerarchVO" type="nds.mpm.sales.SD0604.vo.MpCustRecordVO"/>
	
	<select id="SD0612mpCustRecordDAO.selectMpCustRecordList_D" parameterClass="SD0612mpCustRecordSerarchVO" resultClass="egovMap">
			WITH SALE_RECORD AS (
			   SELECT A.SALE_MONTH AS SALE_MONTH, C.SALESMAN AS SALESMAN, A.CORP_CODE AS CORP_CODE, A.HEAD_CUST AS HEAD_CUST, A.CUST_CODE AS CUST_CODE, C.PART_CODE AS PART_CODE, A.SALE_BOX AS SALE_BOX, 
				A.SALE_WEIGHT AS SALE_WEIGHT, A.SALE_AMT AS SALE_AMT, A.SALE_VAT AS SALE_VAT, B.BIZ_START_DATE AS BIZ_START_DATE
				FROM
				(
				 SELECT  SUBSTR(SALE_DATE,1,6) AS SALE_MONTH,CORP_CODE, HEAD_CUST, CUST_CODE, SUM(SALE_BOX) AS SALE_BOX, SUM(SALE_WEIGHT) AS SALE_WEIGHT, SUM(SALE_AMT) AS SALE_AMT, SUM(SALE_VAT) AS SALE_VAT 
				 FROM MP_CUST_RECORD
				 WHERE SALE_DATE BETWEEN #strtDate# AND #lastDate# 
				 GROUP BY  SUBSTR(SALE_DATE,1,6),CORP_CODE, HEAD_CUST, CUST_CODE
				 ) A  /* 조회일자 판매실적 */
				LEFT JOIN MP_CUST_INFO B
				ON A.CORP_CODE = B.CORP_CODE
				AND A.CUST_CODE = B.CUST_CODE
				LEFT JOIN MP_CUST_HIST C
				ON B.CORP_CODE = C.CORP_CODE
				AND B.CUST_CODE = C.CUST_CODE
				WHERE A.CORP_CODE = #corpCode#
				<isNotEmpty property="teamCode">
					<isNotEqual property="teamCode" compareValue="ALL">
					 	AND C.PART_CODE = #teamCode# 
					</isNotEqual>
				</isNotEmpty>
			)
			SELECT 
			SALE_MONTH                                                       					AS sale_month       /* 판매월  */  
			,CASE WHEN DEPT_NAME IS NULL THEN '' ELSE DEPT_NAME END             				AS team_name        /* 영업파트명 */			
			,SALESMAN                                                        					AS salesman_id      /* 영업사원번호 */
			,CASE WHEN SALESNAME IS NULL THEN SALESMAN ELSE SALESNAME END    					AS salesman         /* 영업사원명  */
			,SUM(TOTAL_WEIGHT)                                               					AS ytarget_weight   /* 년간목표  */
			,SUM(SALE_WEIGHT)                                		         					AS ysale_weight     /* 년간판매실적  */
			,CASE WHEN SUM(TOTAL_WEIGHT) = 0 THEN 0 ELSE ROUND((SUM(SALE_WEIGHT)/SUM(TOTAL_WEIGHT)*100),1) END         AS ygoal_rate       /* 년간달성율  */
			,SUM(TARGET_WEIGHT)                                              					AS cur_weight       /* 기존목표  */
			,SUM(CSALE_WEIGHT)                                		         					AS csale_weight     /* 기존판매실적  */
			,CASE WHEN SUM(TARGET_WEIGHT) = 0 THEN 0 ELSE ROUND((SUM(CSALE_WEIGHT)/SUM(TARGET_WEIGHT)*100),1) END      AS cgoal_rate       /* 기존달성율  */
			,CASE WHEN SUM(TOTAL_WEIGHT) = 0 THEN 0 ELSE (SUM(TOTAL_WEIGHT)-SUM(TARGET_WEIGHT)) END   				   AS new_weight       /* 신규목표  */
			,SUM(NEW_SALE_WEIGHT)                                            					AS nsale_weight     /* 신규판매실적  */
			,CASE WHEN (SUM(TOTAL_WEIGHT)-SUM(TARGET_WEIGHT)) > 0 THEN  ROUND((SUM(NEW_SALE_WEIGHT)/(SUM(TOTAL_WEIGHT)-SUM(TARGET_WEIGHT))*100),1) ELSE SUM(NEW_SALE_WEIGHT) END        AS ngoal_rate       /* 달성율  */
			,SUM(NEWNUM)                                                     					AS new_box          /* 신규  */
			FROM
			(
				SELECT
				SR.SALE_MONTH                                           AS SALE_MONTH
				,SR.SALESMAN                                            AS SALESMAN
				,SALEMAN.SALESNAME                                      AS SALESNAME
				,SALEMAN.DEPT_NAME                                      AS DEPT_NAME
				,SR.CORP_CODE                                           AS CORP_CODE
				,SR.CUST_CODE                                           AS CUST_CODE 
				,CASE WHEN E.TARGET_WEIGHT IS NULL THEN 0 ELSE E.TARGET_WEIGHT END   AS TOTAL_WEIGHT
				,CASE WHEN SR.SALE_WEIGHT IS NULL THEN 0 ELSE SR.SALE_WEIGHT END AS SALE_WEIGHT
				,CASE WHEN D.TARGET_WEIGHT IS NULL THEN 0 ELSE D.TARGET_WEIGHT END   AS TARGET_WEIGHT
				,CASE WHEN D.CUST_CODE IS NULL THEN 0 ELSE CASE WHEN SR.SALE_WEIGHT IS NULL THEN 0 ELSE SR.SALE_WEIGHT END END AS CSALE_WEIGHT
				,CASE WHEN D.CUST_CODE IS NULL THEN SR.SALE_WEIGHT ELSE 0 END      AS NEW_SALE_WEIGHT
				,CASE WHEN SR.BIZ_START_DATE = SUBSTR(#strtDate#,1,4) THEN 1 ELSE 0 END   AS NEWNUM                       
				FROM SALE_RECORD SR
				LEFT JOIN 
				(
					SELECT DISTINCT USR.CORP_CODE AS CORP_CODE,DEPT.HEAD_CODE AS HEAD_CODE, USR.DEPT_CODE AS PART_CODE, USR.USER_CODE AS SALESMAN, USR.USER_NAME AS SALESNAME, DEPT.DEPT_NAME AS DEPT_NAME, ORGU.HEAD_NAME AS HEAD_NAME
					FROM  openmps.TM_USERXM USR 
					LEFT JOIN openmps.TM_DEPTXM DEPT 
					ON USR.CORP_CODE = DEPT.CORP_CODE 
					AND USR.DEPT_CODE = DEPT.DEPT_CODE
					LEFT JOIN openmps.TM_ORGUXM ORGU 
					ON DEPT.CORP_CODE = ORGU.CORP_CODE 
					AND DEPT.HEAD_CODE = ORGU.HEAD_CODE
				) SALEMAN
				ON SR.CORP_CODE = SALEMAN.CORP_CODE
				AND ( SR.PART_CODE = SALEMAN.PART_CODE OR SALEMAN.PART_CODE IS NULL  )
				AND SR.SALESMAN = SALEMAN.SALESMAN
				LEFT JOIN 
				(
				SELECT CORP_CODE,TARGET_YYMM,HEAD_CUST,CUST_CODE,SUM(TARGET_WEIGHT) AS TARGET_WEIGHT
				FROM MP_CUSTGOAL_YYMM
				GROUP BY CORP_CODE,TARGET_YYMM,HEAD_CUST,CUST_CODE
				) D
				ON SR.CORP_CODE = D.CORP_CODE
				AND SR.CUST_CODE = D.CUST_CODE
				AND SR.HEAD_CUST = D.HEAD_CUST
				AND SR.SALE_MONTH = D.TARGET_YYMM
				LEFT JOIN MP_TARGET_YYMM E
				ON  SR.CORP_CODE = E.CORP_CODE
				AND SALEMAN.HEAD_CODE = E.HEAD_CODE 
				AND ( SR.PART_CODE = E.PART_CODE OR SALEMAN.PART_CODE IS NULL  )
				AND SR.SALE_MONTH = E.TARGET_YYMM
				AND SR.SALESMAN = E.SALESMAN
				WHERE ( SALEMAN.HEAD_CODE LIKE '%'  OR SALEMAN.HEAD_CODE IS NULL )
			  AND SR.CORP_CODE = #corpCode#
			) CUST_RECODE
			GROUP BY SALE_MONTH, CORP_CODE, DEPT_NAME, SALESMAN, SALESNAME
	</select>	
	
	<select id="SD0612mpCustRecordDAO.selectMpCustRecordListTotCnt_S" parameterClass="SD0612mpCustRecordSerarchVO" resultClass="int">
		 SELECT COUNT(*)  cnt
		 FROM (
				 SELECT A.SALE_MONTH, A.CORP_CODE, C.SALESMAN, sum(SALE_WEIGHT)
				 FROM
				 (
				 SELECT  SUBSTR(SALE_DATE,1,6) AS SALE_MONTH,CORP_CODE, CUST_CODE, SUM(SALE_WEIGHT) AS SALE_WEIGHT
				 FROM MP_CUST_RECORD
				 WHERE SALE_DATE BETWEEN #strtDate# AND #lastDate# 
				 GROUP BY  SUBSTR(SALE_DATE,1,6),CORP_CODE, CUST_CODE
				 ) A  /* 조회일자 */	 
				LEFT JOIN MP_CUST_INFO B
				ON A.CORP_CODE = B.CORP_CODE
				AND A.CUST_CODE = B.CUST_CODE
				LEFT JOIN MP_CUST_HIST C
				ON B.CORP_CODE = C.CORP_CODE
				AND B.CUST_CODE = C.CUST_CODE 
				WHERE A.CORP_CODE = #corpCode#
				<isNotEmpty property="teamCode">
					<isNotEqual property="teamCode" compareValue="ALL">
					 	AND C.PART_CODE = #teamCode# 
					</isNotEqual>
				</isNotEmpty>
				GROUP BY A.SALE_MONTH, A.CORP_CODE, C.SALESMAN
			) SO
	</select>
	
	<select id="SD0612mpCustRecordDAO.selectDetailMpCustRecordList_D" parameterClass="SD0612mpCustRecordSerarchVO" resultClass="egovMap">
			WITH SALE_RECORD AS (
			   SELECT A.SALE_MONTH AS SALE_MONTH, C.SALESMAN AS SALESMAN, A.CORP_CODE AS CORP_CODE, A.HEAD_CUST AS HEAD_CUST, A.CUST_CODE AS CUST_CODE, A.PRO_CODE AS PRO_CODE, C.PART_CODE AS PART_CODE, A.SALE_BOX AS SALE_BOX, 
				A.SALE_WEIGHT AS SALE_WEIGHT, A.SALE_AMT AS SALE_AMT, A.SALE_VAT AS SALE_VAT, B.BIZ_START_DATE AS BIZ_START_DATE, B.DIST_TYPE AS DIST_TYPE,
				AU.SALE_WEIGHT AS U_SALE_WEIGHT, AU.SALE_AMT AS U_SALE_AMT, AU.SALE_VAT AS U_SALE_VAT
				FROM
				(
				 SELECT  SUBSTR(SALE_DATE,1,6) AS SALE_MONTH,CORP_CODE, HEAD_CUST, CUST_CODE, PRO_CODE, SUM(SALE_BOX) AS SALE_BOX, SUM(SALE_WEIGHT) AS SALE_WEIGHT, SUM(SALE_AMT) AS SALE_AMT, SUM(SALE_VAT) AS SALE_VAT 
				 FROM MP_CUST_RECORD
				 WHERE SALE_DATE BETWEEN #strtDate# AND #lastDate#
				 GROUP BY  SUBSTR(SALE_DATE,1,6),CORP_CODE, HEAD_CUST, CUST_CODE, PRO_CODE
				 ) A  /* 조회일자 판매실적 */
				 LEFT JOIN (
				 SELECT  SUBSTR(SALE_DATE,1,6) AS SALE_MONTH,CORP_CODE, HEAD_CUST, CUST_CODE, PRO_CODE, SUM(SALE_BOX) AS SALE_BOX, SUM(SALE_WEIGHT) AS SALE_WEIGHT, SUM(SALE_AMT) AS SALE_AMT, SUM(SALE_VAT) AS SALE_VAT 
				 FROM MP_CUST_RECORD
				 WHERE SALE_DATE BETWEEN  TO_CHAR(DATE(SUBSTR(#strtDate#,1,4)||'0101'),'YYYYMMDD') AND TO_CHAR(DATE(#lastDate#),'YYYYMMDD')
				 GROUP BY  SUBSTR(SALE_DATE,1,6),CORP_CODE, HEAD_CUST, CUST_CODE, PRO_CODE
				 ) AU   /* 누계 */
				 ON A.CORP_CODE = AU.CORP_CODE
				 AND A.HEAD_CUST = AU.HEAD_CUST
				 AND A.CUST_CODE = AU.CUST_CODE
				 AND A.PRO_CODE = AU.PRO_CODE	 
				LEFT JOIN MP_CUST_INFO B
				ON A.CORP_CODE = B.CORP_CODE
				AND A.CUST_CODE = B.CUST_CODE
				LEFT JOIN MP_CUST_HIST C
				ON B.CORP_CODE = C.CORP_CODE
				AND B.CUST_CODE = C.CUST_CODE
				WHERE A.CORP_CODE = #corpCode#
				<isNotEmpty property="teamCode">
					<isNotEqual property="teamCode" compareValue="ALL">
					 	AND C.PART_CODE = #teamCode# 
					</isNotEqual>
				</isNotEmpty>
			)
			SELECT
			SALE_MONTH                                                   			AS sale_month           /* 판매월  */ 
			,SALESMAN                                                    			AS alesman              /* 영업사원명  */
			,"FN_GET_TMCODEXDNM"(CORP_CODE,'SD005',DIST_TYPE)            			AS dist_type 	        /* 유통경로명 */
			,CASE WHEN BIZ_START_DATE IS NULL THEN '' ELSE BIZ_START_DATE END    	AS biz_start_date       /* 거래개시일 */
			,CASE WHEN SUBSTR(BIZ_START_DATE,1,4) = SUBSTR(#strtDate#,1,4) THEN '신규' ELSE '재거래' END   AS biz_gubn /* 구분 */  
			,"FN_GET_CUSTCODENM"(CORP_CODE, CUST_CODE) 		             			AS cust_name 		    /* 거래처명 */
			,"FN_GET_TMCODEXDNM"(CORP_CODE,'SD025',SALE_GROUP2)          			AS sale_group2          /* 품목명 */
			,SUM(SALE_BOX)                                               			AS sale_box             /* 출고수량 */
			,SUM(SALE_WEIGHT)                                 		       			AS sale_weight			/* 출고중량 */
			,SUM(SALE_AMT+SALE_VAT)                        		          			AS sale_amt 			/* 매출금액 */
			,SUM(U_SALE_WEIGHT)                                		    			AS ysale_weight 		/* 년간중량 */
			,SUM(U_SALE_AMT+U_SALE_VAT)                                  			AS ysale_amt 			/* 년간금액 */
			,SUM(TARGET_WEIGHT)														AS target_weight 		/* 목표중량 */
			,CASE WHEN SUM(TARGET_WEIGHT) = 0 THEN 0 ELSE (SUM(U_SALE_WEIGHT)/SUM(TARGET_WEIGHT)*100) END  AS goal_rate /* 달성율 */
			FROM
			(
			SELECT
			SR.SALE_MONTH                                           AS SALE_MONTH
			,SR.SALESMAN                                            AS SALESMAN
			,SR.CORP_CODE                                           AS CORP_CODE
			,SR.DIST_TYPE                                           AS DIST_TYPE
			,SR.BIZ_START_DATE                                      AS BIZ_START_DATE 
			,SR.CUST_CODE 		                                      AS CUST_CODE
			,E.SALE_GROUP2                                          AS SALE_GROUP2
			,SR.SALE_BOX                                            AS SALE_BOX
			,SR.SALE_WEIGHT                                  		  AS SALE_WEIGHT
			,SR.SALE_AMT                                            AS SALE_AMT
			,SR.SALE_VAT                        		              AS SALE_VAT
			,SR.U_SALE_WEIGHT                                		  AS U_SALE_WEIGHT
			,SR.U_SALE_AMT                                          AS U_SALE_AMT
			,SR.U_SALE_VAT                                          AS U_SALE_VAT
			,CASE WHEN D.TARGET_WEIGHT IS NULL THEN 0 ELSE D.TARGET_WEIGHT END   AS TARGET_WEIGHT
			FROM SALE_RECORD SR
			LEFT JOIN 
			(
				SELECT DISTINCT USR.CORP_CODE AS CORP_CODE,DEPT.HEAD_CODE AS HEAD_CODE, USR.DEPT_CODE AS PART_CODE, USR.USER_CODE AS SALESMAN, USR.USER_NAME AS SALESNAME, DEPT.DEPT_NAME AS DEPT_NAME, ORGU.HEAD_NAME AS HEAD_NAME
				FROM  openmps.TM_USERXM USR 
				LEFT JOIN openmps.TM_DEPTXM DEPT 
				ON USR.CORP_CODE = DEPT.CORP_CODE 
				AND USR.DEPT_CODE = DEPT.DEPT_CODE
				LEFT JOIN openmps.TM_ORGUXM ORGU 
				ON DEPT.CORP_CODE = ORGU.CORP_CODE 
				AND DEPT.HEAD_CODE = ORGU.HEAD_CODE
			) SALEMAN
			ON SR.CORP_CODE = SALEMAN.CORP_CODE
			AND ( SR.PART_CODE = SALEMAN.PART_CODE OR SALEMAN.PART_CODE IS NULL  )
			AND SR.SALESMAN = SALEMAN.SALESMAN
			LEFT JOIN MP_ITEM_MASTER_M E
			ON SR.CORP_CODE = E.CORP_CODE
			AND SR.PRO_CODE = E.PRO_CODE
			LEFT JOIN MP_CUSTGOAL_YYMM D
			ON SR.CORP_CODE = D.CORP_CODE
			AND SR.CUST_CODE = D.CUST_CODE
			AND SR.SALE_MONTH = D.TARGET_YYMM
			AND E.SALE_GROUP2 = D.SALE_GROUP2
			WHERE ( SALEMAN.HEAD_CODE LIKE '%'  OR SALEMAN.HEAD_CODE IS NULL )
			AND SR.CORP_CODE = #corpCode#
			) CUST_RECODE
			GROUP BY SALE_MONTH, SALESMAN, CORP_CODE, CUST_CODE, DIST_TYPE, BIZ_START_DATE, SALE_GROUP2		
	</select>	
</sqlMap>
