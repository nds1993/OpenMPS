<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="TMCOUR50">
	
	<typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias  alias="TMCOUR50SerarchVO" type="nds.tmm.common.TMCOUR50.vo.TMCOUR50VO"/>
	
	<resultMap id="TMCOUR50" class="nds.tmm.common.TMCOUR50.vo.TMCOUR50VO">
		<result property="corpCode" column="corp_code" columnIndex="1"/>
		<result property="groupCode" column="group_code" columnIndex="2"/>
		<result property="menuCode" column="menu_code" columnIndex="3"/>
		<result property="systemCode" column="system_code" columnIndex="4"/>
		<result property="selectAuth" column="select_auth" columnIndex="5"/>
		<result property="insertAuth" column="insert_auth" columnIndex="6"/>
		<result property="deleteAuth" column="delete_auth" columnIndex="7"/>
		<result property="saveAuth" column="save_auth" columnIndex="8"/>
		<result property="excelAuth" column="excel_auth" columnIndex="9"/>
		<result property="printAuth" column="print_auth" columnIndex="10"/>
		<result property="mdUser" column="md_user" columnIndex="11"/>
		<result property="mdDate" column="md_date" columnIndex="12"/>
		<result property="crUser" column="cr_user" columnIndex="13"/>
		<result property="crDate" column="cr_date" columnIndex="14"/>
	</resultMap>
	
	<insert id="TMCOUR50DAO.insertTMCOUR50">
		<![CDATA[
			INSERT INTO openmps.tm_authxm 
				( corp_code
				  , group_code
				  , menu_code
				  , system_code
				  , select_auth
				  , insert_auth
				  , delete_auth
				  , save_auth
				  , excel_auth
				  , print_auth
				  , md_user
				  , md_date
				  , cr_user
				  , cr_date )
			VALUES ( #corpCode#
				  , #groupCode#
				  , #menuCode#
				  , #systemCode#
				  , #selectAuth#
				  , #insertAuth#
				  , #deleteAuth#
				  , #saveAuth#
				  , #excelAuth#
				  , #printAuth#
				  , #mdUser#
				  , #mdDate#
				  , #crUser#
				  , now() )
		]]>
	</insert>
	
	<update id="TMCOUR50DAO.updateTMCOUR50">
		<![CDATA[
			UPDATE openmps.tm_authxm
			SET corp_code=#corpCode#
				, group_code=#groupCode#
				, menu_code=#menuCode#
				, system_code=#systemCode#
				, select_auth=#selectAuth#
				, insert_auth=#insertAuth#
				, delete_auth=#deleteAuth#
				, save_auth=#saveAuth#
				, excel_auth=#excelAuth#
				, print_auth=#printAuth#
				, md_user=#mdUser#
				, md_date=now()
						WHERE corp_code=#corpCode#
								AND group_code=#groupCode#
								AND menu_code=#menuCode#
				]]>
	</update>
	
	<delete id="TMCOUR50DAO.deleteTMCOUR50">
		<![CDATA[
			DELETE FROM openmps.tm_authxm 
						WHERE corp_code=#corpCode#
								AND group_code=#groupCode#
								AND menu_code=#menuCode#
				]]>
	</delete>
	
	<select id="TMCOUR50DAO.selectTMCOUR50_S" resultMap="TMCOUR50">
		<![CDATA[
			SELECT
				corp_code
				, group_code
				, menu_code
				, system_code
				, select_auth
				, insert_auth
				, delete_auth
				, save_auth
				, excel_auth
				, print_auth
				, md_user
				, md_date
				, cr_user
				, cr_date
			FROM openmps.tm_authxm
						WHERE corp_code=#corpCode#
								AND group_code=#groupCode#
								AND menu_code=#menuCode#
				]]>
	</select>
	<sql id="select_mps_treeBody">
	  	WITH RECURSIVE t(hierarchy, menu_code, menu_name ,up_code, LEVEL,sort_order, navi) AS (
		   SELECT sort_order::varchar || ARRAY[menu_code] AS hierarchy
			 ,menu_code::varchar
			 ,menu_name
			 ,up_code::varchar
			 ,0
			 ,sort_order
			 ,ARRAY[menu_name] AS navi
		   FROM   openmps.tm_menuxm
		   WHERE  up_code = '0'
		   and dele_yn = 'N'
		   UNION ALL
		   SELECT cast(t.hierarchy || a.sort_order::varchar || a.menu_code as varchar(20)[])
			 ,a.menu_code::varchar
			 ,a.menu_name
			 ,a.up_code::varchar
			 ,LEVEL+1
			 ,a.sort_order
			 ,cast(t.navi || a.menu_name as varchar(100)[]) as navi
		   FROM   openmps.tm_menuxm a
		   JOIN   t ON a.up_code = t.menu_code
		   and a.dele_yn = 'N'
		   )
		SELECT t.menu_code
		      ,t.menu_name
		      ,t.up_code
		      ,c.menu_name as up_name
		      ,t.navi
		      ,t.level
		      ,t.sort_order
		FROM   t
		left outer join tm_menuxm c on t.up_code = c.menu_code
		ORDER  BY hierarchy
	</sql>
	<sql id="select_wms_treeBody">
	  	WITH RECURSIVE t(hierarchy, menu, menunm ,upmenu, LEVEL,ord, navi) AS (
		   SELECT ord::varchar || ARRAY[menu] AS hierarchy
			 ,menu::varchar
			 ,menunm
			 ,upmenu::varchar
			 ,0
			 ,ord
			 ,ARRAY[menunm] AS navi
		   FROM   openmps.sy_menu
		   WHERE  upmenu = '0'
		   UNION ALL
		   SELECT cast(t.hierarchy || a.ord::varchar || a.menu as varchar(30)[])
			 , a.menu::varchar
			 , a.menunm
			 , a.upmenu::varchar
			 , LEVEL+1
			 , a.ord
			 , cast(t.navi || a.menunm as varchar(200)[]) as navi
		   FROM   openmps.sy_menu a
		   JOIN   t ON a.upmenu = t.menu
		   )
		SELECT t.menu as menu_code
		      ,t.menunm as menu_name
		      ,t.upmenu as up_code
		      ,c.menunm as up_name
		      ,t.navi
		      ,t.level
		      ,t.ord as sort_order
		FROM   t
		left outer join sy_menu c on t.upmenu = c.menu
		ORDER  BY hierarchy
	</sql>
	<sql id="selectWhere_fragment">
	  	from
		(
			select 'MPS' as sys_name
				,a.*
			from
			(
			<include refid="select_mps_treeBody"/>
			) a
			union all
				select 'WMS' as sys_name
				,b.*
			from
			(
			<include refid="select_wms_treeBody"/>
			) b
		) a
		left outer join tm_authxm b on a.menu_code = b.menu_code
		where up_code != '0'
		<isNotEmpty prepend="and" property="groupCode">
             b.group_code = #groupCode#
        </isNotEmpty>
	</sql>
	<select id="TMCOUR50DAO.selectTMCOUR50List_D" parameterClass="TMCOUR50SerarchVO" resultClass="egovMap">
		select 
			a.sys_name
			,a.menu_code
			,a.menu_name
			,a.up_code 
			,a.menu_name
			,array_to_string(a.navi,' > ') as navi
			,select_auth
			,insert_auth
			,delete_auth
			,save_auth
			,excel_auth
			,print_auth
		<include refid="selectWhere_fragment"/>
	</select>	
	<select id="TMCOUR50DAO.selectTMCOUR50ListTotCnt_S" parameterClass="TMCOUR50SerarchVO" resultClass="int">
		select 
			count(*)
		<include refid="selectWhere_fragment"/>
	</select>
</sqlMap>
