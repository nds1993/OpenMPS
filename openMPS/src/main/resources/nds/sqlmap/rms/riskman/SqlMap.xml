<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="koreaSJ" >

	<resultMap id="claimAvrResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
	    <result column="VALUE_CD" property="valueCd" jdbcType="VARCHAR" />
	    <result column="VALUE_NM" property="valueNm" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH1" property="data1" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH1_ALL" property="allData1" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH2" property="data2" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH2_ALL" property="allData2" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH3" property="data3" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH3_ALL" property="allData3" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH4" property="data4" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH4_ALL" property="allData4" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH5" property="data5" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH5_ALL" property="allData5" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH6" property="data6" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH6_ALL" property="allData6" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH7" property="data7" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH7_ALL" property="allData7" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH8" property="data8" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH8_ALL" property="allData8" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH9" property="data9" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH9_ALL" property="allData9" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH10" property="data10" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH10_ALL" property="allData10" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH11" property="data11" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH11_ALL" property="allData11" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH12" property="data12" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH12_ALL" property="allData12" jdbcType="VARCHAR" />
	    <result column="CNT_TOTAL" property="total" jdbcType="VARCHAR" />
	    <result column="CNT_TOTAL_ALL" property="allTotal" jdbcType="VARCHAR" />
	</resultMap>
	
	<select id="selectClaimAvr_b" resultMap="claimAvrResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >	
	 SELECT	VALUE_CD,
	 		VALUE_NM,
	 		CNT_MONTH1,
	 		CNT_MONTH1_ALL,
	 		CNT_MONTH2,
	 		CNT_MONTH2_ALL,
	 		CNT_MONTH3,
	 		CNT_MONTH3_ALL,
	 		CNT_MONTH4,
	 		CNT_MONTH4_ALL,
	 		CNT_MONTH5,
	 		CNT_MONTH5_ALL,
	 		CNT_MONTH6,
	 		CNT_MONTH6_ALL,
	 		CNT_MONTH7,
	 		CNT_MONTH7_ALL,
	 		CNT_MONTH8,
	 		CNT_MONTH8_ALL,
	 		CNT_MONTH9,
	 		CNT_MONTH9_ALL,
	 		CNT_MONTH10,
	 		CNT_MONTH10_ALL,
	 		CNT_MONTH11,
	 		CNT_MONTH11_ALL,
	 		CNT_MONTH12,
	 		CNT_MONTH12_ALL,
	 		CNT_TOTAL,
	 		CNT_TOTAL_ALL
	 FROM	CLAIM_AVR_BACK
	 ORDER
	 BY		VALUE_CD DESC
	</select>
  	
  	<select id="selectClaimAvr" resultMap="claimAvrResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
	   SELECT ACEP_YYYY as VALUE_CD,
	   		  ACEP_YYYY||'년' as VALUE_NM,
			  DECODE(CNT_MONTH1,0,'-',CNT_MONTH1)	CNT_MONTH1,
			  DECODE(CNT_MONTH1_ALL,0,'-',CNT_MONTH1_ALL)	CNT_MONTH1_ALL,
			  DECODE(CNT_MONTH2,0,'-',CNT_MONTH2)	CNT_MONTH2,
			  DECODE(CNT_MONTH2_ALL,0,'-',CNT_MONTH2_ALL)	CNT_MONTH2_ALL,
			  DECODE(CNT_MONTH3,0,'-',CNT_MONTH3)	CNT_MONTH3,
			  DECODE(CNT_MONTH3_ALL,0,'-',CNT_MONTH3_ALL)	CNT_MONTH3_ALL,
			  DECODE(CNT_MONTH4,0,'-',CNT_MONTH4)	CNT_MONTH4,
			  DECODE(CNT_MONTH4_ALL,0,'-',CNT_MONTH4_ALL)	CNT_MONTH4_ALL,
			  DECODE(CNT_MONTH5,0,'-',CNT_MONTH5)	CNT_MONTH5,
			  DECODE(CNT_MONTH5_ALL,0,'-',CNT_MONTH5_ALL)	CNT_MONTH5_ALL,
			  DECODE(CNT_MONTH6,0,'-',CNT_MONTH6)	CNT_MONTH6,
			  DECODE(CNT_MONTH6_ALL,0,'-',CNT_MONTH6_ALL)	CNT_MONTH6_ALL,
			  DECODE(CNT_MONTH7,0,'-',CNT_MONTH7)	CNT_MONTH7,
			  DECODE(CNT_MONTH7_ALL,0,'-',CNT_MONTH7_ALL)	CNT_MONTH7_ALL,
			  DECODE(CNT_MONTH8,0,'-',CNT_MONTH8)	CNT_MONTH8,
			  DECODE(CNT_MONTH8_ALL,0,'-',CNT_MONTH8_ALL)	CNT_MONTH8_ALL,
			  DECODE(CNT_MONTH9,0,'-',CNT_MONTH9)	CNT_MONTH9,
			  DECODE(CNT_MONTH9_ALL,0,'-',CNT_MONTH9_ALL)	CNT_MONTH9_ALL,
			  DECODE(CNT_MONTH10,0,'-',CNT_MONTH10)	CNT_MONTH10,
			  DECODE(CNT_MONTH10_ALL,0,'-',CNT_MONTH10_ALL)	CNT_MONTH10_ALL,
			  DECODE(CNT_MONTH11,0,'-',CNT_MONTH11)	CNT_MONTH11,
			  DECODE(CNT_MONTH11_ALL,0,'-',CNT_MONTH11_ALL)	CNT_MONTH11_ALL,
			  DECODE(CNT_MONTH12,0,'-',CNT_MONTH12)	CNT_MONTH12,
			  DECODE(CNT_MONTH12_ALL,0,'-',CNT_MONTH12_ALL)	CNT_MONTH12_ALL,
			  DECODE(CNT_TOTAL,0,'-',CNT_TOTAL)	CNT_TOTAL,
			  DECODE(CNT_TOTAL_ALL,0,'-',CNT_TOTAL_ALL)	CNT_TOTAL_ALL			  
		 FROM CLTPT001 A
		WHERE A.READ_YN = 'Y' 
		UNION ALL
	    SELECT  VALUE_CD,
                       VALUE_NM,
                       CNT_MONTH1,
                       CNT_MONTH1_ALL,
                       CNT_MONTH2,
                       CNT_MONTH2_ALL,
                       CNT_MONTH3,
                       CNT_MONTH3_ALL,
                       CNT_MONTH4,
                       CNT_MONTH4_ALL,
                       CNT_MONTH5,
                       CNT_MONTH5_ALL,
                       CNT_MONTH6,
                       CNT_MONTH6_ALL,
                       CNT_MONTH7,
                       CNT_MONTH7_ALL,
                       CNT_MONTH8,
                       CNT_MONTH8_ALL,
                       CNT_MONTH9,
                       CNT_MONTH9_ALL,
                       CNT_MONTH10,
                       CNT_MONTH10_ALL,
                       CNT_MONTH11,
                       CNT_MONTH11_ALL,
                       CNT_MONTH12,
                       CNT_MONTH12_ALL,                      
                       TO_CHAR(DECODE(CNT_MONTH1,'-',0,CNT_MONTH1) + DECODE(CNT_MONTH2,'-',0,CNT_MONTH2) + DECODE(CNT_MONTH3,'-',0,CNT_MONTH3) + DECODE(CNT_MONTH4,'-',0,CNT_MONTH4) +
                       DECODE(CNT_MONTH5,'-',0,CNT_MONTH5) + DECODE(CNT_MONTH6,'-',0,CNT_MONTH6) + DECODE(CNT_MONTH7,'-',0,CNT_MONTH7) + DECODE(CNT_MONTH8,'-',0,CNT_MONTH8) +
                       DECODE(CNT_MONTH9,'-',0,CNT_MONTH9) + DECODE(CNT_MONTH10,'-',0,CNT_MONTH10) + DECODE(CNT_MONTH11,'-',0,CNT_MONTH11) + DECODE(CNT_MONTH12,'-',0,CNT_MONTH12)) CNT_TOTAL,
                       TO_CHAR(DECODE(CNT_MONTH1_ALL,'-',0,CNT_MONTH1_ALL) + DECODE(CNT_MONTH2_ALL,'-',0,CNT_MONTH2_ALL) + DECODE(CNT_MONTH3_ALL,'-',0,CNT_MONTH3_ALL) +
                       DECODE(CNT_MONTH4_ALL,'-',0,CNT_MONTH4_ALL) + DECODE(CNT_MONTH5_ALL,'-',0,CNT_MONTH5_ALL) + DECODE(CNT_MONTH6_ALL,'-',0,CNT_MONTH6_ALL) +
                       DECODE(CNT_MONTH7_ALL,'-',0,CNT_MONTH7_ALL) + DECODE(CNT_MONTH8_ALL,'-',0,CNT_MONTH8_ALL) + DECODE(CNT_MONTH9_ALL,'-',0,CNT_MONTH9_ALL) +
                       DECODE(CNT_MONTH10_ALL,'-',0,CNT_MONTH10_ALL) + DECODE(CNT_MONTH11_ALL,'-',0,CNT_MONTH11_ALL) + DECODE(CNT_MONTH12_ALL,'-',0,CNT_MONTH12_ALL))   CNT_TOTAL_ALL
               FROM		(
		                SELECT  '0'  VALUE_CD,
		                		'증감건수'   VALUE_NM,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH1      ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH1      ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH1      ,0))) CNT_MONTH1,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH1_ALL  ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH1_ALL  ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH1_ALL  ,0))) CNT_MONTH1_ALL,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH2      ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH2      ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH2      ,0))) CNT_MONTH2,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH2_ALL  ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH2_ALL  ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH2_ALL  ,0))) CNT_MONTH2_ALL,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH3      ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH3      ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH3      ,0))) CNT_MONTH3,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH3_ALL  ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH3_ALL  ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH3_ALL  ,0))) CNT_MONTH3_ALL,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH4      ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH4      ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH4      ,0))) CNT_MONTH4,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH4_ALL  ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH4_ALL  ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH4_ALL  ,0))) CNT_MONTH4_ALL,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH5      ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH5      ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH5      ,0))) CNT_MONTH5,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH5_ALL  ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH5_ALL  ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH5_ALL  ,0))) CNT_MONTH5_ALL,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH6      ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH6      ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH6      ,0))) CNT_MONTH6,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH6_ALL  ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH6_ALL  ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH6_ALL  ,0))) CNT_MONTH6_ALL,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH7      ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH7      ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH7      ,0))) CNT_MONTH7,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH7_ALL  ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH7_ALL  ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH7_ALL  ,0))) CNT_MONTH7_ALL,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH8      ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH8      ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH8      ,0))) CNT_MONTH8,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH8_ALL  ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH8_ALL  ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH8_ALL  ,0))) CNT_MONTH8_ALL,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH9      ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH9      ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH9      ,0))) CNT_MONTH9,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH9_ALL  ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH9_ALL  ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH9_ALL  ,0))) CNT_MONTH9_ALL,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH10      ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH10      ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH10      ,0))) CNT_MONTH10,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH10_ALL  ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH10_ALL  ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH10_ALL  ,0))) CNT_MONTH10_ALL,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH11      ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH11      ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH11      ,0))) CNT_MONTH11,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH11_ALL  ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH11_ALL  ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH11_ALL  ,0))) CNT_MONTH11_ALL,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH12      ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH12      ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH12      ,0))) CNT_MONTH12,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH12_ALL  ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_MONTH12_ALL  ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_MONTH12_ALL  ,0))) CNT_MONTH12_ALL,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TOTAL      ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TOTAL      ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TOTAL      ,0))) CNT_TOTAL,
				                DECODE(MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TOTAL_ALL  ,0)),0,'-',MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TOTAL_ALL  ,0))
				                -MAX(DECODE(ACEP_YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TOTAL_ALL  ,0))) CNT_TOTAL_ALL
		               	FROM    CLTPT001
		        		WHERE   ACEP_YYYY IN (TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1)
		        		)
		ORDER BY	1 DESC
  	</select>
  	
  	<resultMap id="ChartOrgResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		<result column="GUBN" property="gubn" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE" property="cntType" jdbcType="VARCHAR" />
	    <result column="VALUE_NM" property="valueNm" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectOrg" resultMap="ChartOrgResult">
		SELECT A.GUBN, A.CNT_TYPE, A.VALUE_NM
        FROM (
            SELECT 'CNT_TYPE1' AS GUBN, NVL(CNT_TYPE1, 0) AS CNT_TYPE, '이물' AS VALUE_NM
                FROM CLTPT024
                WHERE GUBN = TO_CHAR(SYSDATE, 'YYYY')
              UNION ALL
                 SELECT 'CNT_TYPE2' AS GUBN, NVL(CNT_TYPE2, 0) AS CNT_TYPE, '벌레' AS VALUE_NM
                    FROM CLTPT024
                    WHERE GUBN = TO_CHAR(SYSDATE, 'YYYY')
              UNION ALL
                 SELECT 'CNT_TYPE3' AS GUBN, NVL(CNT_TYPE3, 0) AS CNT_TYPE, '포장불량' AS VALUE_NM
                    FROM CLTPT024
                    WHERE GUBN = TO_CHAR(SYSDATE, 'YYYY')
              UNION ALL
                 SELECT 'CNT_TYPE4' AS GUBN, NVL(CNT_TYPE4, 0) AS CNT_TYPE, '변질' AS VALUE_NM
                    FROM CLTPT024
                    WHERE GUBN = TO_CHAR(SYSDATE, 'YYYY')
              UNION ALL
                 SELECT 'CNT_TYPE5' AS GUBN, NVL(CNT_TYPE5, 0) AS CNT_TYPE, '내용물누락' AS VALUE_NM
                    FROM CLTPT024
                    WHERE GUBN = TO_CHAR(SYSDATE, 'YYYY')
              UNION ALL
                 SELECT 'CNT_TYPE6' AS GUBN, NVL(CNT_TYPE6, 0) AS CNT_TYPE, '이취' AS VALUE_NM
                    FROM CLTPT024
                    WHERE GUBN = TO_CHAR(SYSDATE, 'YYYY')
              UNION ALL
                 SELECT 'CNT_TYPE7' AS GUBN, NVL(CNT_TYPE7, 0) AS CNT_TYPE, '맛이상' AS VALUE_NM
                    FROM CLTPT024
                    WHERE GUBN = TO_CHAR(SYSDATE, 'YYYY')
              UNION ALL
                 SELECT 'CNT_TYPE8' AS GUBN, NVL(CNT_TYPE8, 0) AS CNT_TYPE, '기일경과' AS VALUE_NM
                    FROM CLTPT024
                    WHERE GUBN = TO_CHAR(SYSDATE, 'YYYY')
              UNION ALL
                 SELECT 'CNT_TYPE9' AS GUBN, NVL(CNT_TYPE9, 0) AS CNT_TYPE, '형태불량' AS VALUE_NM
                    FROM CLTPT024
                    WHERE GUBN = TO_CHAR(SYSDATE, 'YYYY')
              UNION ALL
                 SELECT 'CNT_TYPE10' AS GUBN, NVL(CNT_TYPE10, 0) AS CNT_TYPE, '소비자오인' AS VALUE_NM
                    FROM CLTPT024
                    WHERE GUBN = TO_CHAR(SYSDATE, 'YYYY')
        ) A
        ORDER BY CNT_TYPE DESC
	</select>	
	
	<resultMap id="ClaimTypChartResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="GUBN" property="gubn" jdbcType="VARCHAR" />  	   
	    <result column="CNT_TYPE1" property="data1" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE2" property="data2" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE3" property="data3" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE4" property="data4" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE5" property="data5" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE6" property="data6" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE7" property="data7" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE8" property="data8" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE9" property="data9" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE10" property="data10" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE11" property="data11" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE12" property="data12" jdbcType="VARCHAR" />
	    <result column="TOTAL" property="total" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectClaimTypChart_b" resultMap="ClaimTypChartResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT	GUBN,
				CNT_TYPE1,
				CNT_TYPE2,
				CNT_TYPE3,
				CNT_TYPE4,
				CNT_TYPE5,
				CNT_TYPE6,
				CNT_TYPE7,
				CNT_TYPE8,
				CNT_TYPE9,
				CNT_TYPE10,
				CNT_TYPE11,
				CNT_TYPE12,
				TOTAL
		FROM	CLAIM_TYPCHART_B
	</select>
	<select id="selectClaimTypChart" resultMap="ClaimTypChartResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
	       SELECT (SELECT TYPE_NAME FROM CLT_CLAIM_TYPE_CD WHERE LVL = 1 AND type_cd = GUBUN ) GUBN,                                                                                   
                    MONTH1 CNT_TYPE1,                                                                                                           
                    MONTH2 CNT_TYPE2,                                                                                                           
                    MONTH3 CNT_TYPE3,                                                                                                           
                    MONTH4 CNT_TYPE4,                                                                                                           
                    MONTH5 CNT_TYPE5,                                                                                                           
                    MONTH6 CNT_TYPE6,                                                                                                           
                    MONTH7 CNT_TYPE7,                                                                                                           
                    MONTH8 CNT_TYPE8,                                                                                                           
                    MONTH9 CNT_TYPE9,                                                                                                           
                    MONTH10 CNT_TYPE10,                                                                                                         
                    MONTH11 CNT_TYPE11,                                                                                                         
                    MONTH12 CNT_TYPE12,                                                                                                         
                    TOTAL                                                                                                           
            FROM(                                                                                                                               
                      SELECT              SUBSTR(CR01.TYPE_CD,1,3)||'0000' GUBUN,                                                              
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '01',1))  MONTH1,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '02',1))  MONTH2,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '03',1))  MONTH3,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '04',1))  MONTH4,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '05',1))  MONTH5,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '06',1))  MONTH6,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '07',1))  MONTH7,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '08',1))  MONTH8,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '09',1))  MONTH9,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '10',1))  MONTH10,            
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '11',1))  MONTH11,            
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '12',1))  MONTH12,            
                                           SUM(DECODE(SUBSTR(acep_date, 1, 4),  TO_CHAR(SYSDATE,'YYYY') ,1,0))  TOTAL                         
                                FROM CLT_CLAIM_MST CR01                      
                                WHERE SUBSTR(acep_date, 1, 4) =  TO_CHAR(SYSDATE,'YYYY')                                                       
                               AND cncl_type_cd = '1'     
                               AND CR01.PROS_DIV_CD_1 IS NOT NULL       
                               AND  CR01.TYPE_CD IS NOT NULL                                                                               
                              GROUP BY SUBSTR(CR01.TYPE_CD,1,3)                                                                                
                               ORDER BY TOTAL DESC                                                                                 
            ) 
	</select>
	
	<resultMap id="ClaimTypChart2Result_b" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		<result column="GUBN" property="gubn" jdbcType="VARCHAR" />
  	    <result column="CNT_TYPE1" property="data1" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE2" property="data2" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE3" property="data3" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE4" property="data4" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE5" property="data5" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE6" property="data6" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE7" property="data7" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE8" property="data8" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE9" property="data9" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE10" property="data10" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE11" property="data11" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE12" property="data12" jdbcType="VARCHAR" />	   
	    <result column="TOTAL" property="total" jdbcType="VARCHAR" />	  
	</resultMap>
	<select id="selectClaimTypChart2_b" resultMap="ClaimTypChart2Result_b" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT	GUBN,
				CNT_TYPE1,
				CNT_TYPE2,
				CNT_TYPE3,
				CNT_TYPE4,
				CNT_TYPE5,
				CNT_TYPE6,
				CNT_TYPE7,
				CNT_TYPE8,
				CNT_TYPE9,
				CNT_TYPE10,
				CNT_TYPE11,
				CNT_TYPE12,
				TOTAL
		FROM	CLAIM_TYPCHART_C
	</select>
	<resultMap id="ClaimTypChart2Result" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		<result column="YYYY" property="yyyy" jdbcType="VARCHAR" />
		<result column="GUBN" property="gubn" jdbcType="VARCHAR" />
  	    <result column="CNT_TYPE1" property="data1" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE2" property="data2" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE3" property="data3" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE4" property="data4" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE5" property="data5" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE6" property="data6" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE7" property="data7" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE8" property="data8" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE9" property="data9" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE10" property="data10" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE11" property="data11" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE12" property="data12" jdbcType="VARCHAR" />	   
	    <result column="TOTAL" property="total" jdbcType="VARCHAR" />	  
	</resultMap>
	<select id="selectClaimTypChart2" resultMap="ClaimTypChart2Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
	               SELECT  TO_CHAR(SYSDATE,'YYYY') YYYY,
           		   GUBN,
                DECODE(CNT_TYPE1,0,'-',CNT_TYPE1 - CNT_L_TYPE1) CNT_TYPE1,
                DECODE(CNT_TYPE2,0,'-',CNT_TYPE2 - CNT_L_TYPE2) CNT_TYPE2,
                DECODE(CNT_TYPE3,0,'-',CNT_TYPE3 - CNT_L_TYPE3) CNT_TYPE3,
                DECODE(CNT_TYPE4,0,'-',CNT_TYPE4 - CNT_L_TYPE4) CNT_TYPE4,
                DECODE(CNT_TYPE5,0,'-',CNT_TYPE5 - CNT_L_TYPE5) CNT_TYPE5,
                DECODE(CNT_TYPE6,0,'-',CNT_TYPE6 - CNT_L_TYPE6) CNT_TYPE6,
                DECODE(CNT_TYPE7,0,'-',CNT_TYPE7 - CNT_L_TYPE7) CNT_TYPE7,
                DECODE(CNT_TYPE8,0,'-',CNT_TYPE8 - CNT_L_TYPE8) CNT_TYPE8,
                DECODE(CNT_TYPE9,0,'-',CNT_TYPE9 - CNT_L_TYPE9) CNT_TYPE9,
                DECODE(CNT_TYPE10,0,'-',CNT_TYPE10 - CNT_L_TYPE10) CNT_TYPE10,
                DECODE(CNT_TYPE11,0,'-',CNT_TYPE11 - CNT_L_TYPE11) CNT_TYPE11,
                DECODE(CNT_TYPE12,0,'-',CNT_TYPE12 - CNT_L_TYPE12) CNT_TYPE12,
                TOTAL
         FROM
        (
        SELECT  GUBN,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY'),CNT_TYPE1,0))    CNT_TYPE1,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY'),CNT_TYPE2,0))    CNT_TYPE2,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY'),CNT_TYPE3,0))    CNT_TYPE3,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY'),CNT_TYPE4,0))    CNT_TYPE4,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY'),CNT_TYPE5,0))    CNT_TYPE5,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY'),CNT_TYPE6,0))    CNT_TYPE6,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY'),CNT_TYPE7,0))    CNT_TYPE7,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY'),CNT_TYPE8,0))    CNT_TYPE8,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY'),CNT_TYPE9,0))    CNT_TYPE9,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY'),CNT_TYPE10,0))    CNT_TYPE10,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY'),CNT_TYPE11,0))    CNT_TYPE11,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY'),CNT_TYPE12,0))    CNT_TYPE12,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY')-1,CNT_TYPE1,0))    CNT_L_TYPE1,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY')-1,CNT_TYPE2,0))    CNT_L_TYPE2,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY')-1,CNT_TYPE3,0))    CNT_L_TYPE3,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY')-1,CNT_TYPE4,0))    CNT_L_TYPE4,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY')-1,CNT_TYPE5,0))    CNT_L_TYPE5,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY')-1,CNT_TYPE6,0))    CNT_L_TYPE6,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY')-1,CNT_TYPE7,0))    CNT_L_TYPE7,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY')-1,CNT_TYPE8,0))    CNT_L_TYPE8,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY')-1,CNT_TYPE9,0))    CNT_L_TYPE9,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY')-1,CNT_TYPE10,0))    CNT_L_TYPE10,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY')-1,CNT_TYPE11,0))    CNT_L_TYPE11,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY')-1,CNT_TYPE12,0))    CNT_L_TYPE12,
                MAX(DECODE(YYYY,TO_CHAR(SYSDATE,'YYYY'),TOTAL,0))    TOTAL
                FROM
        (
        SELECT (SELECT TYPE_NAME FROM CLT_CLAIM_TYPE_CD WHERE LVL = 1 AND type_cd = GUBUN ) GUBN,      
                TO_CHAR(SYSDATE,'YYYY') YYYY,                                                                             
                    MONTH1 CNT_TYPE1,                                                                                                           
                    MONTH2 CNT_TYPE2,                                                                                                           
                    MONTH3 CNT_TYPE3,                                                                                                           
                    MONTH4 CNT_TYPE4,                                                                                                           
                    MONTH5 CNT_TYPE5,                                                                                                           
                    MONTH6 CNT_TYPE6,                                                                                                           
                    MONTH7 CNT_TYPE7,                                                                                                           
                    MONTH8 CNT_TYPE8,                                                                                                           
                    MONTH9 CNT_TYPE9,                                                                                                           
                    MONTH10 CNT_TYPE10,                                                                                                         
                    MONTH11 CNT_TYPE11,                                                                                                         
                    MONTH12 CNT_TYPE12,                                                                                                         
                    TOTAL                                                                                                           
            FROM(                                                                                                                               
                      SELECT              SUBSTR(CR01.TYPE_CD,1,3)||'0000' GUBUN,                                                              
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '01',1))  MONTH1,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '02',1))  MONTH2,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '03',1))  MONTH3,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '04',1))  MONTH4,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '05',1))  MONTH5,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '06',1))  MONTH6,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '07',1))  MONTH7,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '08',1))  MONTH8,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '09',1))  MONTH9,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '10',1))  MONTH10,            
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '11',1))  MONTH11,            
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(SYSDATE,'YYYY')  || '12',1))  MONTH12,            
                                           SUM(DECODE(SUBSTR(acep_date, 1, 4),  TO_CHAR(SYSDATE,'YYYY') ,1,0))  TOTAL                         
                                FROM CLT_CLAIM_MST CR01                      
                                WHERE SUBSTR(acep_date, 1, 4) =  TO_CHAR(SYSDATE,'YYYY')                                                       
                               AND cncl_type_cd = '1' 
                               AND CR01.PROS_DIV_CD_1 IS NOT NULL           
                               AND  CR01.TYPE_CD IS NOT NULL                                                                               
                              GROUP BY SUBSTR(CR01.TYPE_CD,1,3)                                                                                
                               ORDER BY TOTAL DESC                                                                                 
            ) 
            UNION ALL
            SELECT (SELECT TYPE_NAME FROM CLT_CLAIM_TYPE_CD WHERE LVL = 1 AND type_cd = GUBUN ) GUBN, 
                    TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY') YYYY,                                                                                  
                    MONTH1 CNT_TYPE1,                                                                                                           
                    MONTH2 CNT_TYPE2,                                                                                                           
                    MONTH3 CNT_TYPE3,                                                                                                           
                    MONTH4 CNT_TYPE4,                                                                                                           
                    MONTH5 CNT_TYPE5,                                                                                                           
                    MONTH6 CNT_TYPE6,                                                                                                           
                    MONTH7 CNT_TYPE7,                                                                                                           
                    MONTH8 CNT_TYPE8,                                                                                                           
                    MONTH9 CNT_TYPE9,                                                                                                           
                    MONTH10 CNT_TYPE10,                                                                                                         
                    MONTH11 CNT_TYPE11,                                                                                                         
                    MONTH12 CNT_TYPE12,                                                                                                         
                    TOTAL                                                                                                           
            FROM(                                                                                                                               
                                      
                       SELECT   GUBUN,
                                SUM(NVL(MONTH1,0)) MONTH1,
                                SUM(NVL(MONTH2,0)) MONTH2,
                                SUM(NVL(MONTH3,0)) MONTH3,
                                SUM(NVL(MONTH4,0)) MONTH4,
                                SUM(NVL(MONTH5,0)) MONTH5,
                                SUM(NVL(MONTH6,0)) MONTH6,
                                SUM(NVL(MONTH7,0)) MONTH7,
                                SUM(NVL(MONTH8,0)) MONTH8,
                                SUM(NVL(MONTH9,0)) MONTH9,
                                SUM(NVL(MONTH10,0)) MONTH10,
                                SUM(NVL(MONTH11,0)) MONTH11,
                                SUM(NVL(MONTH12,0)) MONTH12,
                                SUM(NVL(TOTAL,0))   TOTAL
                                FROM
                                (                                                                                                              
                                SELECT               
                                            SUBSTR(CR01.TYPE_CD,1,3)||'0000' GUBUN,                                                              
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '01',1))  MONTH1,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '02',1))  MONTH2,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '03',1))  MONTH3,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '04',1))  MONTH4,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '05',1))  MONTH5,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '06',1))  MONTH6,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '07',1))  MONTH7,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '08',1))  MONTH8,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '09',1))  MONTH9,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '10',1))  MONTH10,            
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '11',1))  MONTH11,            
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '12',1))  MONTH12,            
                                           SUM(DECODE(SUBSTR(acep_date, 1, 4),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY') ,1,0))  TOTAL                         
                                FROM CLT_CLAIM_MST CR01                      
                                WHERE SUBSTR(acep_date, 1, 4) =  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')    
                               AND  SUBSTR(acep_date, 5, 2) <![CDATA[<>]]> TO_CHAR(SYSDATE,'MM')                                                       
                               AND cncl_type_cd = '1'      
                               AND CR01.PROS_DIV_CD_1 IS NOT NULL      
                               AND  CR01.TYPE_CD IS NOT NULL                                                                               
                              GROUP BY SUBSTR(CR01.TYPE_CD,1,3) 
                              UNION ALL 
                                 SELECT               
                                            SUBSTR(CR01.TYPE_CD,1,3)||'0000' GUBUN,                                                              
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '01',1))  MONTH1,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '02',1))  MONTH2,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '03',1))  MONTH3,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '04',1))  MONTH4,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '05',1))  MONTH5,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '06',1))  MONTH6,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '07',1))  MONTH7,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '08',1))  MONTH8,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '09',1))  MONTH9,             
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '10',1))  MONTH10,            
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '11',1))  MONTH11,            
                                           SUM(DECODE(SUBSTR(acep_date, 1, 6),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')  || '12',1))  MONTH12,            
                                           SUM(DECODE(SUBSTR(acep_date, 1, 4),  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY') ,1,0))  TOTAL                         
                                FROM CLT_CLAIM_MST CR01                      
                                WHERE SUBSTR(acep_date, 1, 4) =  TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYY')    
                               AND  SUBSTR(acep_date, 5, 2) =TO_CHAR(SYSDATE,'MM') 
                               AND  SUBSTR(acep_date, 5, 8)  BETWEEN TO_CHAR(TRUNC(SYSDATE,'MM'),'MMDD') AND TO_CHAR(SYSDATE,'MMDD')                                            
                               AND cncl_type_cd = '1'         
                               AND CR01.PROS_DIV_CD_1 IS NOT NULL     
                               AND  CR01.TYPE_CD IS NOT NULL                                                                               
                              GROUP BY SUBSTR(CR01.TYPE_CD,1,3)                                                                             
                             )
                             GROUP BY GUBUN                                                                               
            ) 
            )
            GROUP BY GUBN
            )
            ORDER BY TOTAL DESC
	</select>
	
	
	<resultMap id="claimTypResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >  	    
	    <result column="YYYY" property="yyyy" jdbcType="VARCHAR" />
	    <result column="VALUE_CD" property="valueCd" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE1" property="data1" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE2" property="data2" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE3" property="data3" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE4" property="data4" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE5" property="data5" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE6" property="data6" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE7" property="data7" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE8" property="data8" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE9" property="data9" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE10" property="data10" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE11" property="data11" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE12" property="data12" jdbcType="VARCHAR" />	   
	    <result column="CNT_TYPE12" property="data12" jdbcType="VARCHAR" />	  
	    <result column="TOTAL" property="total" jdbcType="VARCHAR" />	
	    <result column="CNT_TYPE1_ALL" property="allData1" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE2_ALL" property="allData2" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE3_ALL" property="allData3" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE4_ALL" property="allData4" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE5_ALL" property="allData5" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE6_ALL" property="allData6" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE7_ALL" property="allData7" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE8_ALL" property="allData8" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE9_ALL" property="allData9" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE10_ALL" property="allData10" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE11_ALL" property="allData11" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE12_ALL" property="allData12" jdbcType="VARCHAR" />
	    <result column="TOTAL_ALL" property="allTotal" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectEmul_b" resultMap="claimTypResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT	YYYY,
				VALUE_CD,
				SEQ,
				CNT_TYPE1,
				CNT_TYPE2,
				CNT_TYPE3,
				CNT_TYPE4,
				CNT_TYPE5,
				CNT_TYPE6,
				CNT_TYPE7,
				CNT_TYPE8,
				CNT_TYPE9,
				CNT_TYPE10,
				CNT_TYPE11,
				CNT_TYPE12,
				TOTAL,
				CNT_TYPE1_ALL,
				CNT_TYPE2_ALL,
				CNT_TYPE3_ALL,
				CNT_TYPE4_ALL,
				CNT_TYPE5_ALL,
				CNT_TYPE6_ALL,
				CNT_TYPE7_ALL,
				CNT_TYPE8_ALL,
				CNT_TYPE9_ALL,
				CNT_TYPE10_ALL,
				CNT_TYPE11_ALL,
				CNT_TYPE12_ALL,
				TOTAL_ALL
		FROM	CLAIM_EMUL_BACK	
		ORDER
		BY		SEQ			
	</select>
	<select id="selectPojang_b" resultMap="claimTypResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT	YYYY,
				VALUE_CD,
				SEQ,
				CNT_TYPE1,
				CNT_TYPE2,
				CNT_TYPE3,
				CNT_TYPE4,
				CNT_TYPE5,
				CNT_TYPE6,
				CNT_TYPE7,
				CNT_TYPE8,
				CNT_TYPE9,
				CNT_TYPE10,
				CNT_TYPE11,
				CNT_TYPE12,
				TOTAL,
				CNT_TYPE1_ALL,
				CNT_TYPE2_ALL,
				CNT_TYPE3_ALL,
				CNT_TYPE4_ALL,
				CNT_TYPE5_ALL,
				CNT_TYPE6_ALL,
				CNT_TYPE7_ALL,
				CNT_TYPE8_ALL,
				CNT_TYPE9_ALL,
				CNT_TYPE10_ALL,
				CNT_TYPE11_ALL,
				CNT_TYPE12_ALL,
				TOTAL_ALL
		FROM	CLAIM_POJANG_BACK	
		ORDER
		BY		SEQ			
	</select>
	<select id="selectBule_b" resultMap="claimTypResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT	YYYY,
				VALUE_CD,
				SEQ,
				CNT_TYPE1,
				CNT_TYPE2,
				CNT_TYPE3,
				CNT_TYPE4,
				CNT_TYPE5,
				CNT_TYPE6,
				CNT_TYPE7,
				CNT_TYPE8,
				CNT_TYPE9,
				CNT_TYPE10,
				CNT_TYPE11,
				CNT_TYPE12,
				TOTAL,
				CNT_TYPE1_ALL,
				CNT_TYPE2_ALL,
				CNT_TYPE3_ALL,
				CNT_TYPE4_ALL,
				CNT_TYPE5_ALL,
				CNT_TYPE6_ALL,
				CNT_TYPE7_ALL,
				CNT_TYPE8_ALL,
				CNT_TYPE9_ALL,
				CNT_TYPE10_ALL,
				CNT_TYPE11_ALL,
				CNT_TYPE12_ALL,
				TOTAL_ALL
		FROM	CLAIM_BULE_BACK	
		ORDER
		BY		SEQ			
	</select>
	<select id="selectByun_b" resultMap="claimTypResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT	YYYY,
				VALUE_CD,
				SEQ,
				CNT_TYPE1,
				CNT_TYPE2,
				CNT_TYPE3,
				CNT_TYPE4,
				CNT_TYPE5,
				CNT_TYPE6,
				CNT_TYPE7,
				CNT_TYPE8,
				CNT_TYPE9,
				CNT_TYPE10,
				CNT_TYPE11,
				CNT_TYPE12,
				TOTAL,
				CNT_TYPE1_ALL,
				CNT_TYPE2_ALL,
				CNT_TYPE3_ALL,
				CNT_TYPE4_ALL,
				CNT_TYPE5_ALL,
				CNT_TYPE6_ALL,
				CNT_TYPE7_ALL,
				CNT_TYPE8_ALL,
				CNT_TYPE9_ALL,
				CNT_TYPE10_ALL,
				CNT_TYPE11_ALL,
				CNT_TYPE12_ALL,
				TOTAL_ALL
		FROM	CLAIM_BYUN_BACK	
		ORDER
		BY		SEQ			
	</select>
	<select id="selectTypGrp" resultMap="claimTypResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
     SELECT	DECODE(YYYY,'0','증감건수',YYYY||'년') YYYY, 
     		YYYY	VALUE_CD,
     		SEQ,
     		CASE WHEN TO_CHAR(SYSDATE,'MM') >= '01' THEN DECODE(CNT_TYPE1,'-','0',CNT_TYPE1) ELSE CNT_TYPE1 END CNT_TYPE1,
            CASE WHEN TO_CHAR(SYSDATE,'MM') >= '02' THEN DECODE(CNT_TYPE2,'-','0',CNT_TYPE2) ELSE CNT_TYPE2 END CNT_TYPE2,
            CASE WHEN TO_CHAR(SYSDATE,'MM') >= '03' THEN DECODE(CNT_TYPE3,'-','0',CNT_TYPE3) ELSE CNT_TYPE3 END CNT_TYPE3,
            CASE WHEN TO_CHAR(SYSDATE,'MM') >= '04' THEN DECODE(CNT_TYPE4,'-','0',CNT_TYPE4) ELSE CNT_TYPE4 END CNT_TYPE4,
            CASE WHEN TO_CHAR(SYSDATE,'MM') >= '05' THEN DECODE(CNT_TYPE5,'-','0',CNT_TYPE5) ELSE CNT_TYPE5 END CNT_TYPE5,
            CASE WHEN TO_CHAR(SYSDATE,'MM') >= '06' THEN DECODE(CNT_TYPE6,'-','0',CNT_TYPE6) ELSE CNT_TYPE6 END CNT_TYPE6,
            CASE WHEN TO_CHAR(SYSDATE,'MM') >= '07' THEN DECODE(CNT_TYPE7,'-','0',CNT_TYPE7) ELSE CNT_TYPE7 END CNT_TYPE7,
            CASE WHEN TO_CHAR(SYSDATE,'MM') >= '08' THEN DECODE(CNT_TYPE8,'-','0',CNT_TYPE8) ELSE CNT_TYPE8 END CNT_TYPE8,
            CASE WHEN TO_CHAR(SYSDATE,'MM') >= '09' THEN DECODE(CNT_TYPE9,'-','0',CNT_TYPE9) ELSE CNT_TYPE9 END CNT_TYPE9,
            CASE WHEN TO_CHAR(SYSDATE,'MM') >= '10' THEN DECODE(CNT_TYPE10,'-','0',CNT_TYPE10) ELSE CNT_TYPE10 END CNT_TYPE10,
            CASE WHEN TO_CHAR(SYSDATE,'MM') >= '11' THEN DECODE(CNT_TYPE11,'-','0',CNT_TYPE11) ELSE CNT_TYPE11 END CNT_TYPE11,
            CASE WHEN TO_CHAR(SYSDATE,'MM') >= '12' THEN DECODE(CNT_TYPE12,'-','0',CNT_TYPE12) ELSE CNT_TYPE12 END CNT_TYPE12,     		
     		DECODE(CNT_TYPE1,'-',0,CNT_TYPE1) + DECODE(CNT_TYPE2,'-',0,CNT_TYPE2) + DECODE(CNT_TYPE3,'-',0,CNT_TYPE3) + 
            DECODE(CNT_TYPE4,'-',0,CNT_TYPE4) + DECODE(CNT_TYPE5,'-',0,CNT_TYPE5) + DECODE(CNT_TYPE6,'-',0,CNT_TYPE6) + 
            DECODE(CNT_TYPE7,'-',0,CNT_TYPE7) + DECODE(CNT_TYPE8,'-',0,CNT_TYPE8) + DECODE(CNT_TYPE9,'-',0,CNT_TYPE9) + 
            DECODE(CNT_TYPE10,'-',0,CNT_TYPE10) + DECODE(CNT_TYPE11,'-',0,CNT_TYPE11) + DECODE(CNT_TYPE12,'-',0,CNT_TYPE12) TOTAL,
            CNT_TYPE1_ALL,
     		CNT_TYPE2_ALL,
     		CNT_TYPE3_ALL,
     		CNT_TYPE4_ALL,
     		CNT_TYPE5_ALL,
     		CNT_TYPE6_ALL,
     		CNT_TYPE7_ALL,
     		CNT_TYPE8_ALL,
     		CNT_TYPE9_ALL,
     		CNT_TYPE10_ALL,
     		CNT_TYPE11_ALL,
     		CNT_TYPE12_ALL,
            DECODE(CNT_TYPE1_ALL,'-',0,CNT_TYPE1_ALL) + DECODE(CNT_TYPE2_ALL,'-',0,CNT_TYPE2_ALL) + DECODE(CNT_TYPE3_ALL,'-',0,CNT_TYPE3_ALL) + 
            DECODE(CNT_TYPE4_ALL,'-',0,CNT_TYPE4_ALL) + DECODE(CNT_TYPE5_ALL,'-',0,CNT_TYPE5_ALL) + DECODE(CNT_TYPE6_ALL,'-',0,CNT_TYPE6_ALL) + 
            DECODE(CNT_TYPE7_ALL,'-',0,CNT_TYPE7_ALL) + DECODE(CNT_TYPE8_ALL,'-',0,CNT_TYPE8_ALL) + DECODE(CNT_TYPE9_ALL,'-',0,CNT_TYPE9_ALL) + 
            DECODE(CNT_TYPE10_ALL,'-',0,CNT_TYPE10_ALL) + DECODE(CNT_TYPE11_ALL,'-',0,CNT_TYPE11_ALL) + DECODE(CNT_TYPE12_ALL,'-',0,CNT_TYPE12_ALL) TOTAL_ALL
     FROM
     (
     SELECT    YYYY,
     		   RANK() OVER(ORDER BY YYYY DESC) SEQ,
               DECODE(CNT_TYPE1,'0','-',CNT_TYPE1)   CNT_TYPE1, 
               DECODE(CNT_TYPE2,'0','-',CNT_TYPE2)   CNT_TYPE2, 
               DECODE(CNT_TYPE3,'0','-',CNT_TYPE3)   CNT_TYPE3,
               DECODE(CNT_TYPE4,'0','-',CNT_TYPE4)   CNT_TYPE4,
               DECODE(CNT_TYPE5,'0','-',CNT_TYPE5)   CNT_TYPE5,
               DECODE(CNT_TYPE6,'0','-',CNT_TYPE6)   CNT_TYPE6,
               DECODE(CNT_TYPE7,'0','-',CNT_TYPE7)   CNT_TYPE7,
               DECODE(CNT_TYPE8,'0','-',CNT_TYPE8)   CNT_TYPE8,
               DECODE(CNT_TYPE9,'0','-',CNT_TYPE9)   CNT_TYPE9,
               DECODE(CNT_TYPE10,'0','-',CNT_TYPE10)   CNT_TYPE10,
               DECODE(CNT_TYPE11,'0','-',CNT_TYPE11)   CNT_TYPE11,
               DECODE(CNT_TYPE12,'0','-',CNT_TYPE12)   CNT_TYPE12,
               DECODE(CNT_TYPE1_ALL,'0','-',CNT_TYPE1_ALL)   CNT_TYPE1_ALL, 
               DECODE(CNT_TYPE2_ALL,'0','-',CNT_TYPE2_ALL)   CNT_TYPE2_ALL, 
               DECODE(CNT_TYPE3_ALL,'0','-',CNT_TYPE3_ALL)   CNT_TYPE3_ALL,
               DECODE(CNT_TYPE4_ALL,'0','-',CNT_TYPE4_ALL)   CNT_TYPE4_ALL,
               DECODE(CNT_TYPE5_ALL,'0','-',CNT_TYPE5_ALL)   CNT_TYPE5_ALL,
               DECODE(CNT_TYPE6_ALL,'0','-',CNT_TYPE6_ALL)   CNT_TYPE6_ALL,
               DECODE(CNT_TYPE7_ALL,'0','-',CNT_TYPE7_ALL)   CNT_TYPE7_ALL,
               DECODE(CNT_TYPE8_ALL,'0','-',CNT_TYPE8_ALL)   CNT_TYPE8_ALL,
               DECODE(CNT_TYPE9_ALL,'0','-',CNT_TYPE9_ALL)   CNT_TYPE9_ALL,
               DECODE(CNT_TYPE10_ALL,'0','-',CNT_TYPE10_ALL)   CNT_TYPE10_ALL,
               DECODE(CNT_TYPE11_ALL,'0','-',CNT_TYPE11_ALL)   CNT_TYPE11_ALL,
               DECODE(CNT_TYPE12_ALL,'0','-',CNT_TYPE12_ALL)   CNT_TYPE12_ALL  
     FROM		(
  				SELECT SUBSTR(A.ACEP_YYYYMM, 1, 4) YYYY,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'01', CNT,0))) CNT_TYPE1,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'02', CNT,0))) CNT_TYPE2,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'03', CNT,0))) CNT_TYPE3,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'04', CNT,0))) CNT_TYPE4,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'05', CNT,0))) CNT_TYPE5,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'06', CNT,0))) CNT_TYPE6,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'07', CNT,0))) CNT_TYPE7,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'08', CNT,0))) CNT_TYPE8,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'09', CNT,0))) CNT_TYPE9,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'10', CNT,0))) CNT_TYPE10,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'11', CNT,0))) CNT_TYPE11,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'12', CNT,0))) CNT_TYPE12,
                     	  TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'01', CNT2,0))) CNT_TYPE1_ALL,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'02', CNT2,0))) CNT_TYPE2_ALL,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'03', CNT2,0))) CNT_TYPE3_ALL,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'04', CNT2,0))) CNT_TYPE4_ALL,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'05', CNT2,0))) CNT_TYPE5_ALL,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'06', CNT2,0))) CNT_TYPE6_ALL,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'07', CNT2,0))) CNT_TYPE7_ALL,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'08', CNT2,0))) CNT_TYPE8_ALL,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'09', CNT2,0))) CNT_TYPE9_ALL,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'10', CNT2,0))) CNT_TYPE10_ALL,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'11', CNT2,0))) CNT_TYPE11_ALL,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'12', CNT2,0))) CNT_TYPE12_ALL                         
                     FROM (                           
                              SELECT SUBSTR(B.ACEP_DATE, 1, 6) ACEP_YYYYMM,
                                     SUM(
                                         DECODE(SUBSTR(B.ACEP_DATE, 1, 6)
                                               ,TO_CHAR(ADD_MONTHS(SYSDATE, -24), 'YYYYMM')
                                               ,CASE WHEN SUBSTR(B.ACEP_DATE, 1, 8) <![CDATA[<=]]> TO_CHAR(ADD_MONTHS(SYSDATE, -24), 'YYYYMMDD') THEN 1 ELSE 0 END
                                               ,TO_CHAR(ADD_MONTHS(SYSDATE, -12), 'YYYYMM')
                                               ,CASE WHEN SUBSTR(B.ACEP_DATE, 1, 8) <![CDATA[<=]]> TO_CHAR(ADD_MONTHS(SYSDATE, -12), 'YYYYMMDD') THEN 1 ELSE 0 END
                                               ,1)
                                         ) CNT   
                                    ,SUM(1) CNT2 
                                FROM CLT_CLAIM_MST B
                               WHERE SUBSTR(B.ACEP_DATE, 1, 6) BETWEEN TO_NUMBER(TO_CHAR(ADD_MONTHS(SYSDATE, -24), 'YYYY')||'01') AND TO_CHAR(SYSDATE,'YYYY')||'12'
                                 AND B.CNCL_TYPE_CD = '1'
                                 AND B.PROS_DIV_CD_1 IS NOT NULL  
                                 AND SUBSTR (B.TYPE_CD, 1, 3) = SUBSTR (#gubn#, 1, 3)
                               GROUP BY SUBSTR(B.ACEP_DATE, 1, 6)
                               ORDER BY SUBSTR(B.ACEP_DATE, 1, 6)                     
                          ) A
                    GROUP BY SUBSTR(A.ACEP_YYYYMM, 1, 4)
           UNION ALL
            SELECT  
                '0' YYYY ,              
                       TO_CHAR(CNT_TYPE1),
                       TO_CHAR(CNT_TYPE2),
                       TO_CHAR(CNT_TYPE3),
                       TO_CHAR(CNT_TYPE4),
                       TO_CHAR(CNT_TYPE5),
                       TO_CHAR(CNT_TYPE6),
                       TO_CHAR(CNT_TYPE7),
                       TO_CHAR(CNT_TYPE8),
                       TO_CHAR(CNT_TYPE9),
                       TO_CHAR(CNT_TYPE10),
                       TO_CHAR(CNT_TYPE11),
                       TO_CHAR(CNT_TYPE12),
                       TO_CHAR(CNT_TYPE1_ALL),
                       TO_CHAR(CNT_TYPE2_ALL),
                       TO_CHAR(CNT_TYPE3_ALL),
                       TO_CHAR(CNT_TYPE4_ALL),
                       TO_CHAR(CNT_TYPE5_ALL),
                       TO_CHAR(CNT_TYPE6_ALL),
                       TO_CHAR(CNT_TYPE7_ALL),
                       TO_CHAR(CNT_TYPE8_ALL),
                       TO_CHAR(CNT_TYPE9_ALL),
                       TO_CHAR(CNT_TYPE10_ALL),
                       TO_CHAR(CNT_TYPE11_ALL),
                       TO_CHAR(CNT_TYPE12_ALL)                        
          FROM(
            SELECT  DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE1,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE1      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE1      ,0))) CNT_TYPE1,
            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE2,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE2      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE2      ,0))) CNT_TYPE2,
            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE3,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE3      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE3      ,0))) CNT_TYPE3,
            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE4,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE4      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE4      ,0))) CNT_TYPE4,
            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE5,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE5      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE5      ,0))) CNT_TYPE5,
            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE6,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE6      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE6      ,0))) CNT_TYPE6, 
            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE7,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE7      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE7      ,0))) CNT_TYPE7,
            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE8,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE8      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE8      ,0))) CNT_TYPE8,
            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE9,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE9      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE9      ,0))) CNT_TYPE9,
            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE10,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE10      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE10      ,0))) CNT_TYPE10,
            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE11,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE11      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE11      ,0))) CNT_TYPE11,
            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE12,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE12      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE12      ,0))) CNT_TYPE12,
            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE1_ALL,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE1_ALL      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE1_ALL      ,0))) CNT_TYPE1_ALL,
            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE2_ALL,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE2_ALL      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE2_ALL      ,0))) CNT_TYPE2_ALL,
            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE3_ALL,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE3_ALL      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE3_ALL      ,0))) CNT_TYPE3_ALL,
            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE4_ALL,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE4_ALL      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE4_ALL      ,0))) CNT_TYPE4_ALL,
            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE5_ALL,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE5_ALL      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE5_ALL      ,0))) CNT_TYPE5_ALL,
            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE6_ALL,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE6_ALL      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE6_ALL      ,0))) CNT_TYPE6_ALL, 
            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE7_ALL,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE7_ALL      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE7_ALL      ,0))) CNT_TYPE7_ALL,
            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE8_ALL,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE8_ALL      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE8_ALL      ,0))) CNT_TYPE8_ALL,
            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE9_ALL,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE9_ALL      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE9_ALL      ,0))) CNT_TYPE9_ALL,
            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE10_ALL,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE10_ALL      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE10_ALL      ,0))) CNT_TYPE10_ALL,
            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE11_ALL,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE11_ALL      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE11_ALL      ,0))) CNT_TYPE11_ALL,
            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE12_ALL,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),CNT_TYPE12_ALL      ,0))
                                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,CNT_TYPE12_ALL      ,0))) CNT_TYPE12_ALL                                
    FROM            
    (SELECT SUBSTR(A.ACEP_YYYYMM, 1, 4) YYYY,
                          SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'01', CNT,0)) CNT_TYPE1,
                          SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'02', CNT,0)) CNT_TYPE2,
                          SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'03', CNT,0)) CNT_TYPE3,
                          SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'04', CNT,0)) CNT_TYPE4,
                          SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'05', CNT,0)) CNT_TYPE5,
                          SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'06', CNT,0)) CNT_TYPE6,
                          SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'07', CNT,0)) CNT_TYPE7,
                          SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'08', CNT,0)) CNT_TYPE8,
                          SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'09', CNT,0)) CNT_TYPE9,
                          SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'10', CNT,0)) CNT_TYPE10,
                          SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'11', CNT,0)) CNT_TYPE11,
                          SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'12', CNT,0)) CNT_TYPE12,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'01', CNT2,0))) CNT_TYPE1_ALL,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'02', CNT2,0))) CNT_TYPE2_ALL,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'03', CNT2,0))) CNT_TYPE3_ALL,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'04', CNT2,0))) CNT_TYPE4_ALL,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'05', CNT2,0))) CNT_TYPE5_ALL,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'06', CNT2,0))) CNT_TYPE6_ALL,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'07', CNT2,0))) CNT_TYPE7_ALL,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'08', CNT2,0))) CNT_TYPE8_ALL,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'09', CNT2,0))) CNT_TYPE9_ALL,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'10', CNT2,0))) CNT_TYPE10_ALL,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'11', CNT2,0))) CNT_TYPE11_ALL,
                          TO_CHAR(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'12', CNT2,0))) CNT_TYPE12_ALL,
                          SUM(CNT2) TOTAL2  
                     FROM (                           
                              SELECT SUBSTR(B.ACEP_DATE, 1, 6) ACEP_YYYYMM,
                                     SUM(
                                         DECODE(SUBSTR(B.ACEP_DATE, 1, 6)
                                               ,TO_CHAR(ADD_MONTHS(SYSDATE, -24), 'YYYYMM')
                                               ,CASE WHEN SUBSTR(B.ACEP_DATE, 1, 8) <![CDATA[<=]]> TO_CHAR(ADD_MONTHS(SYSDATE, -24), 'YYYYMMDD') THEN 1 ELSE 0 END
                                               ,TO_CHAR(ADD_MONTHS(SYSDATE, -12), 'YYYYMM')
                                               ,CASE WHEN SUBSTR(B.ACEP_DATE, 1, 8) <![CDATA[<=]]> TO_CHAR(ADD_MONTHS(SYSDATE, -12), 'YYYYMMDD') THEN 1 ELSE 0 END
                                               ,1)
                                         ) CNT   
                                    ,SUM(1) CNT2 
                                FROM CLT_CLAIM_MST B
                               WHERE SUBSTR(B.ACEP_DATE, 1, 6) BETWEEN TO_NUMBER(TO_CHAR(ADD_MONTHS(SYSDATE, -24), 'YYYY')||'01') AND TO_CHAR(SYSDATE,'YYYY')||'12'
                                 AND B.CNCL_TYPE_CD = '1'
                                 AND B.PROS_DIV_CD_1 IS NOT NULL
                                 AND SUBSTR (B.TYPE_CD, 1, 3) = SUBSTR (#gubn#, 1, 3)
                               GROUP BY SUBSTR(B.ACEP_DATE, 1, 6)
                               ORDER BY SUBSTR(B.ACEP_DATE, 1, 6)                     
                          ) A
                    GROUP BY SUBSTR(A.ACEP_YYYYMM, 1, 4)
      )
      WHERE YYYY IN (TO_CHAR(SYSDATE,'YYYY'), TO_CHAR(SYSDATE,'YYYY')-1)
      ))
    )         
    ORDER BY SEQ 
  	</select>
	
  	<resultMap id="claimTypResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="READ_YN" property="read_yn" jdbcType="VARCHAR" />
	    <result column="GUBN" property="gubn" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE1" property="data1" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE2" property="data2" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE3" property="data3" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE4" property="data4" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE5" property="data5" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE6" property="data6" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE7" property="data7" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE8" property="data8" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE9" property="data9" jdbcType="VARCHAR" />
	    <result column="CNT_TYPE10" property="data10" jdbcType="VARCHAR" />
	    <result column="CNT_TOTAL" property="total" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectClaimTyp_b" resultMap="claimTypResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
   		SELECT               ROWNUM SEQ, 
                            'N' READ_YN,
                            DECODE(SEQ,4,'당월',GUBN) GUBN,
                            CNT_TYPE1,
                            CNT_TYPE2,
                            CNT_TYPE3,
                            CNT_TYPE4,
                            CNT_TYPE5,
                            CNT_TYPE6,
                            CNT_TYPE7,
                            CNT_TYPE8,
                            CNT_TYPE9,
                            CNT_TYPE10,
                            CNT_TOTAL                          
                            FROM CLAIM_TYPCHART_A
                            ORDER
                            BY	SEQ 
   	</select>
	
  	<select id="selectClaimTyp" resultMap="claimTypResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
   		SELECT               ROWNUM SEQ, 
                            'N' READ_YN,
                            DECODE(SEQ,4,'당월',GUBN) GUBN,
                            CNT_TYPE1,
                            CNT_TYPE2,
                            CNT_TYPE3,
                            CNT_TYPE4,
                            CNT_TYPE5,
                            CNT_TYPE6,
                            CNT_TYPE7,
                            CNT_TYPE8,
                            CNT_TYPE9,
                            CNT_TYPE10,
                            CNT_TOTAL                          
                            FROM CLTPT024
                            ORDER
                            BY	SEQ DESC
    </select>
    
    <resultMap id="claimTypyResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
    	<result column="PROD_NM" property="prod_nm" jdbcType="VARCHAR" />
	    <result column="CNT" property="data1" jdbcType="VARCHAR" />
    </resultMap>
     <select id="selectTypChart_Emul_y" resultMap="claimTypyResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
    	SELECT 	PROD_NM,
    			CNT
    	FROM	CLAIM_EMUL_BACK_Y
    	ORDER
    	BY		CNT DESC  	
  	</select>
  	<select id="selectTypChart_Pojang_y" resultMap="claimTypyResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
    	SELECT 	PROD_NM,
    			CNT
    	FROM	CLAIM_POJANG_BACK_Y
    	ORDER
    	BY		CNT DESC  	
  	</select>
  	<select id="selectTypChart_Bule_y" resultMap="claimTypyResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
    	SELECT 	PROD_NM,
    			CNT
    	FROM	CLAIM_BULE_BACK_Y
    	ORDER
    	BY		CNT DESC  	
  	</select>
  	<select id="selectTypChart_Byun_y" resultMap="claimTypyResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
    	SELECT 	PROD_NM,
    			CNT
    	FROM	CLAIM_BYUN_BACK_Y
    	ORDER
    	BY		CNT DESC  	
  	</select>
    <select id="selectTypChart_y" resultMap="claimTypyResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
    	SELECT DISTINCT S2.VTEXT PROD_NM,
	    	   COUNT(PROD_CD) CNT
   		FROM  SDSTT301 S1, SAPT179T S2, CLT_CLAIM_MST A
        WHERE SUBSTR(A.ACEP_DATE, 1, 8) BETWEEN TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYYMMDD') AND TO_CHAR(SYSDATE,'YYYYMMDD')
        AND   S1.BOSS_PROD_CODE = S2.PRODH 
        AND   S1.PROD_CODE = A.PROD_CD 
        AND   S2.SPRAS = '3'
        AND   S1.SALE_ORG = '1000'
        AND   A.CNCL_TYPE_CD = '1'
        AND   A.PROS_DIV_CD_1 IS NOT NULL
        AND   SUBSTR (A.TYPE_CD, 1, 3) = SUBSTR (#gubn#, 1, 3)  
        GROUP BY S2.VTEXT
		ORDER BY CNT DESC
  	
  	</select>
  	
  	<resultMap id="claimTypmResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
    	<result column="PROD_NM" property="prod_nm" jdbcType="VARCHAR" />
	    <result column="CNT" property="data1" jdbcType="VARCHAR" />
    </resultMap>
    <select id="selectTypChart_Emul_m" resultMap="claimTypyResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
    	SELECT 	PROD_NM,
    			CNT
    	FROM	CLAIM_EMUL_BACK_M
    	ORDER
    	BY		CNT DESC  	
  	</select>
  	<select id="selectTypChart_Pojang_m" resultMap="claimTypyResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
    	SELECT 	PROD_NM,
    			CNT
    	FROM	CLAIM_POJANG_BACK_M
    	ORDER
    	BY		CNT DESC  	
  	</select>
  	<select id="selectTypChart_Bule_m" resultMap="claimTypyResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
    	SELECT 	PROD_NM,
    			CNT
    	FROM	CLAIM_BULE_BACK_M
    	ORDER
    	BY		CNT DESC  	
  	</select>
  	<select id="selectTypChart_Byun_m" resultMap="claimTypyResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
    	SELECT 	PROD_NM,
    			CNT
    	FROM	CLAIM_BYUN_BACK_M
    	ORDER
    	BY		CNT DESC  	
  	</select>
  	<select id="selectTypChart_m" resultMap="claimTypmResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
	    SELECT DISTINCT S2.VTEXT PROD_NM,
	    	   COUNT(PROD_CD) CNT
   		FROM  SDSTT301 S1, SAPT179T S2, CLT_CLAIM_MST A
        WHERE SUBSTR(A.ACEP_DATE, 1, 6) = TO_CHAR(SYSDATE,'YYYYMM')
        AND   S1.BOSS_PROD_CODE = S2.PRODH 
        AND   S1.PROD_CODE = A.PROD_CD 
        AND   S2.SPRAS = '3'
        AND   S1.SALE_ORG = '1000'
        AND   A.CNCL_TYPE_CD = '1'
        AND A.PROS_DIV_CD_1 IS NOT NULL
        AND SUBSTR (A.TYPE_CD, 1, 3) = SUBSTR (#gubn#, 1, 3)  
        GROUP BY S2.VTEXT
		ORDER BY CNT DESC
  	
  	</select>
    
  
  	
  	<resultMap id="prdtCaseResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="type_cd_l" property="type_cd_l" jdbcType="VARCHAR" />
	    <result column="type_name_l" property="type_name_l" jdbcType="VARCHAR" />
	    <result column="type_cd_m" property="type_cd_m" jdbcType="VARCHAR" />
	    <result column="type_name_m" property="type_name_m" jdbcType="VARCHAR" />
	    <result column="DATA" property="data" jdbcType="VARCHAR" />
	    <result column="A" property="a" jdbcType="VARCHAR" />
	    <result column="b" property="b" jdbcType="VARCHAR" />
	    <result column="DURATION" property="dura" jdbcType="VARCHAR" />
	    <result column="GAP" property="gap" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectPrdtCase_b" resultMap="prdtCaseResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT  RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ, 
				DATA.type_cd_l, DATA.type_name_l, DATA.type_cd_m, DATA.type_name_m, DATA.DATA, DATA.A, DATA.b, 
				DATA.DURATION , TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLAIM_CASE_BACK DATA
	    WHERE DURATION = #v_dura#
	    AND DATA.DATA <![CDATA[>=]]> #gubn# 
	    ORDER BY GAP DESC
    </select>
	<select id="selectPrdtCase" resultMap="prdtCaseResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT  RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ, 
				DATA.type_cd_l, DATA.type_name_l, DATA.type_cd_m, DATA.type_name_m, DATA.DATA, DATA.A, DATA.b, 
				DATA.DURATION , TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLTPT021 DATA
	    WHERE DURATION = #v_dura#
	    AND DATA.DATA <![CDATA[>=]]> #gubn# 
	    ORDER BY GAP DESC
    </select>
    
     <resultMap id="prdtCase2Result" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="type_cd_l" property="type_cd_l" jdbcType="VARCHAR" />
	    <result column="type_name_l" property="type_name_l" jdbcType="VARCHAR" />
	    <result column="type_cd_m" property="type_cd_m" jdbcType="VARCHAR" />
	    <result column="type_name_m" property="type_name_m" jdbcType="VARCHAR" />
	    <result column="DATA" property="data" jdbcType="VARCHAR" />
	    <result column="A" property="a" jdbcType="VARCHAR" />
	    <result column="b" property="b" jdbcType="VARCHAR" />
	    <result column="DURATION" property="dura" jdbcType="VARCHAR" />
	    <result column="GAP" property="gap" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectPrdtCase2_b" resultMap="prdtCaseResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT  RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ, 
				DATA.type_cd_l, DATA.type_name_l, DATA.type_cd_m, DATA.type_name_m, DATA.DATA, DATA.A, DATA.b, 
				DATA.DURATION , TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLAIM_CASE_BACK DATA
	    WHERE DURATION = 1
	    AND DATA.DATA <![CDATA[>=]]> 70
	 --   ORDER BY TO_NUMBER(GAP) DESC
    </select>
	<select id="selectPrdtCase2" resultMap="prdtCaseResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT  RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ, 
				DATA.type_cd_l, DATA.type_name_l, DATA.type_cd_m, DATA.type_name_m, DATA.DATA, DATA.A, DATA.b, 
				DATA.DURATION , TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLTPT021 DATA
	    WHERE DURATION = 1
	    AND DATA.DATA <![CDATA[>=]]> 70
	  --  ORDER BY TO_NUMBER(GAP) DESC
    </select>
    
    <resultMap id="prdtCase3Result" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="type_cd_l" property="type_cd_l" jdbcType="VARCHAR" />
	    <result column="type_name_l" property="type_name_l" jdbcType="VARCHAR" />
	    <result column="type_cd_m" property="type_cd_m" jdbcType="VARCHAR" />
	    <result column="type_name_m" property="type_name_m" jdbcType="VARCHAR" />
	    <result column="DATA" property="data" jdbcType="VARCHAR" />
	    <result column="A" property="a" jdbcType="VARCHAR" />
	    <result column="b" property="b" jdbcType="VARCHAR" />
	    <result column="DURATION" property="dura" jdbcType="VARCHAR" />
	    <result column="GAP" property="gap" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectPrdtCase3_b" resultMap="prdtCase3Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT  RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ, 
				DATA.type_cd_l, DATA.type_name_l, DATA.type_cd_m, DATA.type_name_m, DATA.DATA, DATA.A, DATA.b, 
				DATA.DURATION , TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLAIM_CASE_BACK DATA
	    WHERE DURATION = 3
	    AND DATA.DATA <![CDATA[>=]]> 70
	   -- ORDER BY TO_NUMBER(GAP) DESC
    </select>
	<select id="selectPrdtCase3" resultMap="prdtCase3Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT  RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ, 
				DATA.type_cd_l, DATA.type_name_l, DATA.type_cd_m, DATA.type_name_m, DATA.DATA, DATA.A, DATA.b, 
				DATA.DURATION , TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLTPT021 DATA
	    WHERE DURATION = 3
	    AND DATA.DATA <![CDATA[>=]]> 70
	  --  ORDER BY TO_NUMBER(GAP) DESC
    </select>
    <resultMap id="prdtCase4Result" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="type_cd_l" property="type_cd_l" jdbcType="VARCHAR" />
	    <result column="type_name_l" property="type_name_l" jdbcType="VARCHAR" />
	    <result column="type_cd_m" property="type_cd_m" jdbcType="VARCHAR" />
	    <result column="type_name_m" property="type_name_m" jdbcType="VARCHAR" />
	    <result column="DATA" property="data" jdbcType="VARCHAR" />
	    <result column="A" property="a" jdbcType="VARCHAR" />
	    <result column="b" property="b" jdbcType="VARCHAR" />
	    <result column="DURATION" property="dura" jdbcType="VARCHAR" />
	    <result column="GAP" property="gap" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectPrdtCase4_b" resultMap="prdtCase4Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT  RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ, 
				DATA.type_cd_l, DATA.type_name_l, DATA.type_cd_m, DATA.type_name_m, DATA.DATA, DATA.A, DATA.b, 
				DATA.DURATION , TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLAIM_CASE_BACK DATA
	    WHERE DURATION = 12
	    AND DATA.DATA <![CDATA[>=]]> 70
	   -- ORDER BY TO_NUMBER(GAP) DESC
    </select>
	<select id="selectPrdtCase4" resultMap="prdtCase4Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT  RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ, 
				DATA.type_cd_l, DATA.type_name_l, DATA.type_cd_m, DATA.type_name_m, DATA.DATA, DATA.A, DATA.b, 
				DATA.DURATION , TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLTPT021 DATA
	    WHERE DURATION = 12
	    AND DATA.DATA <![CDATA[>=]]> 70
	   -- ORDER BY TO_NUMBER(GAP) DESC
    </select>
  	
  	<resultMap id="prdtProdResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		<result column="SEQ" property="seq" jdbcType="VARCHAR" />
  	    <result column="PRTY_NAME" property="prty_name" jdbcType="VARCHAR" />
	    <result column="PROD_NAME" property="prod_name" jdbcType="VARCHAR" />
	    <result column="DATA" property="data" jdbcType="VARCHAR" />
	    <result column="A" property="a" jdbcType="VARCHAR" />
	    <result column="B" property="b" jdbcType="VARCHAR" />
	    <result column="PREV_YEAR_SIX_MONTH_CNT" property="prev_year_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_YEAR_SIX_MONTH_PROD_CNT" property="prev_year_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_SIX_MONTH_CNT" property="prev_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_SIX_MONTH_PROD_CNT" property="prev_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="DURATION" property="dura" jdbcType="VARCHAR" />
	    <result column="GAP" property="gap" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectPrdtProd_b" resultMap="prdtProdResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT   RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ, 
		         DATA.PRTY_NAME PRTY_NAME, DATA.PROD_NAME PROD_NAME,         																                                                                                                                                                                                                                                                        
                 DATA.DATA,                                                                                                                                                                                                                                                                                                                                                                                                                        
                 DATA.A A,                                                                                                                                                                                                                                                                                                                                                                                                                               
                 DATA.B B,                                                                                                                                                                                                                                                                                                                                                                                                                               
                 DATA.PREV_YEAR_SIX_MONTH_CNT PREV_YEAR_SIX_MONTH_CNT,                                                                                                                                                                                                                                                                                                                                                                                   
                 DATA.PREV_YEAR_SIX_MONTH_PROD_CNT PREV_YEAR_SIX_MONTH_PROD_CNT,                                                                                                                                                                                                                                                                                                                                                                         
                 DATA.PREV_SIX_MONTH_CNT PREV_SIX_MONTH_CNT,                                                                                                                                                                                                                                                                                                                                                                                             
                 DATA.PREV_SIX_MONTH_PROD_CNT PREV_SIX_MONTH_PROD_CNT,
                 DATA.DURATION,
                 TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLAIM_PROD_BACK DATA
	    WHERE DURATION = #v_dura#
	    AND DATA.DATA <![CDATA[>=]]> #gubn#  
	   -- ORDER BY TO_NUMBER(GAP) DESC
	</select>
	<select id="selectPrdtProd" resultMap="prdtProdResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT   RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ, 
		         DATA.PRTY_NAME PRTY_NAME, DATA.PROD_NAME PROD_NAME,         																                                                                                                                                                                                                                                                        
                 DATA.DATA,                                                                                                                                                                                                                                                                                                                                                                                                                        
                 DATA.A A,                                                                                                                                                                                                                                                                                                                                                                                                                               
                 DATA.B B,                                                                                                                                                                                                                                                                                                                                                                                                                               
                 DATA.PREV_YEAR_SIX_MONTH_CNT PREV_YEAR_SIX_MONTH_CNT,                                                                                                                                                                                                                                                                                                                                                                                   
                 DATA.PREV_YEAR_SIX_MONTH_PROD_CNT PREV_YEAR_SIX_MONTH_PROD_CNT,                                                                                                                                                                                                                                                                                                                                                                         
                 DATA.PREV_SIX_MONTH_CNT PREV_SIX_MONTH_CNT,                                                                                                                                                                                                                                                                                                                                                                                             
                 DATA.PREV_SIX_MONTH_PROD_CNT PREV_SIX_MONTH_PROD_CNT,
                 DATA.DURATION,
                 TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLTPT020 DATA
	    WHERE DURATION = #v_dura#
	    AND DATA.DATA <![CDATA[>=]]> #gubn#  
	  --  ORDER BY TO_NUMBER(GAP) DESC
	 </select>
	 
	 <resultMap id="prdtProd2Result" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		<result column="SEQ" property="seq" jdbcType="VARCHAR" />
  	    <result column="PRTY_NAME" property="prty_name" jdbcType="VARCHAR" />
	    <result column="PROD_NAME" property="prod_name" jdbcType="VARCHAR" />
	    <result column="DATA" property="data" jdbcType="VARCHAR" />
	    <result column="A" property="a" jdbcType="VARCHAR" />
	    <result column="B" property="b" jdbcType="VARCHAR" />
	    <result column="PREV_YEAR_SIX_MONTH_CNT" property="prev_year_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_YEAR_SIX_MONTH_PROD_CNT" property="prev_year_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_SIX_MONTH_CNT" property="prev_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_SIX_MONTH_PROD_CNT" property="prev_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="DURATION" property="dura" jdbcType="VARCHAR" />
	    <result column="GAP" property="gap" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectPrdtProd2_b" resultMap="prdtProd2Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT   RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ, 
		         DATA.PRTY_NAME PRTY_NAME, DATA.PROD_NAME PROD_NAME,         																                                                                                                                                                                                                                                                        
                 DATA.DATA,                                                                                                                                                                                                                                                                                                                                                                                                                        
                 DATA.A A,                                                                                                                                                                                                                                                                                                                                                                                                                               
                 DATA.B B,                                                                                                                                                                                                                                                                                                                                                                                                                               
                 DATA.PREV_YEAR_SIX_MONTH_CNT PREV_YEAR_SIX_MONTH_CNT,                                                                                                                                                                                                                                                                                                                                                                                   
                 DATA.PREV_YEAR_SIX_MONTH_PROD_CNT PREV_YEAR_SIX_MONTH_PROD_CNT,                                                                                                                                                                                                                                                                                                                                                                         
                 DATA.PREV_SIX_MONTH_CNT PREV_SIX_MONTH_CNT,                                                                                                                                                                                                                                                                                                                                                                                             
                 DATA.PREV_SIX_MONTH_PROD_CNT PREV_SIX_MONTH_PROD_CNT,
                 DATA.DURATION,
                 TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLAIM_PROD_BACK DATA
	    WHERE DURATION = 1
	    AND DATA.DATA <![CDATA[>=]]> 70
	    --ORDER BY TO_NUMBER(GAP) DESC
	 </select>
	<select id="selectPrdtProd2" resultMap="prdtProd2Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT   RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ, 
		         DATA.PRTY_NAME PRTY_NAME, DATA.PROD_NAME PROD_NAME,         																                                                                                                                                                                                                                                                        
                 DATA.DATA,                                                                                                                                                                                                                                                                                                                                                                                                                        
                 DATA.A A,                                                                                                                                                                                                                                                                                                                                                                                                                               
                 DATA.B B,                                                                                                                                                                                                                                                                                                                                                                                                                               
                 DATA.PREV_YEAR_SIX_MONTH_CNT PREV_YEAR_SIX_MONTH_CNT,                                                                                                                                                                                                                                                                                                                                                                                   
                 DATA.PREV_YEAR_SIX_MONTH_PROD_CNT PREV_YEAR_SIX_MONTH_PROD_CNT,                                                                                                                                                                                                                                                                                                                                                                         
                 DATA.PREV_SIX_MONTH_CNT PREV_SIX_MONTH_CNT,                                                                                                                                                                                                                                                                                                                                                                                             
                 DATA.PREV_SIX_MONTH_PROD_CNT PREV_SIX_MONTH_PROD_CNT,
                 DATA.DURATION,
                 TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLTPT020 DATA
	    WHERE DURATION = 1
	    AND DATA.DATA <![CDATA[>=]]> 70
	    --ORDER BY TO_NUMBER(GAP) DESC
	 </select>
	 
	  <resultMap id="prdtProd3Result" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		<result column="SEQ" property="seq" jdbcType="VARCHAR" />
  	    <result column="PRTY_NAME" property="prty_name" jdbcType="VARCHAR" />
	    <result column="PROD_NAME" property="prod_name" jdbcType="VARCHAR" />
	    <result column="DATA" property="data" jdbcType="VARCHAR" />
	    <result column="A" property="a" jdbcType="VARCHAR" />
	    <result column="B" property="b" jdbcType="VARCHAR" />
	    <result column="PREV_YEAR_SIX_MONTH_CNT" property="prev_year_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_YEAR_SIX_MONTH_PROD_CNT" property="prev_year_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_SIX_MONTH_CNT" property="prev_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_SIX_MONTH_PROD_CNT" property="prev_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="DURATION" property="dura" jdbcType="VARCHAR" />
	    <result column="GAP" property="gap" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectPrdtProd3_b" resultMap="prdtProd3Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT   RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ, 
		         DATA.PRTY_NAME PRTY_NAME, DATA.PROD_NAME PROD_NAME,         																                                                                                                                                                                                                                                                        
                 DATA.DATA,                                                                                                                                                                                                                                                                                                                                                                                                                        
                 DATA.A A,                                                                                                                                                                                                                                                                                                                                                                                                                               
                 DATA.B B,                                                                                                                                                                                                                                                                                                                                                                                                                               
                 DATA.PREV_YEAR_SIX_MONTH_CNT PREV_YEAR_SIX_MONTH_CNT,                                                                                                                                                                                                                                                                                                                                                                                   
                 DATA.PREV_YEAR_SIX_MONTH_PROD_CNT PREV_YEAR_SIX_MONTH_PROD_CNT,                                                                                                                                                                                                                                                                                                                                                                         
                 DATA.PREV_SIX_MONTH_CNT PREV_SIX_MONTH_CNT,                                                                                                                                                                                                                                                                                                                                                                                             
                 DATA.PREV_SIX_MONTH_PROD_CNT PREV_SIX_MONTH_PROD_CNT,
                 DATA.DURATION,
                 TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLAIM_PROD_BACK DATA
	    WHERE DURATION = 3
	    AND DATA.DATA <![CDATA[>=]]> 70
	    --ORDER BY TO_NUMBER(GAP) DESC
	 </select>
	<select id="selectPrdtProd3" resultMap="prdtProd3Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT   RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ, 
		         DATA.PRTY_NAME PRTY_NAME, DATA.PROD_NAME PROD_NAME,         																                                                                                                                                                                                                                                                        
                 DATA.DATA,                                                                                                                                                                                                                                                                                                                                                                                                                        
                 DATA.A A,                                                                                                                                                                                                                                                                                                                                                                                                                               
                 DATA.B B,                                                                                                                                                                                                                                                                                                                                                                                                                               
                 DATA.PREV_YEAR_SIX_MONTH_CNT PREV_YEAR_SIX_MONTH_CNT,                                                                                                                                                                                                                                                                                                                                                                                   
                 DATA.PREV_YEAR_SIX_MONTH_PROD_CNT PREV_YEAR_SIX_MONTH_PROD_CNT,                                                                                                                                                                                                                                                                                                                                                                         
                 DATA.PREV_SIX_MONTH_CNT PREV_SIX_MONTH_CNT,                                                                                                                                                                                                                                                                                                                                                                                             
                 DATA.PREV_SIX_MONTH_PROD_CNT PREV_SIX_MONTH_PROD_CNT,
                 DATA.DURATION,
                 TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLTPT020 DATA
	    WHERE DURATION = 3
	    AND DATA.DATA <![CDATA[>=]]> 70
	    --ORDER BY TO_NUMBER(GAP) DESC
	 </select>
	 
	  <resultMap id="prdtProd4Result" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		<result column="SEQ" property="seq" jdbcType="VARCHAR" />
  	    <result column="PRTY_NAME" property="prty_name" jdbcType="VARCHAR" />
	    <result column="PROD_NAME" property="prod_name" jdbcType="VARCHAR" />
	    <result column="DATA" property="data" jdbcType="VARCHAR" />
	    <result column="A" property="a" jdbcType="VARCHAR" />
	    <result column="B" property="b" jdbcType="VARCHAR" />
	    <result column="PREV_YEAR_SIX_MONTH_CNT" property="prev_year_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_YEAR_SIX_MONTH_PROD_CNT" property="prev_year_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_SIX_MONTH_CNT" property="prev_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_SIX_MONTH_PROD_CNT" property="prev_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="DURATION" property="dura" jdbcType="VARCHAR" />
	    <result column="GAP" property="gap" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectPrdtProd4_b" resultMap="prdtProd4Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT   RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ, 
		         DATA.PRTY_NAME PRTY_NAME, DATA.PROD_NAME PROD_NAME,         																                                                                                                                                                                                                                                                        
                 DATA.DATA,                                                                                                                                                                                                                                                                                                                                                                                                                        
                 DATA.A A,                                                                                                                                                                                                                                                                                                                                                                                                                               
                 DATA.B B,                                                                                                                                                                                                                                                                                                                                                                                                                               
                 DATA.PREV_YEAR_SIX_MONTH_CNT PREV_YEAR_SIX_MONTH_CNT,                                                                                                                                                                                                                                                                                                                                                                                   
                 DATA.PREV_YEAR_SIX_MONTH_PROD_CNT PREV_YEAR_SIX_MONTH_PROD_CNT,                                                                                                                                                                                                                                                                                                                                                                         
                 DATA.PREV_SIX_MONTH_CNT PREV_SIX_MONTH_CNT,                                                                                                                                                                                                                                                                                                                                                                                             
                 DATA.PREV_SIX_MONTH_PROD_CNT PREV_SIX_MONTH_PROD_CNT,
                 DATA.DURATION,
                 TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLAIM_PROD_BACK DATA
	    WHERE DURATION = 12
	    AND DATA.DATA <![CDATA[>=]]> 70
	    --ORDER BY TO_NUMBER(GAP) DESC
	 </select>
	<select id="selectPrdtProd4" resultMap="prdtProd4Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT   RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ, 
		         DATA.PRTY_NAME PRTY_NAME, DATA.PROD_NAME PROD_NAME,         																                                                                                                                                                                                                                                                        
                 DATA.DATA,                                                                                                                                                                                                                                                                                                                                                                                                                        
                 DATA.A A,                                                                                                                                                                                                                                                                                                                                                                                                                               
                 DATA.B B,                                                                                                                                                                                                                                                                                                                                                                                                                               
                 DATA.PREV_YEAR_SIX_MONTH_CNT PREV_YEAR_SIX_MONTH_CNT,                                                                                                                                                                                                                                                                                                                                                                                   
                 DATA.PREV_YEAR_SIX_MONTH_PROD_CNT PREV_YEAR_SIX_MONTH_PROD_CNT,                                                                                                                                                                                                                                                                                                                                                                         
                 DATA.PREV_SIX_MONTH_CNT PREV_SIX_MONTH_CNT,                                                                                                                                                                                                                                                                                                                                                                                             
                 DATA.PREV_SIX_MONTH_PROD_CNT PREV_SIX_MONTH_PROD_CNT,
                 DATA.DURATION,
                 TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLTPT020 DATA
	    WHERE DURATION = 12
	    AND DATA.DATA <![CDATA[>=]]> 70
	    --ORDER BY TO_NUMBER(GAP) DESC
	 </select>
  
  	
  	<resultMap id="prdtLinResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		 <result column="SEQ" property="seq" jdbcType="VARCHAR" />
  	    <result column="plant" property="plant" jdbcType="VARCHAR" />
	    <result column="line" property="line" jdbcType="VARCHAR" />
	    <result column="plant_name" property="plant_name" jdbcType="VARCHAR" />
	    <result column="line_name" property="line_name" jdbcType="VARCHAR" />
	    <result column="DATA" property="data" jdbcType="VARCHAR" />
	    <result column="a" property="a" jdbcType="VARCHAR" />
	    <result column="b" property="b" jdbcType="VARCHAR" />
	    <result column="prev_year_six_month_cnt" property="prev_year_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="prev_year_six_month_prod_cnt" property="prev_year_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="prev_six_month_cnt" property="prev_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="prev_six_month_prod_cnt" property="prev_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="DURATION" property="dura" jdbcType="VARCHAR" />
	    <result column="GAP" property="gap" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectPrdtLine_b" resultMap="prdtLinResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ,
			   DATA.PLANT, DATA.LINE, DATA.PLANT_NAME, DATA.LINE_NAME,
               DATA.DATA, DATA.A, DATA.B, DATA.PREV_YEAR_SIX_MONTH_CNT,
               DATA.PREV_YEAR_SIX_MONTH_PROD_CNT, DATA.PREV_SIX_MONTH_CNT, DATA.PREV_SIX_MONTH_PROD_CNT, 
               DATA.DURATION,
               TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLAIM_LINE_BACK DATA
	    WHERE DURATION = #v_dura#
	    AND DATA.DATA <![CDATA[>=]]> #gubn#  
	   -- ORDER BY TO_NUMBER(GAP) DESC  
    </select>
	<select id="selectPrdtLine" resultMap="prdtLinResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ,
			   DATA.PLANT, DATA.LINE, DATA.PLANT_NAME, DATA.LINE_NAME,
               DATA.DATA, DATA.A, DATA.B, DATA.PREV_YEAR_SIX_MONTH_CNT,
               DATA.PREV_YEAR_SIX_MONTH_PROD_CNT, DATA.PREV_SIX_MONTH_CNT, DATA.PREV_SIX_MONTH_PROD_CNT, 
               DATA.DURATION,
               TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLTPT023 DATA
	    WHERE DURATION = #v_dura#
	    AND DATA.DATA <![CDATA[>=]]> #gubn#  
	    --ORDER BY TO_NUMBER(GAP) DESC  
    </select>
    
    <resultMap id="prdtLine2Result" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		 <result column="SEQ" property="seq" jdbcType="VARCHAR" />
  	    <result column="plant" property="plant" jdbcType="VARCHAR" />
	    <result column="line" property="line" jdbcType="VARCHAR" />
	    <result column="plant_name" property="plant_name" jdbcType="VARCHAR" />
	    <result column="line_name" property="line_name" jdbcType="VARCHAR" />
	    <result column="DATA" property="data" jdbcType="VARCHAR" />
	    <result column="a" property="a" jdbcType="VARCHAR" />
	    <result column="b" property="b" jdbcType="VARCHAR" />
	    <result column="prev_year_six_month_cnt" property="prev_year_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="prev_year_six_month_prod_cnt" property="prev_year_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="prev_six_month_cnt" property="prev_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="prev_six_month_prod_cnt" property="prev_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="DURATION" property="dura" jdbcType="VARCHAR" />
	    <result column="GAP" property="gap" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectPrdtLine2_b" resultMap="prdtLine2Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ,
			   DATA.PLANT, DATA.LINE, DATA.PLANT_NAME, DATA.LINE_NAME,
               DATA.DATA, DATA.A, DATA.B, DATA.PREV_YEAR_SIX_MONTH_CNT,
               DATA.PREV_YEAR_SIX_MONTH_PROD_CNT, DATA.PREV_SIX_MONTH_CNT, DATA.PREV_SIX_MONTH_PROD_CNT, 
               DATA.DURATION,
               TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLAIM_LINE_BACK DATA
	    WHERE DURATION =1
	    AND DATA.DATA <![CDATA[>=]]> 70  
	    --ORDER BY TO_NUMBER(GAP) DESC  
    </select>
	<select id="selectPrdtLine2" resultMap="prdtLine2Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ,
			   DATA.PLANT, DATA.LINE, DATA.PLANT_NAME, DATA.LINE_NAME,
               DATA.DATA, DATA.A, DATA.B, DATA.PREV_YEAR_SIX_MONTH_CNT,
               DATA.PREV_YEAR_SIX_MONTH_PROD_CNT, DATA.PREV_SIX_MONTH_CNT, DATA.PREV_SIX_MONTH_PROD_CNT, 
               DATA.DURATION,
               TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLTPT023 DATA
	    WHERE DURATION =1
	    AND DATA.DATA <![CDATA[>=]]> 70  
	    --ORDER BY TO_NUMBER(GAP) DESC  
    </select>
    <resultMap id="prdtLine3Result" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		 <result column="SEQ" property="seq" jdbcType="VARCHAR" />
  	    <result column="plant" property="plant" jdbcType="VARCHAR" />
	    <result column="line" property="line" jdbcType="VARCHAR" />
	    <result column="plant_name" property="plant_name" jdbcType="VARCHAR" />
	    <result column="line_name" property="line_name" jdbcType="VARCHAR" />
	    <result column="DATA" property="data" jdbcType="VARCHAR" />
	    <result column="a" property="a" jdbcType="VARCHAR" />
	    <result column="b" property="b" jdbcType="VARCHAR" />
	    <result column="prev_year_six_month_cnt" property="prev_year_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="prev_year_six_month_prod_cnt" property="prev_year_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="prev_six_month_cnt" property="prev_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="prev_six_month_prod_cnt" property="prev_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="DURATION" property="dura" jdbcType="VARCHAR" />
	    <result column="GAP" property="gap" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectPrdtLine3_b" resultMap="prdtLine3Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ, 
			   DATA.PLANT, DATA.LINE, DATA.PLANT_NAME, DATA.LINE_NAME,
               DATA.DATA, DATA.A, DATA.B, DATA.PREV_YEAR_SIX_MONTH_CNT,
               DATA.PREV_YEAR_SIX_MONTH_PROD_CNT, DATA.PREV_SIX_MONTH_CNT, DATA.PREV_SIX_MONTH_PROD_CNT, 
               DATA.DURATION,
               TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLAIM_LINE_BACK DATA
	    WHERE DURATION =3
	    AND DATA.DATA <![CDATA[>=]]> 70  
	    --ORDER BY TO_NUMBER(GAP) DESC  
    </select>
	<select id="selectPrdtLine3" resultMap="prdtLine3Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ, 
			   DATA.PLANT, DATA.LINE, DATA.PLANT_NAME, DATA.LINE_NAME,
               DATA.DATA, DATA.A, DATA.B, DATA.PREV_YEAR_SIX_MONTH_CNT,
               DATA.PREV_YEAR_SIX_MONTH_PROD_CNT, DATA.PREV_SIX_MONTH_CNT, DATA.PREV_SIX_MONTH_PROD_CNT, 
               DATA.DURATION,
               TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLTPT023 DATA
	    WHERE DURATION =3
	    AND DATA.DATA <![CDATA[>=]]> 70  
	    --ORDER BY TO_NUMBER(GAP) DESC  
    </select>
    <resultMap id="prdtLine4Result" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		 <result column="SEQ" property="seq" jdbcType="VARCHAR" />
  	    <result column="plant" property="plant" jdbcType="VARCHAR" />
	    <result column="line" property="line" jdbcType="VARCHAR" />
	    <result column="plant_name" property="plant_name" jdbcType="VARCHAR" />
	    <result column="line_name" property="line_name" jdbcType="VARCHAR" />
	    <result column="DATA" property="data" jdbcType="VARCHAR" />
	    <result column="a" property="a" jdbcType="VARCHAR" />
	    <result column="b" property="b" jdbcType="VARCHAR" />
	    <result column="prev_year_six_month_cnt" property="prev_year_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="prev_year_six_month_prod_cnt" property="prev_year_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="prev_six_month_cnt" property="prev_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="prev_six_month_prod_cnt" property="prev_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="DURATION" property="dura" jdbcType="VARCHAR" />
	    <result column="GAP" property="gap" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectPrdtLine4_b" resultMap="prdtLine4Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ,  
			   DATA.PLANT, DATA.LINE, DATA.PLANT_NAME, DATA.LINE_NAME,
               DATA.DATA, DATA.A, DATA.B, DATA.PREV_YEAR_SIX_MONTH_CNT,
               DATA.PREV_YEAR_SIX_MONTH_PROD_CNT, DATA.PREV_SIX_MONTH_CNT, DATA.PREV_SIX_MONTH_PROD_CNT, 
               DATA.DURATION,
               TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLAIM_LINE_BACK DATA
	    WHERE DURATION =12
	    AND DATA.DATA <![CDATA[>=]]> 70  
	   -- ORDER BY TO_NUMBER(GAP) DESC  
    </select>
	<select id="selectPrdtLine4" resultMap="prdtLine4Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ,  
			   DATA.PLANT, DATA.LINE, DATA.PLANT_NAME, DATA.LINE_NAME,
               DATA.DATA, DATA.A, DATA.B, DATA.PREV_YEAR_SIX_MONTH_CNT,
               DATA.PREV_YEAR_SIX_MONTH_PROD_CNT, DATA.PREV_SIX_MONTH_CNT, DATA.PREV_SIX_MONTH_PROD_CNT, 
               DATA.DURATION,
               TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP 
	    FROM CLTPT023 DATA
	    WHERE DURATION =12
	    AND DATA.DATA <![CDATA[>=]]> 70  
	    --ORDER BY TO_NUMBER(GAP) DESC  
    </select>
  	
  	<resultMap id="prdtTeamResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		<result column="SEQ" property="seq" jdbcType="VARCHAR" />
  	    <result column="PLANT" property="plant" jdbcType="VARCHAR" />
	    <result column="LINE" property="line" jdbcType="VARCHAR" />
	    <result column="PLANT_NAME" property="plant_name" jdbcType="VARCHAR" />
	    <result column="LINE_NAME" property="line_name" jdbcType="VARCHAR" />
	    <result column="DATA" property="data" jdbcType="VARCHAR" />
	    <result column="A" property="a" jdbcType="VARCHAR" />
	    <result column="B" property="b" jdbcType="VARCHAR" />
	     <result column="PREV_YEAR_SIX_MONTH_CNT" property="prev_year_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_YEAR_SIX_MONTH_PROD_CNT" property="prev_year_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_SIX_MONTH_CNT" property="prev_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_SIX_MONTH_PROD_CNT" property="prev_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="DURATION" property="dura" jdbcType="VARCHAR" />
	    <result column="GAP" property="gap" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectPrdtTeam_b" resultMap="prdtTeamResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT  RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ, 
				DATA.PLANT, DATA.LINE, DATA.PLANT_NAME, DATA.LINE_NAME, DATA.DATA, DATA.A, DATA.B, 
                DATA.PREV_YEAR_SIX_MONTH_CNT,
                DATA.PREV_YEAR_SIX_MONTH_PROD_CNT,         
                DATA.PREV_SIX_MONTH_CNT,
                DATA.PREV_SIX_MONTH_PROD_CNT,
                DATA.DURATION,
                TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP                
	    FROM CLAIM_TEAM_BACK DATA
	    WHERE DURATION = #v_dura#
	    AND DATA.LINE <![CDATA[<>]]> '9999'
	    AND DATA.DATA <![CDATA[>=]]> #gubn#  
	    --ORDER BY TO_NUMBER(GAP) DESC     
    </select>
	<select id="selectPrdtTeam" resultMap="prdtTeamResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT  RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ, 
				DATA.PLANT, DATA.LINE, DATA.PLANT_NAME, DATA.LINE_NAME, DATA.DATA, DATA.A, DATA.B, 
                DATA.PREV_YEAR_SIX_MONTH_CNT,
                DATA.PREV_YEAR_SIX_MONTH_PROD_CNT,         
                DATA.PREV_SIX_MONTH_CNT,
                DATA.PREV_SIX_MONTH_PROD_CNT,
                DATA.DURATION,
                TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP                
	    FROM CLTPT022 DATA
	    WHERE DURATION = #v_dura#
	    AND DATA.LINE <![CDATA[<>]]> '9999'
	    AND DATA.DATA <![CDATA[>=]]> #gubn#  
	    --ORDER BY TO_NUMBER(GAP) DESC     
    </select>
    
    <resultMap id="prdtTeam2Result" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		<result column="SEQ" property="seq" jdbcType="VARCHAR" />
  	    <result column="PLANT" property="plant" jdbcType="VARCHAR" />
	    <result column="LINE" property="line" jdbcType="VARCHAR" />
	    <result column="PLANT_NAME" property="plant_name" jdbcType="VARCHAR" />
	    <result column="LINE_NAME" property="line_name" jdbcType="VARCHAR" />
	    <result column="DATA" property="data" jdbcType="VARCHAR" />
	    <result column="A" property="a" jdbcType="VARCHAR" />
	    <result column="B" property="b" jdbcType="VARCHAR" />
	     <result column="PREV_YEAR_SIX_MONTH_CNT" property="prev_year_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_YEAR_SIX_MONTH_PROD_CNT" property="prev_year_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_SIX_MONTH_CNT" property="prev_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_SIX_MONTH_PROD_CNT" property="prev_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="DURATION" property="dura" jdbcType="VARCHAR" />
	    <result column="GAP" property="gap" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectPrdtTeam2_b" resultMap="prdtTeam2Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT  RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ,
				DATA.PLANT, DATA.LINE, DATA.PLANT_NAME, DATA.LINE_NAME, DATA.DATA, DATA.A, DATA.B, 
                DATA.PREV_YEAR_SIX_MONTH_CNT,
                DATA.PREV_YEAR_SIX_MONTH_PROD_CNT,         
                DATA.PREV_SIX_MONTH_CNT,
                DATA.PREV_SIX_MONTH_PROD_CNT,
                DATA.DURATION,
                TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP                     
	    FROM CLAIM_TEAM_BACK DATA
	    WHERE DURATION = 1
	    AND DATA.LINE <![CDATA[<>]]> '9999'
	    AND DATA.DATA <![CDATA[>=]]> 70  
	   -- ORDER BY TO_NUMBER(GAP) DESC       
    </select>
	<select id="selectPrdtTeam2" resultMap="prdtTeam2Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT  RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ,
				DATA.PLANT, DATA.LINE, DATA.PLANT_NAME, DATA.LINE_NAME, DATA.DATA, DATA.A, DATA.B, 
                DATA.PREV_YEAR_SIX_MONTH_CNT,
                DATA.PREV_YEAR_SIX_MONTH_PROD_CNT,         
                DATA.PREV_SIX_MONTH_CNT,
                DATA.PREV_SIX_MONTH_PROD_CNT,
                DATA.DURATION,
                TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP                     
	    FROM CLTPT022 DATA
	    WHERE DURATION = 1
	    AND DATA.LINE <![CDATA[<>]]> '9999'
	    AND DATA.DATA <![CDATA[>=]]> 70  
	    --ORDER BY TO_NUMBER(GAP) DESC       
    </select>
    
    <resultMap id="prdtTeam3Result" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		<result column="SEQ" property="seq" jdbcType="VARCHAR" />
  	    <result column="PLANT" property="plant" jdbcType="VARCHAR" />
	    <result column="LINE" property="line" jdbcType="VARCHAR" />
	    <result column="PLANT_NAME" property="plant_name" jdbcType="VARCHAR" />
	    <result column="LINE_NAME" property="line_name" jdbcType="VARCHAR" />
	    <result column="DATA" property="data" jdbcType="VARCHAR" />
	    <result column="A" property="a" jdbcType="VARCHAR" />
	    <result column="B" property="b" jdbcType="VARCHAR" />
	     <result column="PREV_YEAR_SIX_MONTH_CNT" property="prev_year_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_YEAR_SIX_MONTH_PROD_CNT" property="prev_year_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_SIX_MONTH_CNT" property="prev_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_SIX_MONTH_PROD_CNT" property="prev_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="DURATION" property="dura" jdbcType="VARCHAR" />
	    <result column="GAP" property="gap" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectPrdtTeam3_b" resultMap="prdtTeam3Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT  RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ,
				DATA.PLANT, DATA.LINE, DATA.PLANT_NAME, DATA.LINE_NAME, DATA.DATA, DATA.A, DATA.B, 
                DATA.PREV_YEAR_SIX_MONTH_CNT,
                DATA.PREV_YEAR_SIX_MONTH_PROD_CNT,         
                DATA.PREV_SIX_MONTH_CNT,
                DATA.PREV_SIX_MONTH_PROD_CNT,
                DATA.DURATION,
                TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP                     
	    FROM CLAIM_TEAM_BACK DATA
	    WHERE DURATION = 3
	    AND DATA.LINE <![CDATA[<>]]> '9999'
	    AND DATA.DATA <![CDATA[>=]]> 70 
	   -- ORDER BY TO_NUMBER(GAP) DESC    
    </select>
	<select id="selectPrdtTeam3" resultMap="prdtTeam3Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT  RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ,
				DATA.PLANT, DATA.LINE, DATA.PLANT_NAME, DATA.LINE_NAME, DATA.DATA, DATA.A, DATA.B, 
                DATA.PREV_YEAR_SIX_MONTH_CNT,
                DATA.PREV_YEAR_SIX_MONTH_PROD_CNT,         
                DATA.PREV_SIX_MONTH_CNT,
                DATA.PREV_SIX_MONTH_PROD_CNT,
                DATA.DURATION,
                TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP                     
	    FROM CLTPT022 DATA
	    WHERE DURATION = 3
	    AND DATA.LINE <![CDATA[<>]]> '9999'
	    AND DATA.DATA <![CDATA[>=]]> 70 
	   -- ORDER BY TO_NUMBER(GAP) DESC    
    </select>
    
    <resultMap id="prdtTeam4Result" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		<result column="SEQ" property="seq" jdbcType="VARCHAR" />
  	    <result column="PLANT" property="plant" jdbcType="VARCHAR" />
	    <result column="LINE" property="line" jdbcType="VARCHAR" />
	    <result column="PLANT_NAME" property="plant_name" jdbcType="VARCHAR" />
	    <result column="LINE_NAME" property="line_name" jdbcType="VARCHAR" />
	    <result column="DATA" property="data" jdbcType="VARCHAR" />
	    <result column="A" property="a" jdbcType="VARCHAR" />
	    <result column="B" property="b" jdbcType="VARCHAR" />
	     <result column="PREV_YEAR_SIX_MONTH_CNT" property="prev_year_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_YEAR_SIX_MONTH_PROD_CNT" property="prev_year_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_SIX_MONTH_CNT" property="prev_six_month_cnt" jdbcType="VARCHAR" />
	    <result column="PREV_SIX_MONTH_PROD_CNT" property="prev_six_month_prod_cnt" jdbcType="VARCHAR" />
	    <result column="DURATION" property="dura" jdbcType="VARCHAR" />
	    <result column="GAP" property="gap" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectPrdtTeam4_b" resultMap="prdtTeam4Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT  RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ,
				DATA.PLANT, DATA.LINE, DATA.PLANT_NAME, DATA.LINE_NAME, DATA.DATA, DATA.A, DATA.B, 
                DATA.PREV_YEAR_SIX_MONTH_CNT,
                DATA.PREV_YEAR_SIX_MONTH_PROD_CNT,         
                DATA.PREV_SIX_MONTH_CNT,
                DATA.PREV_SIX_MONTH_PROD_CNT,
                DATA.DURATION,
                TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP                    
	    FROM CLAIM_TEAM_BACK DATA
	    WHERE DURATION = 12
	    AND DATA.LINE <![CDATA[<>]]> '9999'
	    AND DATA.DATA <![CDATA[>=]]> 70 
	   -- ORDER BY TO_NUMBER(GAP) DESC       
    </select>
	<select id="selectPrdtTeam4" resultMap="prdtTeam4Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT  RANK() OVER(ORDER BY TO_NUMBER(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1))) DESC) SEQ,
				DATA.PLANT, DATA.LINE, DATA.PLANT_NAME, DATA.LINE_NAME, DATA.DATA, DATA.A, DATA.B, 
                DATA.PREV_YEAR_SIX_MONTH_CNT,
                DATA.PREV_YEAR_SIX_MONTH_PROD_CNT,         
                DATA.PREV_SIX_MONTH_CNT,
                DATA.PREV_SIX_MONTH_PROD_CNT,
                DATA.DURATION,
                TO_CHAR(DECODE(DATA.A,0,'100',ROUND((DATA.B-DATA.A)/DATA.A * 100,1)),'FM999,999.0') GAP                    
	    FROM CLTPT022 DATA
	    WHERE DURATION = 12
	    AND DATA.LINE <![CDATA[<>]]> '9999'
	    AND DATA.DATA <![CDATA[>=]]> 70 
	   -- ORDER BY TO_NUMBER(GAP) DESC       
    </select>
    
  	
 	<resultMap id="prdtGraphResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="READ_YN" property="read_yn" jdbcType="VARCHAR" />
	     <result column="GUBUN" property="gubun" jdbcType="VARCHAR" />
	    <result column="THIS_DURATION_CNT" property="this_duration_cnt" jdbcType="VARCHAR" />
	    <result column="LAST_DURATION_CNT" property="last_duration_cnt" jdbcType="VARCHAR" />
	    <result column="LAST_FULL_CNT" property="last_full_cnt" jdbcType="VARCHAR" />
	    <result column="DUMMY_CNT" property="dummy_cnt" jdbcType="VARCHAR" />
	    <result column="THIS_DURATION_RATE" property="this_duration_rate" jdbcType="VARCHAR" />
	     <result column="LAST_DURATION_RATE" property="last_duration_rate" jdbcType="VARCHAR" />
	    <result column="LAST_FULL_RATE" property="last_full_rate" jdbcType="VARCHAR" />
	    <result column="SIGN_RATE" property="sign_rate" jdbcType="VARCHAR" />
	 </resultMap>
	 <select id="selectPrdtGraph" resultMap="prdtGraphResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
	 SELECT 	ROWNUM SEQ,
                 'N' READ_YN,
                 AA.GUBUN, 
                 AA.THIS_DURATION_CNT, 
                 AA.LAST_DURATION_CNT, 
                 AA.LAST_FULL_CNT, 
                 AA.DUMMY_CNT, 
                 AA.THIS_DURATION_RATE, 
                 AA.LAST_DURATION_RATE, 
                 AA.LAST_FULL_RATE, 
                 AA.SIGN_RATE
	  FROM CLTPT027 AA
	 </select>
  	
  	<resultMap id="prdtInternetResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="READ_YN" property="read_yn" jdbcType="VARCHAR" />
	    <result column="MEDIA_NAME" property="media_name" jdbcType="VARCHAR" />
	    <result column="POST_CNT" property="post_cnt" jdbcType="VARCHAR" />
	    <result column="DEL_CNT" property="del_cnt" jdbcType="VARCHAR" />
	 </resultMap>
	 <select id="selectPrdtInternet" resultMap="prdtInternetResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
	 SELECT AA.SEQ,
                 'N' READ_YN,
                 AA.MEDIA_NAME, 
                 AA.POST_CNT, 
                 AA.DEL_CNT 
	 FROM CLTPT028 AA
	 </select>
  
  	<resultMap id="prdtPressResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="READ_YN" property="read_yn" jdbcType="VARCHAR" />
	    <result column="MEDIA_DATE" property="media_date" jdbcType="VARCHAR" />
	    <result column="MEDIA_NAME" property="media_name" jdbcType="VARCHAR" />
	    <result column="TYPE_CD" property="type_cd" jdbcType="VARCHAR" />
	 </resultMap>
	 <select id="selectPrdtPress" resultMap="prdtPressResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
	 	SELECT  AA.SEQ,
                 'N' READ_YN,
                 AA.MEDIA_DATE,
                 AA.MEDIA_NAME, 
                 AA.TYPE_CD 
       FROM CLTPT029 AA
	 </select>
  
  	
  	<resultMap id="stdAvrResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="READ_YN" property="read_yn" jdbcType="VARCHAR" />
	    <result column="GUBUN" property="gubun" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH1" property="data1" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH2" property="data2" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH3" property="data3" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH4" property="data4" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH5" property="data5" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH6" property="data6" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH7" property="data7" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH8" property="data8" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH9" property="data9" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH10" property="data10" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH11" property="data11" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH12" property="data12" jdbcType="VARCHAR" />
	 </resultMap>
	 
	 <select id="selectStdAvr" resultMap="stdAvrResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
	 	SELECT 	SEQ,
                READ_YN,
                GUBUN,
                CNT_MONTH1,
                CNT_MONTH2,
                CNT_MONTH3,
                CNT_MONTH4,
                CNT_MONTH5,
                CNT_MONTH6,
                CNT_MONTH7,
                CNT_MONTH8,
                CNT_MONTH9,
                CNT_MONTH10,
                CNT_MONTH11,
                CNT_MONTH12
        FROM	CLTPT006
	 </select>
	 
  	
  	
  	<resultMap id="stdNrmResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="READ_YN" property="read_yn" jdbcType="VARCHAR" />
	    <result column="GUBUN" property="gubun" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH1" property="data1" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH2" property="data2" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH3" property="data3" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH4" property="data4" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH5" property="data5" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH6" property="data6" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH7" property="data7" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH8" property="data8" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH9" property="data9" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH10" property="data10" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH11" property="data11" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH12" property="data12" jdbcType="VARCHAR" />	
	 </resultMap>
	 <select id="selectStdNrm" resultMap="stdNrmResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT 	SEQ,
                READ_YN,
                GUBUN,
                CNT_MONTH1,
                CNT_MONTH2,
                CNT_MONTH3,
                CNT_MONTH4,
                CNT_MONTH5,
                CNT_MONTH6,
                CNT_MONTH7,
                CNT_MONTH8,
                CNT_MONTH9,
                CNT_MONTH10,
                CNT_MONTH11,
                CNT_MONTH12
        FROM	CLTPT007
  	 </select>
	 
  	
  	
  	<resultMap id="fertRiskResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="OCCUR_YEAR" property="occur_year" jdbcType="VARCHAR" />
	    <result column="FACT_ANYANG_CNT" property="fact_anyang_cnt" jdbcType="VARCHAR" />
	    <result column="FACT_ANSUNG_CNT" property="fact_ansung_cnt" jdbcType="VARCHAR" />
	    <result column="FACT_ANSUNG_B_CNT" property="fact_ansung_b_cnt" jdbcType="VARCHAR" />
	    <result column="FACT_ASAN_CNT" property="fact_asan_cnt" jdbcType="VARCHAR" />
	    <result column="FACT_GUMI_CNT" property="fact_gumi_cnt" jdbcType="VARCHAR" />
	    <result column="FACT_BUSAN_CNT" property="fact_busan_cnt" jdbcType="VARCHAR" />
	    <result column="FACT_NUKSAN_CNT" property="fact_nuksan_cnt" jdbcType="VARCHAR" />
	    <result column="FACT_MISANG_CNT" property="fact_misang_cnt" jdbcType="VARCHAR" />
	    <result column="FACT_TOTAL_H" property="fact_total_h" jdbcType="VARCHAR" />
	 </resultMap>
	 <select id="selectFertRisk" resultMap="fertRiskResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT	SEQ, OCCUR_YEAR,
  				FACT_ANYANG_CNT,
  				FACT_ANSUNG_CNT,
  				FACT_ANSUNG_B_CNT,
  				FACT_ASAN_CNT,
  				FACT_GUMI_CNT,
  				FACT_BUSAN_CNT,
  				FACT_NUKSAN_CNT,
  				FACT_MISANG_CNT,
  				FACT_TOTAL_H
  		FROM	CLTPT030
  	</select>
	
  	<resultMap id="hawaRiskResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="READ_YN" property="read_yn" jdbcType="VARCHAR" />
	    <result column="GUBUN" property="gubun" jdbcType="VARCHAR" />
	    <result column="SAM_DA_SU_CNT" property="sam_da_su_cnt" jdbcType="VARCHAR" />
	    <result column="CHUPA_CHUPS_CNT" property="chupa_chups_cnt" jdbcType="VARCHAR" />
	    <result column="WELCHS_CNT" property="welchs_cnt" jdbcType="VARCHAR" />
	    <result column="HAM_CNT" property="ham_cnt" jdbcType="VARCHAR" />
	    <result column="ETC_CNT" property="etc_cnt" jdbcType="VARCHAR" />
	    <result column="TOTAL_CNT" property="total_cnt" jdbcType="VARCHAR" />
	 </resultMap>
	 <select id="selectHawaRisk" resultMap="hawaRiskResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT	SEQ,
                'N' READ_YN, 
                GUBUN,
                SAM_DA_SU_CNT,
                CHUPA_CHUPS_CNT,
                WELCHS_CNT,
                HAM_CNT,
                ETC_CNT,
                TOTAL_CNT 
        FROM 	CLTPT031
  	</select>
  	
  	<resultMap id="vocResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="READ_YN" property="read_yn" jdbcType="VARCHAR" />
	    <result column="YYYY" property="yyyy" jdbcType="VARCHAR" />
	    <result column="QUES_RATE" property="ques_rate" jdbcType="VARCHAR" />
	    <result column="DIS_RATE" property="dis_rate" jdbcType="VARCHAR" />
	    <result column="SUG_RATE" property="sug_rate" jdbcType="VARCHAR" />
	    <result column="PRA_RATE" property="pra_rate" jdbcType="VARCHAR" />
	    <result column="QUES_SUM" property="ques_sum" jdbcType="VARCHAR" />
	    <result column="DIS_SUM" property="dis_sum" jdbcType="VARCHAR" />
	    <result column="SUG_SUM" property="sug_sum" jdbcType="VARCHAR" />
	    <result column="PRA_SUM" property="pra_sum" jdbcType="VARCHAR" />
	    <result column="TOTAL_RATE" property="total_rate" jdbcType="VARCHAR" />
	     <result column="TOTAL_SUM" property="total_sum" jdbcType="VARCHAR" />
	 </resultMap>
	<select id="selectVoc_b" resultMap="vocResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT	SEQ,
				READ_YN,
				YYYY,
				QUES_RATE,
				DIS_RATE,
				SUG_RATE,
				PRA_RATE,
				QUES_SUM,
				DIS_SUM,
				SUG_SUM,
				PRA_SUM,
				TOTAL_RATE,
				TOTAL_SUM
		FROM	CLAIM_VOC_BACK
		ORDER BY SEQ DESC
	</select>
  	<select id="selectVoc" resultMap="vocResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT SEQ,
               'N' READ_YN,
               YYYY||'년' YYYY,
               MAX(QUES) QUES_RATE,
               MAX(DIS) DIS_RATE,
               MAX(SUG) SUG_RATE,
               MAX(PRA) PRA_RATE,
               MAX(QUES_SUM) QUES_SUM,
               MAX(DIS_SUM) DIS_SUM,
               MAX(SUG_SUM) SUG_SUM,
               MAX(PRA_SUM) PRA_SUM,
               MAX(TOTAL) TOTAL_RATE,
               MAX(QUES_SUM+DIS_SUM+SUG_SUM+PRA_SUM ) TOTAL_SUM
          FROM(
                SELECT DECODE(TO_CHAR (ADD_MONTHS (SYSDATE, -24), 'YYYY') , SUBSTR (REG_DATE, 0, 4), 1 ,
                              DECODE(TO_CHAR (ADD_MONTHS (SYSDATE, -12), 'YYYY'), SUBSTR (REG_DATE, 0, 4), 2, 3)) SEQ,
                       SUBSTR (REG_DATE, 0, 4) yyyy,                                          
                       nvl(round(SUM (DECODE (INQUIRE_TYPE_L, 'V010000', 1))/count(*)*100,1),0) QUES,          
                       nvl(round(SUM (DECODE (INQUIRE_TYPE_L, 'V020000', 1))/count(*)*100,1),0) DIS,          
                       nvl(round(SUM (DECODE (INQUIRE_TYPE_L, 'V030000', 1))/count(*)*100,1),0) SUG,          
                       nvl(round(SUM (DECODE (INQUIRE_TYPE_L, 'V040000', 1))/count(*)*100,1),0) PRA,          
                       SUM (DECODE (INQUIRE_TYPE_L, 'V010000', 1, 0)) QUES_SUM,    
                       SUM (DECODE (INQUIRE_TYPE_L, 'V020000', 1, 0)) DIS_SUM,    
                       SUM (DECODE (INQUIRE_TYPE_L, 'V030000', 1, 0)) SUG_SUM,    
                       SUM (DECODE (INQUIRE_TYPE_L, 'V040000', 1, 0)) PRA_SUM,  
                       100 total                                                                   
                 FROM NCC_T_CONSULT                                                                 
                WHERE SUBSTR (REG_DATE, 0, 4) BETWEEN TO_CHAR (ADD_MONTHS (SYSDATE, -24), 'YYYY') AND TO_CHAR(SYSDATE, 'YYYY')                         
                  AND CONSULT_TYPE = '2'
                GROUP BY SUBSTR (REG_DATE, 0, 4)
              )
       GROUP BY SEQ, YYYY
       ORDER BY SEQ DESC
  	</select>
  	
  		<resultMap id="vocNowResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="READ_YN" property="read_yn" jdbcType="VARCHAR" />
	    <result column="GUBUN" property="valueNm" jdbcType="VARCHAR" />
	    <result column="QUES_RATE" property="ques_rate" jdbcType="VARCHAR" />
	    <result column="DIS_RATE" property="dis_rate" jdbcType="VARCHAR" />
	    <result column="SUG_RATE" property="sug_rate" jdbcType="VARCHAR" />
	    <result column="PRA_RATE" property="pra_rate" jdbcType="VARCHAR" />
	    <result column="QUES_SUM" property="ques_sum" jdbcType="VARCHAR" />
	    <result column="DIS_SUM" property="dis_sum" jdbcType="VARCHAR" />
	    <result column="SUG_SUM" property="sug_sum" jdbcType="VARCHAR" />
	    <result column="PRA_SUM" property="pra_sum" jdbcType="VARCHAR" />
	    <result column="TOTAL_RATE" property="total_rate" jdbcType="VARCHAR" />
	     <result column="TOTAL_SUM" property="total_sum" jdbcType="VARCHAR" />
	 </resultMap>
	<select id="selectVocNow_b" resultMap="vocNowResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT	SEQ,
  				READ_YN,
  				GUBUN,
  				QUES_RATE,
  				DIS_RATE,
  				SUG_RATE,
  				PRA_RATE,
  				QUES_SUM,
  				DIS_SUM,
  				SUG_SUM,
  				PRA_SUM,
  				TOTAL_RATE,
  				TOTAL_SUM
  		FROM	CLAIM_VOC_NOW_BACK
  	 	ORDER BY SEQ
  	</select>
  	<select id="selectVocNow" resultMap="vocNowResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT SEQ,
               'N' READ_YN,
               GUBUN,
               MAX(QUES_RATE) QUES_RATE,
               MAX(DIS_RATE) DIS_RATE,
               MAX(SUG_RATE) SUG_RATE,
               MAX(PRA_RATE) PRA_RATE,
               MAX(QUES_SUM) QUES_SUM,
               MAX(DIS_SUM) DIS_SUM,
               MAX(SUG_SUM) SUG_SUM,
               MAX(PRA_SUM) PRA_SUM,
               MAX(TOTAL) TOTAL_RATE,
               MAX(QUES_SUM+DIS_SUM+SUG_SUM+PRA_SUM ) TOTAL_SUM
          FROM( 
                 SELECT '1' SEQ,
                        '당일' GUBUN,                                       
                        NVL(ROUND(SUM (DECODE (INQUIRE_TYPE_L, 'V010000', 1))/COUNT(*)*100,1),0) QUES_RATE,                  
                        NVL(ROUND(SUM (DECODE (INQUIRE_TYPE_L, 'V020000', 1))/COUNT(*)*100,1),0) DIS_RATE,                  
                        NVL(ROUND(SUM (DECODE (INQUIRE_TYPE_L, 'V030000', 1))/COUNT(*)*100,1),0) SUG_RATE,                  
                        NVL(ROUND(SUM (DECODE (INQUIRE_TYPE_L, 'V040000', 1))/COUNT(*)*100,1),0) PRA_RATE,                  
                        NVL(SUM(DECODE (INQUIRE_TYPE_L, 'V010000', 1)),0) QUES_SUM,    
                        NVL(SUM(DECODE (INQUIRE_TYPE_L, 'V020000', 1)),0) DIS_SUM,    
                        NVL(SUM(DECODE (INQUIRE_TYPE_L, 'V030000', 1)),0) SUG_SUM,    
                        NVL(SUM(DECODE (INQUIRE_TYPE_L, 'V040000', 1)),0) PRA_SUM,
                        100 TOTAL
                   FROM NCC_T_CONSULT
                  WHERE REG_DATE = TO_CHAR (SYSDATE, 'YYYYMMDD')
                    AND CONSULT_TYPE = '2'
                 UNION ALL                                                                               
                 SELECT '2' SEQ,
                        '당월' GUBUN,                                                
                        NVL(ROUND(SUM (DECODE (INQUIRE_TYPE_L, 'V010000', 1))/COUNT(*)*100,1),0) QUES_RATE,                  
                        NVL(ROUND(SUM (DECODE (INQUIRE_TYPE_L, 'V020000', 1))/COUNT(*)*100,1),0) DIS_RATE,                  
                        NVL(ROUND(SUM (DECODE (INQUIRE_TYPE_L, 'V030000', 1))/COUNT(*)*100,1),0) SUG_RATE,                  
                        NVL(ROUND(SUM (DECODE (INQUIRE_TYPE_L, 'V040000', 1))/COUNT(*)*100,1),0) PRA_RATE,                  
                        NVL(SUM(DECODE (INQUIRE_TYPE_L, 'V010000', 1)),0) QUES_SUM,    
                        NVL(SUM(DECODE (INQUIRE_TYPE_L, 'V020000', 1)),0) DIS_SUM,    
                        NVL(SUM(DECODE (INQUIRE_TYPE_L, 'V030000', 1)),0) SUG_SUM,    
                        NVL(SUM(DECODE (INQUIRE_TYPE_L, 'V040000', 1)),0) PRA_SUM,
                        100 TOTAL
                   FROM NCC_T_CONSULT
                  WHERE SUBSTR (REG_DATE, 0, 6) = TO_CHAR (SYSDATE, 'YYYYMM')
                    AND CONSULT_TYPE = '2'
                 UNION ALL                                                                               
                 SELECT '3' SEQ,
                        '전년동월' GUBUN,                              
                        NVL(ROUND(SUM (DECODE (INQUIRE_TYPE_L, 'V010000', 1))/COUNT(*)*100,1),0) QUES_RATE,                  
                        NVL(ROUND(SUM (DECODE (INQUIRE_TYPE_L, 'V020000', 1))/COUNT(*)*100,1),0) DIS_RATE,                  
                        NVL(ROUND(SUM (DECODE (INQUIRE_TYPE_L, 'V030000', 1))/COUNT(*)*100,1),0) SUG_RATE,                  
                        NVL(ROUND(SUM (DECODE (INQUIRE_TYPE_L, 'V040000', 1))/COUNT(*)*100,1),0) PRA_RATE,                  
                        NVL(SUM(DECODE (INQUIRE_TYPE_L, 'V010000', 1)),0) QUES_SUM,    
                        NVL(SUM(DECODE (INQUIRE_TYPE_L, 'V020000', 1)),0) DIS_SUM,    
                        NVL(SUM(DECODE (INQUIRE_TYPE_L, 'V030000', 1)),0) SUG_SUM,    
                        NVL(SUM(DECODE (INQUIRE_TYPE_L, 'V040000', 1)),0) PRA_SUM,
                        100 TOTAL
                   FROM NCC_T_CONSULT
                  WHERE SUBSTR (REG_DATE, 0, 6) = TO_CHAR (ADD_MONTHS (SYSDATE, -12), 'YYYYMM')
                    AND CONSULT_TYPE = '2'
               )
        GROUP BY SEQ, GUBUN
        ORDER BY SEQ
  	</select>
  	
 	<resultMap id="vocGrpResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="YYYY" property="yyyy" jdbcType="VARCHAR" />
	    <result column="MONTH1" property="data1" jdbcType="VARCHAR" />
	    <result column="MONTH2" property="data2" jdbcType="VARCHAR" />
	    <result column="MONTH3" property="data3" jdbcType="VARCHAR" />
	    <result column="MONTH4" property="data4" jdbcType="VARCHAR" />
	    <result column="MONTH5" property="data5" jdbcType="VARCHAR" />
	    <result column="MONTH6" property="data6" jdbcType="VARCHAR" />
	    <result column="MONTH7" property="data7" jdbcType="VARCHAR" />
	    <result column="MONTH8" property="data8" jdbcType="VARCHAR" />
	    <result column="MONTH9" property="data9" jdbcType="VARCHAR" />
	    <result column="MONTH10" property="data10" jdbcType="VARCHAR" />
	    <result column="MONTH11" property="data11" jdbcType="VARCHAR" />
	    <result column="MONTH12" property="data12" jdbcType="VARCHAR" />
	 </resultMap>
	<select id="selectVocGrp_b" resultMap="vocGrpResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
	 	SELECT	SEQ,
	 			YYYY,
	 			MONTH1,
	 			MONTH2,
	 			MONTH3,
	 			MONTH4,
	 			MONTH5,
	 			MONTH6,
	 			MONTH7,
	 			MONTH8,
	 			MONTH9,
	 			MONTH10,
	 			MONTH11,
	 			MONTH12
	 	FROM	CLAIM_VOC_GRP_BACK
	 	ORDER BY YYYY DESC
	</select>
  	<select id="selectVocGrp" resultMap="vocGrpResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT DECODE(TO_CHAR (ADD_MONTHS (SYSDATE, -24), 'YYYY') , SUBSTR(A.ACEP_YYYYMM, 1, 4), 1 ,
                  DECODE(TO_CHAR (ADD_MONTHS (SYSDATE, -12), 'YYYY'), SUBSTR(A.ACEP_YYYYMM, 1, 4), 2, 3)) SEQ,
              'N' READ_YN,
              SUBSTR(A.ACEP_YYYYMM, 1, 4) YYYY,
              SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'01', CNT, 0)) MONTH1,
              SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'02', CNT, 0)) MONTH2,
              SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'03', CNT, 0)) MONTH3,
              SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'04', CNT, 0)) MONTH4,
              SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'05', CNT, 0)) MONTH5,
              SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'06', CNT, 0)) MONTH6,
              SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'07', CNT, 0)) MONTH7,
              SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'08', CNT, 0)) MONTH8,
              SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'09', CNT, 0)) MONTH9,
              SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'10', CNT, 0)) MONTH10,
              SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'11', CNT, 0)) MONTH11,
              SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'12', CNT, 0)) MONTH12,
              SUM(CNT) TOTAL
         FROM (                           
                  SELECT SUBSTR(REG_DATE, 1, 6) ACEP_YYYYMM,
                         SUM(
                             DECODE(SUBSTR(REG_DATE, 1, 6)
                                   ,TO_CHAR(ADD_MONTHS(SYSDATE, -24), 'YYYYMM')
                                   ,1
                                   ,TO_CHAR(ADD_MONTHS(SYSDATE, -12), 'YYYYMM')
                                   ,1
                                   ,1)
                             ) CNT
                    FROM NCC_T_CONSULT
                   WHERE SUBSTR (REG_DATE, 1, 6) BETWEEN TO_NUMBER(TO_CHAR(ADD_MONTHS(SYSDATE, -24), 'YYYY')||'01') AND TO_CHAR(SYSDATE,'YYYY')||'12'
                     AND CONSULT_TYPE = '2'
                     AND  SUBSTR(REG_DATE, 5, 2) <![CDATA[<>]]> TO_CHAR(SYSDATE,'MM') 
                   GROUP BY SUBSTR(REG_DATE, 1, 6)
                   UNION ALL
                   SELECT SUBSTR(REG_DATE, 1, 6) ACEP_YYYYMM,
                         SUM(
                             DECODE(SUBSTR(REG_DATE, 1, 6)
                                   ,TO_CHAR(ADD_MONTHS(SYSDATE, -24), 'YYYYMM')
                                   ,1
                                   ,TO_CHAR(ADD_MONTHS(SYSDATE, -12), 'YYYYMM')
                                   ,1
                                   ,1)
                             ) CNT
                    FROM NCC_T_CONSULT
                   WHERE SUBSTR (REG_DATE, 1, 6) BETWEEN TO_NUMBER(TO_CHAR(ADD_MONTHS(SYSDATE, -24), 'YYYY')||'01') AND TO_CHAR(SYSDATE,'YYYY')||'12'
                     AND CONSULT_TYPE = '2'
                     AND  SUBSTR(REG_DATE, 5, 2) = TO_CHAR(SYSDATE,'MM')
                     AND  SUBSTR(REG_DATE, 7, 8) BETWEEN TO_CHAR(TRUNC(SYSDATE,'MM'),'DD') AND  TO_CHAR(SYSDATE,'DD')  
                   GROUP BY SUBSTR(REG_DATE, 1, 6)                   
              ) A
        GROUP BY SUBSTR(A.ACEP_YYYYMM, 1, 4)
        ORDER BY YYYY DESC
  	</select>
  	
  	<resultMap id="vocGrp2Result" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >  	
  		<result column="YYYY" property="yyyy" jdbcType="VARCHAR" />   
	    <result column="MONTH1" property="data1" jdbcType="VARCHAR" />
	    <result column="MONTH2" property="data2" jdbcType="VARCHAR" />
	    <result column="MONTH3" property="data3" jdbcType="VARCHAR" />
	    <result column="MONTH4" property="data4" jdbcType="VARCHAR" />
	    <result column="MONTH5" property="data5" jdbcType="VARCHAR" />
	    <result column="MONTH6" property="data6" jdbcType="VARCHAR" />
	    <result column="MONTH7" property="data7" jdbcType="VARCHAR" />
	    <result column="MONTH8" property="data8" jdbcType="VARCHAR" />
	    <result column="MONTH9" property="data9" jdbcType="VARCHAR" />
	    <result column="MONTH10" property="data10" jdbcType="VARCHAR" />
	    <result column="MONTH11" property="data11" jdbcType="VARCHAR" />
	    <result column="MONTH12" property="data12" jdbcType="VARCHAR" />
	 </resultMap>
	<select id="selectVocGrp2_b" resultMap="vocGrp2Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT	YYYY,
				MONTH1,
				MONTH2,
				MONTH3,
				MONTH4,
				MONTH5,
				MONTH6,
				MONTH7,
				MONTH8,
				MONTH9,
				MONTH10,
				MONTH11,
				MONTH12		
		FROM	CLAIM_VOC_GRP2_BACK
	</select>
  	<select id="selectVocGrp2" resultMap="vocGrp2Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
	  	SELECT  TO_CHAR(SYSDATE,'YYYY') AS YYYY,
	  			DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH1      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH1      ,0))
	            -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH1      ,0))) MONTH1,
	            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH2      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH2      ,0))
	            -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH2      ,0))) MONTH2,
	            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH3      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH3      ,0))
	            -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH3      ,0))) MONTH3,
	            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH4      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH4      ,0))
	            -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH4      ,0))) MONTH4,
	            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH5      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH5      ,0))
	            -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH5      ,0))) MONTH5,
	            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH6      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH6      ,0))
	            -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH6      ,0))) MONTH6,
	            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH7      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH7      ,0))
	            -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH7      ,0))) MONTH7,
	            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH8      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH8      ,0))
	            -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH8      ,0))) MONTH8,
	            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH9      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH9      ,0))
	            -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH9      ,0))) MONTH9,
	            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH10      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH10      ,0))
	            -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH10      ,0))) MONTH10,
	            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH11      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH11      ,0))
	            -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH11      ,0))) MONTH11,
	            DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH12      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH12      ,0))
	            -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH12      ,0))) MONTH12
	     FROM	( 
       			SELECT	SUBSTR(A.ACEP_YYYYMM, 1, 4) YYYY,
		              	SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'01', CNT, 0)) MONTH1,
		              	SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'02', CNT, 0)) MONTH2,
		              	SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'03', CNT, 0)) MONTH3,
		              	SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'04', CNT, 0)) MONTH4,
		              	SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'05', CNT, 0)) MONTH5,
		              	SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'06', CNT, 0)) MONTH6,
		              	SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'07', CNT, 0)) MONTH7,
		              	SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'08', CNT, 0)) MONTH8,
		              	SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'09', CNT, 0)) MONTH9,
		              	SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'10', CNT, 0)) MONTH10,
		              	SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'11', CNT, 0)) MONTH11,
		              	SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'12', CNT, 0)) MONTH12              
         		FROM 	(                           
                  		SELECT SUBSTR(REG_DATE, 1, 6) ACEP_YYYYMM,
                         		SUM(
                             DECODE(SUBSTR(REG_DATE, 1, 6)
	                                   ,TO_CHAR(ADD_MONTHS(SYSDATE, -24), 'YYYYMM')
	                                   ,1
	                                   ,TO_CHAR(ADD_MONTHS(SYSDATE, -12), 'YYYYMM')
	                                   ,1
	                                   ,1)
	                             ) CNT
	                    FROM NCC_T_CONSULT
	                   	WHERE SUBSTR (REG_DATE, 1, 6) BETWEEN TO_NUMBER(TO_CHAR(ADD_MONTHS(SYSDATE, -24), 'YYYY')||'01') AND TO_CHAR(SYSDATE,'YYYY')||'12'
	                    AND CONSULT_TYPE = '2'
	                     AND  SUBSTR(REG_DATE, 5, 2) <![CDATA[<>]]> TO_CHAR(SYSDATE,'MM')  
	                   	GROUP BY SUBSTR(REG_DATE, 1, 6)
	                   	UNION ALL
                       SELECT SUBSTR(REG_DATE, 1, 6) ACEP_YYYYMM,
                             SUM(
                                 DECODE(SUBSTR(REG_DATE, 1, 6)
                                       ,TO_CHAR(ADD_MONTHS(SYSDATE, -24), 'YYYYMM')
                                       ,1
                                       ,TO_CHAR(ADD_MONTHS(SYSDATE, -12), 'YYYYMM')
                                       ,1
                                       ,1)
                                 ) CNT
                        FROM NCC_T_CONSULT
                       WHERE SUBSTR(REG_DATE, 1, 6) BETWEEN TO_CHAR (ADD_MONTHS (SYSDATE, -24), 'YYYY')||'01' AND TO_CHAR(SYSDATE,'YYYY')||'12'
                         AND CONSULT_TYPE = '2' 
                         AND SUBSTR(REG_DATE, 5, 2) = SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2)
                         AND  SUBSTR(REG_DATE, 7, 8) BETWEEN TO_CHAR(TRUNC(SYSDATE,'MM'),'DD') AND  TO_CHAR(SYSDATE,'DD')                      
                       GROUP BY SUBSTR(REG_DATE, 1, 6)                      
              			) A
		        WHERE   SUBSTR(A.ACEP_YYYYMM, 1, 4) IN (TO_CHAR(SYSDATE,'YYYY'), TO_CHAR(SYSDATE,'YYYY')-1)
		        GROUP BY SUBSTR(A.ACEP_YYYYMM, 1, 4)
		        )
  	</select>
  	<resultMap id="bulyResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="YYYY" property="yyyy" jdbcType="VARCHAR" />
	    <result column="TEETH" property="teeth" jdbcType="VARCHAR" />
	    <result column="TEETH_RATE" property="teeth_rate" jdbcType="VARCHAR" />
	    <result column="POISON" property="poison" jdbcType="VARCHAR" />
	    <result column="POISON_RATE" property="poison_rate" jdbcType="VARCHAR" />
	    <result column="ETC" property="etc" jdbcType="VARCHAR" />
	    <result column="ETC_RATE" property="etc_rate" jdbcType="VARCHAR" />
	    <result column="TOTAL" property="total" jdbcType="VARCHAR" />
	    
	 </resultMap>
  	<select id="selectBuly" resultMap="bulyResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT DECODE(TO_CHAR (ADD_MONTHS (SYSDATE, -24), 'YYYY') , YYYY, 1 ,
                      DECODE(TO_CHAR (ADD_MONTHS (SYSDATE, -12), 'YYYY'), YYYY, 2, 
                             DECODE(TO_CHAR (ADD_MONTHS (SYSDATE, -0), 'YYYY'), YYYY, 3,
                                    4)
                            )
                      ) SEQ,
               'N' READ_YN,
               DECODE(YYYY, '', '계', YYYY) YYYY,
               NVL(SUM(DECODE(USED, '01', CNT)), 0) TEETH,
               NVL(ROUND(SUM(DECODE(USED, '01', CNT))/SUM(CNT)*100,1), 0) TEETH_RATE,
               NVL(SUM(DECODE(USED, '02', CNT)), 0) POISON,
               NVL(ROUND(SUM(DECODE(USED, '02', CNT))/SUM(CNT)*100,1), 0) POISON_RATE,
               NVL(SUM(DECODE(USED, '03', CNT)), 0) ETC,
               NVL(ROUND(SUM(DECODE(USED, '03', CNT))/SUM(CNT)*100,1), 0) ETC_RATE,
               NVL(SUM(CNT) ,0) TOTAL
          FROM(  
            SELECT SUBSTR(ACEP_DATE, 1, 4) YYYY, USED, SUM(1) CNT
              FROM CLT_CLAIM_MST         
             WHERE USED IS NOT NULL 
               AND CNCL_TYPE_CD = '1' 
               AND PROS_DIV_CD_1 IS NOT NULL
               AND USED <![CDATA[<>]]> '00'
               AND TO_CHAR(SYSDATE,'YYYY')-3 <![CDATA[<]]> SUBSTR(ACEP_DATE, 1, 4)                                                       
             GROUP BY SUBSTR(ACEP_DATE, 1, 4) ,USED
             ORDER BY SUBSTR(ACEP_DATE, 1, 4), USED
            )                            
        GROUP BY ROLLUP(YYYY)
  		
  	</select>
  	
  	<resultMap id="bulyGrpResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="YYYY" property="yyyy" jdbcType="VARCHAR" />
	    <result column="MONTH1" property="data1" jdbcType="VARCHAR" />
	    <result column="MONTH2" property="data2" jdbcType="VARCHAR" />
	    <result column="MONTH3" property="data3" jdbcType="VARCHAR" />
	    <result column="MONTH4" property="data4" jdbcType="VARCHAR" />
	    <result column="MONTH5" property="data5" jdbcType="VARCHAR" />
	    <result column="MONTH6" property="data6" jdbcType="VARCHAR" />
	    <result column="MONTH7" property="data7" jdbcType="VARCHAR" />
	    <result column="MONTH8" property="data8" jdbcType="VARCHAR" />
	    <result column="MONTH9" property="data9" jdbcType="VARCHAR" />
	    <result column="MONTH10" property="data10" jdbcType="VARCHAR" />
	    <result column="MONTH11" property="data11" jdbcType="VARCHAR" />
	    <result column="MONTH12" property="data12" jdbcType="VARCHAR" />
	    <result column="TOTAL" property="total" jdbcType="VARCHAR" />
	 </resultMap>
  	<select id="selectBulyGrp" resultMap="bulyGrpResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT DECODE(TO_CHAR (ADD_MONTHS (SYSDATE, -24), 'YYYY') , SUBSTR(ACEP_YYYYMM, 1, 4), 1 ,
                  DECODE(TO_CHAR (ADD_MONTHS (SYSDATE, -12), 'YYYY'), SUBSTR(ACEP_YYYYMM, 1, 4), 2, 3)) SEQ,
              'N' READ_YN,
              SUBSTR(ACEP_YYYYMM, 1, 4) YYYY,
              DECODE(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'01', CNT, 0)),0,'-',SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'01', CNT, 0))) MONTH1,
              DECODE(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'02', CNT, 0)),0,'-',SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'02', CNT, 0))) MONTH2,
              DECODE(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'03', CNT, 0)),0,'-',SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'03', CNT, 0))) MONTH3,
              DECODE(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'04', CNT, 0)),0,'-',SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'04', CNT, 0))) MONTH4,
              DECODE(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'05', CNT, 0)),0,'-',SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'05', CNT, 0))) MONTH5,
              DECODE(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'06', CNT, 0)),0,'-',SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'06', CNT, 0))) MONTH6,
              DECODE(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'07', CNT, 0)),0,'-',SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'07', CNT, 0))) MONTH7,
              DECODE(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'08', CNT, 0)),0,'-',SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'08', CNT, 0))) MONTH8,
              DECODE(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'09', CNT, 0)),0,'-',SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'09', CNT, 0))) MONTH9,
              DECODE(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'10', CNT, 0)),0,'-',SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'10', CNT, 0))) MONTH10,
              DECODE(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'11', CNT, 0)),0,'-',SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'11', CNT, 0))) MONTH11,
              DECODE(SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'12', CNT, 0)),0,'-',SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'12', CNT, 0))) MONTH12,
              SUM(CNT) TOTAL
         FROM (                           
                  SELECT SUBSTR(ACEP_DATE, 1, 6) ACEP_YYYYMM,
                         SUM(
                             DECODE(SUBSTR(ACEP_DATE, 1, 6)
                                   ,TO_CHAR(ADD_MONTHS(SYSDATE, -24), 'YYYYMM')
                                   ,1
                                   ,TO_CHAR(ADD_MONTHS(SYSDATE, -12), 'YYYYMM')
                                   ,1
                                   ,1)
                             ) CNT
                    FROM CLT_CLAIM_MST
                   WHERE  USED IS NOT NULL 
                     AND CNCL_TYPE_CD = '1' 
                     AND PROS_DIV_CD_1 IS NOT NULL
                     AND USED <![CDATA[<>]]> '00'
                     AND TO_CHAR(SYSDATE,'YYYY')-3 <![CDATA[<]]>  SUBSTR(ACEP_DATE, 1, 4)
                   GROUP BY SUBSTR(ACEP_DATE, 1, 6)
                   ORDER BY SUBSTR(ACEP_DATE, 1, 6)        
              ) A
        GROUP BY SUBSTR(ACEP_YYYYMM, 1, 4)
        ORDER BY YYYY DESC
  	</select>
  	
  		<resultMap id="degResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="ACEPNO" property="acepno" jdbcType="VARCHAR" />
	    <result column="PROS_DEPT" property="pros_dept" jdbcType="VARCHAR" />
	    <result column="CLERK" property="clerk" jdbcType="VARCHAR" />
	    <result column="PROD_NM" property="prod_nm" jdbcType="VARCHAR" />
	    <result column="TYPE_NAME" property="type_name" jdbcType="VARCHAR" />
	    <result column="MANF_FACT_CD" property="manf_fact_cd" jdbcType="VARCHAR" />
	    <result column="ACEP_DATE" property="acep_date" jdbcType="VARCHAR" />
	    <result column="PASS_DATE" property="pass_date" jdbcType="VARCHAR" />
	    <result column="USED" property="used" jdbcType="VARCHAR" />
	    <result column="KFDA_DT" property="kfda_dt" jdbcType="VARCHAR" />
	    <result column="PROS_GRAD" property="pros_grad" jdbcType="VARCHAR" />
	 </resultMap>
  	<select id="selectDeg" resultMap="degResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		 SELECT DECODE(MAX(A.PROGR_STAT), '1', 1, 2) SEQ,
                   A.ACEPNO,  /* 접수번호*/
                   (SELECT NVL(DEPT_NAME_ABBR, '-')                                                                                                         
                      FROM NCOMT001                                                                                                                         
                     WHERE DEPT_CODE = C.PROS_DEPT) PROS_DEPT, /* 처리지점*/
                   NVL((SELECT E.HAN_NAME                                                                                                                   
                         FROM NCOMT005 E                                                                                                                    
                        WHERE E.EMP_NO = C.CLERK), '-') CLERK,  /* 처리자*/
                   (SELECT DISTINCT PROD_NAME                                                                                                                       
                      FROM SDSTT301 A                                                                                                                               
                     WHERE A.PROD_CODE = A.PROD_CD) PROD_NM,  /*  제품명*/
                   D.TYPE_NAME,      /* 불만유형*/
                   (SELECT NVL(SUBSTR(PRDCTN_NAME, 1, 2), '-') 
                      FROM CLT_PRDCTN_LINE 
                     WHERE LVL = '1' AND FACT_CD = A.MANF_FACT_CD) MANF_FACT_CD,  /* 공장*/
                   SUBSTR(A.ACEP_DATE, 3, 2) || '/' || SUBSTR(A.ACEP_DATE, 5, 2) || '/' || SUBSTR(A.ACEP_DATE, 7, 2) ACEP_DATE,  /* 접수일*/
                   TRUNC(TO_DATE(SYSDATE) - TO_DATE(A.ACEP_DATE, 'YYYYMMDDHH24MISS'))+1 PASS_DATE,  /* 소요일*/
                   (SELECT CD_KNM FROM CLT_COMM_CD WHERE CD_id = 'N003' AND CD_TP = A.USED) USED, /* 불만유형*/
                   CASE WHEN LENGTH(B.KFTA_REPORT_DATE) > 7 
                        THEN SUBSTR(B.KFTA_REPORT_DATE, 3,2) || '/' ||SUBSTR(B.KFTA_REPORT_DATE, 5,2) || '/' ||SUBSTR(B.KFTA_REPORT_DATE, 7,2)                                                                                                                       
                   ELSE '-' END KFDA_DT,      /* 신약청신고일*/
                   MAX(B.PROS_GRAD) PROS_GRAD
              FROM CLT_CLAIM_MST A, CLT_CLAIM_MST_INFO_PROS B, CLT_CLAIM_MST_EXP_PROS C, 
                   (SELECT TYPE_NAME, TYPE_CD  FROM CLT_CLAIM_TYPE_CD WHERE  TYPE_DVN = '1' AND LVL = '3') D
             WHERE A.ACEPNO = B.ACEPNO
               AND A.ACEPNO = C.ACEPNO
               AND A.TYPE_CD = D.TYPE_CD
               AND A.PROS_DIV_CD_1 IS NOT NULL
               AND SUBSTR(A.ACEP_DATE, 1, 8) BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE, -6), 'YYYYMMDD') AND  TO_CHAR(SYSDATE - 1, 'YYYYMMDD')                                      
               AND A.PROGR_STAT <![CDATA[<>]]> 'Y'
               AND A.CNCL_TYPE_CD = '1'
               AND NVL(B.EXPLDOC_EXPL_CD, 'N') = 'N'
               AND A.USED IN ('01', '02', '03')
             GROUP BY A.ACEP_DATE, A.ACEPNO, A.PROD_CD, A.MANF_FACT_CD, A.USED, B.KFTA_REPORT_DATE, C.PROS_DEPT, C.CLERK, D.TYPE_NAME
             ORDER BY SEQ,  A.ACEP_DATE
   	</select>
   	               
   	<resultMap id="degGrpResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="READY" property="ready" jdbcType="VARCHAR" />
	    <result column="USED_NM" property="valueNm" jdbcType="VARCHAR" />
	    <result column="USED" property="used" jdbcType="VARCHAR" />
	    
	    <result column="MONTH1" property="data1" jdbcType="VARCHAR" />
	    <result column="MONTH2" property="data2" jdbcType="VARCHAR" />
	    <result column="MONTH3" property="data3" jdbcType="VARCHAR" />
	    <result column="MONTH4" property="data4" jdbcType="VARCHAR" />
	    <result column="MONTH5" property="data5" jdbcType="VARCHAR" />
	    <result column="MONTH6" property="data6" jdbcType="VARCHAR" />
	    <result column="MONTH7" property="data7" jdbcType="VARCHAR" />
	    <result column="MONTH8" property="data8" jdbcType="VARCHAR" />
	    <result column="MONTH9" property="data9" jdbcType="VARCHAR" />
	    <result column="MONTH10" property="data10" jdbcType="VARCHAR" />
	    <result column="MONTH11" property="data11" jdbcType="VARCHAR" />
	    <result column="MONTH12" property="data12" jdbcType="VARCHAR" />
	 </resultMap>
  	<select id="selectDegGrp" resultMap="degGrpResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT DECODE(CD_TP, '01', '1', '02', '2', '03', '3') SEQ,
                 'N' READY,
                 DECODE(CD_TP, '01', '치아손상', '02', '식중독', '03', '기타손상') USED_NM, CD_TP AS USED,                                                                                    
                 DECODE(SUM(CASE WHEN AAA.ACEP_MM = '01' THEN AAA.MM_CNT ELSE 0 END),0,CASE WHEN TO_CHAR(SYSDATE,'MM') >= '01' THEN '0' ELSE '-' END
                    ,SUM(CASE WHEN AAA.ACEP_MM = '01' THEN AAA.MM_CNT ELSE 0 END)) MONTH1,
                    DECODE(SUM(CASE WHEN AAA.ACEP_MM = '02' THEN AAA.MM_CNT ELSE 0 END),0,CASE WHEN TO_CHAR(SYSDATE,'MM') >= '02' THEN '0' ELSE '-' END
                    ,SUM(CASE WHEN AAA.ACEP_MM = '02' THEN AAA.MM_CNT ELSE 0 END)) MONTH2,
                    DECODE(SUM(CASE WHEN AAA.ACEP_MM = '03' THEN AAA.MM_CNT ELSE 0 END),0,CASE WHEN TO_CHAR(SYSDATE,'MM') >= '03' THEN '0' ELSE '-' END
                    ,SUM(CASE WHEN AAA.ACEP_MM = '03' THEN AAA.MM_CNT ELSE 0 END)) MONTH3,
                    DECODE(SUM(CASE WHEN AAA.ACEP_MM = '04' THEN AAA.MM_CNT ELSE 0 END),0,CASE WHEN TO_CHAR(SYSDATE,'MM') >= '04' THEN '0' ELSE '-' END
                    ,SUM(CASE WHEN AAA.ACEP_MM = '04' THEN AAA.MM_CNT ELSE 0 END)) MONTH4,
                    DECODE(SUM(CASE WHEN AAA.ACEP_MM = '05' THEN AAA.MM_CNT ELSE 0 END),0,CASE WHEN TO_CHAR(SYSDATE,'MM') >= '05' THEN '0' ELSE '-' END
                    ,SUM(CASE WHEN AAA.ACEP_MM = '05' THEN AAA.MM_CNT ELSE 0 END)) MONTH5,
                    DECODE(SUM(CASE WHEN AAA.ACEP_MM = '06' THEN AAA.MM_CNT ELSE 0 END),0,CASE WHEN TO_CHAR(SYSDATE,'MM') >= '06' THEN '0' ELSE '-' END
                    ,SUM(CASE WHEN AAA.ACEP_MM = '06' THEN AAA.MM_CNT ELSE 0 END)) MONTH6,
                    DECODE(SUM(CASE WHEN AAA.ACEP_MM = '07' THEN AAA.MM_CNT ELSE 0 END),0,CASE WHEN TO_CHAR(SYSDATE,'MM') >= '07' THEN '0' ELSE '-' END
                    ,SUM(CASE WHEN AAA.ACEP_MM = '07' THEN AAA.MM_CNT ELSE 0 END)) MONTH7,
                    DECODE(SUM(CASE WHEN AAA.ACEP_MM = '08' THEN AAA.MM_CNT ELSE 0 END),0,CASE WHEN TO_CHAR(SYSDATE,'MM') >= '08' THEN '0' ELSE '-' END
                    ,SUM(CASE WHEN AAA.ACEP_MM = '08' THEN AAA.MM_CNT ELSE 0 END)) MONTH8,
                    DECODE(SUM(CASE WHEN AAA.ACEP_MM = '09' THEN AAA.MM_CNT ELSE 0 END),0,CASE WHEN TO_CHAR(SYSDATE,'MM') >= '09' THEN '0' ELSE '-' END
                    ,SUM(CASE WHEN AAA.ACEP_MM = '09' THEN AAA.MM_CNT ELSE 0 END)) MONTH9,
                    DECODE(SUM(CASE WHEN AAA.ACEP_MM = '10' THEN AAA.MM_CNT ELSE 0 END),0,CASE WHEN TO_CHAR(SYSDATE,'MM') >= '10' THEN '0' ELSE '-' END
                    ,SUM(CASE WHEN AAA.ACEP_MM = '10' THEN AAA.MM_CNT ELSE 0 END)) MONTH10,
                    DECODE(SUM(CASE WHEN AAA.ACEP_MM = '11' THEN AAA.MM_CNT ELSE 0 END),0,CASE WHEN TO_CHAR(SYSDATE,'MM') >= '11' THEN '0' ELSE '-' END
                    ,SUM(CASE WHEN AAA.ACEP_MM = '11' THEN AAA.MM_CNT ELSE 0 END)) MONTH11,
                    DECODE(SUM(CASE WHEN AAA.ACEP_MM = '12' THEN AAA.MM_CNT ELSE 0 END),0,CASE WHEN TO_CHAR(SYSDATE,'MM') >= '12' THEN '0' ELSE '-' END
                    ,SUM(CASE WHEN AAA.ACEP_MM = '12' THEN AAA.MM_CNT ELSE 0 END)) MONTH12  
        FROM(                                                                                                           
            SELECT B.CD_TP, SUBSTR(A.YYYYMM, 5, 2) ACEP_MM , MM_CNT
              FROM(
                    SELECT USED , SUBSTR(ACEP_DATE, 1, 6) YYYYMM, COUNT(*) MM_CNT 
                       FROM CLT_CLAIM_MST A                                   
                      WHERE SUBSTR(ACEP_DATE, 1, 4) = TO_CHAR(SYSDATE, 'YYYY')
                        AND A.CNCL_TYPE_CD = '1'
                        AND A.PROS_DIV_CD_1 IS NOT NULL
                      GROUP BY USED, SUBSTR(ACEP_DATE, 1, 6)
                  ) A, (SELECT CD_TP FROM CLT_COMM_CD WHERE CD_id = 'N003' AND CD_TP <![CDATA[<>]]> '00') B 
             WHERE A.USED(+) = B.CD_TP
            GROUP BY B.CD_TP, A.YYYYMM, MM_CNT                                                                    
          ) AAA
      	GROUP BY CD_TP
      	ORDER BY CD_TP
  	</select>
  	
  	 	<resultMap id="hpGrpResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="READ_YN" property="read_yn" jdbcType="VARCHAR" />
	    <result column="YYYY"  property="yyyy" jdbcType="VARCHAR" />
	    <result column="MONTH1" property="data1" jdbcType="VARCHAR" />
	    <result column="MONTH2" property="data2" jdbcType="VARCHAR" />
	    <result column="MONTH3" property="data3" jdbcType="VARCHAR" />
	    <result column="MONTH4" property="data4" jdbcType="VARCHAR" />
	    <result column="MONTH5" property="data5" jdbcType="VARCHAR" />
	    <result column="MONTH6" property="data6" jdbcType="VARCHAR" />
	    <result column="MONTH7" property="data7" jdbcType="VARCHAR" />
	    <result column="MONTH8" property="data8" jdbcType="VARCHAR" />
	    <result column="MONTH9" property="data9" jdbcType="VARCHAR" />
	    <result column="MONTH10" property="data10" jdbcType="VARCHAR" />
	    <result column="MONTH11" property="data11" jdbcType="VARCHAR" />
	    <result column="MONTH12" property="data12" jdbcType="VARCHAR" />
	 </resultMap>
	<select id="selectHpGrp_b" resultMap="hpGrpResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT	SEQ,
				READ_YN,
				YYYY,
				MONTH1,
				MONTH2,
				MONTH3,
				MONTH4,
				MONTH5,
				MONTH6,
				MONTH7,
				MONTH8,
				MONTH9,
				MONTH10,
				MONTH11,
				MONTH12		
		FROM	CLAIM_HP_GRP_BACK
		ORDER BY YYYY
	</select>
 	<select id="selectHpGrp" resultMap="hpGrpResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
 		 SELECT DECODE(TO_CHAR (ADD_MONTHS (SYSDATE, -24), 'YYYY') , SUBSTR(A.ACEP_YYYYMM, 1, 4), 1 ,
                      DECODE(TO_CHAR (ADD_MONTHS (SYSDATE, -12), 'YYYY'), SUBSTR(A.ACEP_YYYYMM, 1, 4), 2, 3)) SEQ,
                  'N' READ_YN,
                  SUBSTR(A.ACEP_YYYYMM, 1, 4) YYYY,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'01', CNT, 0)) MONTH1,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'02', CNT, 0)) MONTH2,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'03', CNT, 0)) MONTH3,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'04', CNT, 0)) MONTH4,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'05', CNT, 0)) MONTH5,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'06', CNT, 0)) MONTH6,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'07', CNT, 0)) MONTH7,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'08', CNT, 0)) MONTH8,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'09', CNT, 0)) MONTH9,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'10', CNT, 0)) MONTH10,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'11', CNT, 0)) MONTH11,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'12', CNT, 0)) MONTH12,
                  SUM(CNT) TOTAL
             FROM (                           
                      SELECT SUBSTR(ACEP_DATE, 1, 6) ACEP_YYYYMM,
                             SUM(
                                 DECODE(SUBSTR(ACEP_DATE, 1, 6)
                                       ,TO_CHAR(ADD_MONTHS(SYSDATE, -24), 'YYYYMM')
                                       ,1
                                       ,TO_CHAR(ADD_MONTHS(SYSDATE, -12), 'YYYYMM')
                                       ,1
                                       ,1)
                                 ) CNT
                        FROM CLT_CLAIM_MST
                       WHERE SUBSTR(ACEP_DATE, 1, 6) BETWEEN TO_CHAR (ADD_MONTHS (SYSDATE, -24), 'YYYY')||'01' AND TO_CHAR(SYSDATE,'YYYY')||'12'
                       AND FIRST_ACEP_CHNL = '2' 
                       AND  SUBSTR(ACEP_DATE, 5, 2) <![CDATA[<>]]> TO_CHAR(SYSDATE,'MM') 
                       GROUP BY SUBSTR(ACEP_DATE, 1, 6)
                       UNION ALL 
                       SELECT SUBSTR(ACEP_DATE, 1, 6) ACEP_YYYYMM,
                             SUM(
                                 DECODE(SUBSTR(ACEP_DATE, 1, 6)
                                       ,TO_CHAR(ADD_MONTHS(SYSDATE, -24), 'YYYYMM')
                                       ,1
                                       ,TO_CHAR(ADD_MONTHS(SYSDATE, -12), 'YYYYMM')
                                       ,1
                                       ,1)
                                 ) CNT
                        FROM CLT_CLAIM_MST
                       WHERE SUBSTR(ACEP_DATE, 1, 6) BETWEEN TO_CHAR (ADD_MONTHS (SYSDATE, -24), 'YYYY')||'01' AND TO_CHAR(SYSDATE,'YYYY')||'12'
                       AND FIRST_ACEP_CHNL = '2' 
                       AND  SUBSTR(ACEP_DATE, 5, 2) = TO_CHAR(SYSDATE,'MM') 
                       AND  SUBSTR(ACEP_DATE, 7, 8) BETWEEN TO_CHAR(TRUNC(SYSDATE,'MM'),'DD') AND  TO_CHAR(SYSDATE,'DD') 
                       GROUP BY SUBSTR(ACEP_DATE, 1, 6)               
                  ) A
            GROUP BY SUBSTR(A.ACEP_YYYYMM, 1, 4)
            ORDER BY YYYY
  	</select>
  	
  	<resultMap id="hpGrp2Result" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="MONTH1" property="data1" jdbcType="VARCHAR" />
	    <result column="MONTH2" property="data2" jdbcType="VARCHAR" />
	    <result column="MONTH3" property="data3" jdbcType="VARCHAR" />
	    <result column="MONTH4" property="data4" jdbcType="VARCHAR" />
	    <result column="MONTH5" property="data5" jdbcType="VARCHAR" />
	    <result column="MONTH6" property="data6" jdbcType="VARCHAR" />
	    <result column="MONTH7" property="data7" jdbcType="VARCHAR" />
	    <result column="MONTH8" property="data8" jdbcType="VARCHAR" />
	    <result column="MONTH9" property="data9" jdbcType="VARCHAR" />
	    <result column="MONTH10" property="data10" jdbcType="VARCHAR" />
	    <result column="MONTH11" property="data11" jdbcType="VARCHAR" />
	    <result column="MONTH12" property="data12" jdbcType="VARCHAR" />
	 </resultMap>
	<select id="selectHpGrp2_b" resultMap="hpGrp2Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT	MONTH1,
				MONTH2,
				MONTH3,
				MONTH4,
				MONTH5,
				MONTH6,
				MONTH7,
				MONTH8,
				MONTH9,
				MONTH10,
				MONTH11,
				MONTH12		
		FROM	CLAIM_HP_GRP2_BACK
	</select>
 	<select id="selectHpGrp2" resultMap="hpGrp2Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
 		 SELECT  DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH1      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH1      ,0))
                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH1      ,0))) MONTH1,
                DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH2      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH2      ,0))
                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH2      ,0))) MONTH2,
                DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH3      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH3      ,0))
                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH3      ,0))) MONTH3,
                DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH4      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH4      ,0))
                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH4      ,0))) MONTH4,
                DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH5      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH5      ,0))
                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH5      ,0))) MONTH5,
                DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH6      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH6      ,0))
                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH6      ,0))) MONTH6,
                DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH7      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH7      ,0))
                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH7      ,0))) MONTH7,
                DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH8      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH8      ,0))
                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH8      ,0))) MONTH8,
                DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH9      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH9      ,0))
                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH9      ,0))) MONTH9,
                DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH10      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH10      ,0))
                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH10      ,0))) MONTH10,
                DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH11      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH11      ,0))
                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH11      ,0))) MONTH11,
                DECODE(MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH12      ,0)),0,'-',MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY'),MONTH12      ,0))
                -MAX(DECODE(YYYY,TO_CHAR(TRUNC(SYSDATE,'YY'),'YYYY')-1,MONTH12      ,0))) MONTH12
                FROM
            (
            SELECT DECODE(TO_CHAR (ADD_MONTHS (SYSDATE, -24), 'YYYY') , SUBSTR(A.ACEP_YYYYMM, 1, 4), 1 ,
                      DECODE(TO_CHAR (ADD_MONTHS (SYSDATE, -12), 'YYYY'), SUBSTR(A.ACEP_YYYYMM, 1, 4), 2, 3)) SEQ,
                  'N' READ_YN,
                  SUBSTR(A.ACEP_YYYYMM, 1, 4) YYYY,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'01', CNT, 0)) MONTH1,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'02', CNT, 0)) MONTH2,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'03', CNT, 0)) MONTH3,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'04', CNT, 0)) MONTH4,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'05', CNT, 0)) MONTH5,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'06', CNT, 0)) MONTH6,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'07', CNT, 0)) MONTH7,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'08', CNT, 0)) MONTH8,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'09', CNT, 0)) MONTH9,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'10', CNT, 0)) MONTH10,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'11', CNT, 0)) MONTH11,
                  SUM(DECODE(SUBSTR(A.ACEP_YYYYMM, 5, 6),'12', CNT, 0)) MONTH12,
                  SUM(CNT) TOTAL
             FROM (                           
                      SELECT SUBSTR(ACEP_DATE, 1, 6) ACEP_YYYYMM,
                             SUM(
                                 DECODE(SUBSTR(ACEP_DATE, 1, 6)
                                       ,TO_CHAR(ADD_MONTHS(SYSDATE, -24), 'YYYYMM')
                                       ,1
                                       ,TO_CHAR(ADD_MONTHS(SYSDATE, -12), 'YYYYMM')
                                       ,1
                                       ,1)
                                 ) CNT
                        FROM CLT_CLAIM_MST
                       WHERE SUBSTR(ACEP_DATE, 1, 6) BETWEEN TO_CHAR (ADD_MONTHS (SYSDATE, -24), 'YYYY')||'01' AND TO_CHAR(SYSDATE,'YYYY')||'12'
                         AND FIRST_ACEP_CHNL = '2' 
                          AND  SUBSTR(ACEP_DATE, 5, 2) <![CDATA[<>]]> TO_CHAR(SYSDATE,'MM')                         
                       GROUP BY SUBSTR(ACEP_DATE, 1, 6)
                       UNION ALL
                       SELECT SUBSTR(ACEP_DATE, 1, 6) ACEP_YYYYMM,
                             SUM(
                                 DECODE(SUBSTR(ACEP_DATE, 1, 6)
                                       ,TO_CHAR(ADD_MONTHS(SYSDATE, -24), 'YYYYMM')
                                       ,1
                                       ,TO_CHAR(ADD_MONTHS(SYSDATE, -12), 'YYYYMM')
                                       ,1
                                       ,1)
                                 ) CNT
                        FROM CLT_CLAIM_MST
                       WHERE SUBSTR(ACEP_DATE, 1, 6) BETWEEN TO_CHAR (ADD_MONTHS (SYSDATE, -24), 'YYYY')||'01' AND TO_CHAR(SYSDATE,'YYYY')||'12'
                         AND FIRST_ACEP_CHNL = '2'
                         AND SUBSTR(ACEP_DATE, 5, 2) = SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),5,2)
                         AND  SUBSTR(ACEP_DATE, 7, 8) BETWEEN TO_CHAR(TRUNC(SYSDATE,'MM'),'DD') AND  TO_CHAR(SYSDATE,'DD')                      
                       GROUP BY SUBSTR(ACEP_DATE, 1, 6)                  
                  ) A
            WHERE   SUBSTR(A.ACEP_YYYYMM, 1, 4) IN (TO_CHAR(SYSDATE,'YYYY'), TO_CHAR(SYSDATE,'YYYY')-1)
            GROUP BY SUBSTR(A.ACEP_YYYYMM, 1, 4)
            )
  	</select>
  	
  	<resultMap id="hpProsResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="GUBN" property="gubn" jdbcType="VARCHAR" />
	    <result column="ZUPSU" property="zupsu" jdbcType="VARCHAR" />
	    <result column="PROS1" property="pros1" jdbcType="VARCHAR" />
	    <result column="PROS2" property="pros2" jdbcType="VARCHAR" />
	 </resultMap>
	<select id="selectHpPros_b" resultMap="hpProsResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT	GUBN,
				ZUPSU,
				PROS1,
				PROS2		
		FROM	CLAIM_HP_PROS_BACK
	</select>
 	<select id="selectHpPros" resultMap="hpProsResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
 		    SELECT GUBN, ZUPSU, PROS1, PROS2
             FROM (                                                                                                                                     
                    SELECT 1 gu, '당  일' gubn,                                                                                                                        
                            count(*) zupsu,                                  
                            sum(decode(NVL(PROGR_STAT, 'N'),'Y',1,0)) pros1,  
                            sum(decode(NVL(PROGR_STAT, 'N'),'Y',0,1)) pros2                                                    
                    FROM CLT_CLAIM_MST                                                                                                                     
                    WHERE SUBSTR(ACEP_DATE, 1, 8) BETWEEN TO_CHAR(TRUNC(SYSDATE), 'YYYYMMDD')                                                                                                         
                                                      AND TO_CHAR(TRUNC(SYSDATE) + 0.99999421, 'YYYYMMDD')
                      AND FIRST_ACEP_CHNL = '2'                                                                                                                              
                    UNION ALL                                                                                                                                         
                    /*주간건수*/                                                                                                                                      
                    SELECT 1 gu, '주  간' gubn,                                                                                                                       
                            count(*) zupsu,                                  
                            sum(decode(NVL(PROGR_STAT, 'N'),'Y',1,0)) pros1, 
                            sum(decode(NVL(PROGR_STAT, 'N'),'Y',0,1)) pros2                                                              
                    FROM CLT_CLAIM_MST                                                                                                                     
                    WHERE SUBSTR(ACEP_DATE, 1, 8) BETWEEN TO_CHAR(TRUNC(SYSDATE+1)-TO_CHAR(SYSDATE,'D'), 'YYYYMMDD')                                                                                  
                                                      AND TO_CHAR(TRUNC(SYSDATE+1)-TO_CHAR(SYSDATE,'D')+6.99999421, 'YYYYMMDD')                                                                       
                      AND FIRST_ACEP_CHNL = '2'                                                                                                                                         
                    UNION ALL
                    /*월간건수*/                                                                                                                                      
                    SELECT  1 gu, '월  간' gubn,
                            count(*) zupsu,                                 
                            sum(decode(NVL(PROGR_STAT, 'N'),'Y',1,0)) pros1,  
                            sum(decode(NVL(PROGR_STAT, 'N'),'Y',0,1)) pros2                                                     
                    FROM CLT_CLAIM_MST                                                                                                                     
                    WHERE SUBSTR(ACEP_DATE, 1, 8) BETWEEN TO_CHAR(TRUNC(SYSDATE+1)-TO_CHAR(SYSDATE,'DD'), 'YYYYMMDD') 
                                                      AND TO_CHAR(TRUNC(LAST_DAY(SYSDATE))+0.99999421,'YYYYMMDD')
                      AND FIRST_ACEP_CHNL = '2'  
                   ) A
  	</select>
  		
  	<resultMap id="hpNotProsResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		<result column="ACEPNO" property="acepno" jdbcType="VARCHAR" />
  		<result column="SEQ" property="seq" jdbcType="VARCHAR" />
  		<result column="TRANSFER_SEQ" property="data1" jdbcType="VARCHAR" />
  		<result column="ACEP_DATE" property="acep_date" jdbcType="VARCHAR" />
  	    <result column="HAN_NAME" property="han_name" jdbcType="VARCHAR" />
  	    <result column="DEPT_NAME_ABBR" property="dept_name_abbr" jdbcType="VARCHAR" />
	    <result column="GAP" property="gap" jdbcType="VARCHAR" />
	 </resultMap>
	<select id="selectHpNotPros_b" resultMap="hpNotProsResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
		SELECT	ACEPNO,
				SEQ,
				TRANSFER_SEQ,
				ACEP_DATE,
				HAN_NAME,
				DEPT_NAME_ABBR,
				GAP		
		FROM	CLAIM_HPN_PROS_BACK
		 ORDER BY ACEP_DATE
	</select>
  	<select id="selectHpNotPros" resultMap="hpNotProsResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		      SELECT ROWNUM AS SEQ, TRANSFER_SEQ, ACEPNO, ACEP_DATE, HAN_NAME, DEPT_NAME_ABBR,
                   TRUNC(TO_DATE(SYSDATE) - TO_DATE(ACEP_DATE, 'YYYYMMDDHH24MISS')) GAP
              FROM CLT_CLAIM_MST A, NCOMT005 B, NCOMT001 C
             WHERE FIRST_ACEP_CHNL = '2'
               AND CNCL_TYPE_CD = '2'           
               AND NVL(PROGR_STAT, 'N') <![CDATA[<>]]> 'Y'
               AND A.ACEPPRSN_id = B.EMP_NO
               AND B.DEPT_CODE   = C.DEPT_CODE
               AND TRUNC(TO_DATE(SYSDATE) - TO_DATE(ACEP_DATE, 'YYYYMMDDHH24MISS')) <![CDATA[<>]]> '0'
            ORDER BY A.ACEP_DATE
  		
   	</select>
   	
   	
   	
   	
  	<resultMap id="procResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="READ_YN" property="read_yn" jdbcType="VARCHAR" />
	    <result column="GUBUN" property="gubun" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_6" property="data1" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_5" property="data2" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_4" property="data3" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_3" property="data4" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_2" property="data5" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_1" property="data6" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_C" property="data7" jdbcType="VARCHAR" />
	    <result column="TOTAL" 	 	 property="data8" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_6_D" property="allData1" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_5_D" property="allData2" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_4_D" property="allData3" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_3_D" property="allData4" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_2_D" property="allData5" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_1_D" property="allData6" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_C_D" property="allData7" jdbcType="VARCHAR" />
	    <result column="TOTAL_D" 	   property="allData8" jdbcType="VARCHAR" />
	 </resultMap>
	 <select id="selectProc_b" resultMap="procResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT  SEQ,READ_YN,
				GUBUN,
				CNT_MONTH_6,
				CNT_MONTH_5,
				CNT_MONTH_4,
				CNT_MONTH_3,
				CNT_MONTH_2,
				CNT_MONTH_1,
				CNT_MONTH_C,
				TOTAL,		
				CNT_MONTH_6_D,
				CNT_MONTH_5_D,
				CNT_MONTH_4_D,
				CNT_MONTH_3_D,
				CNT_MONTH_2_D,
				CNT_MONTH_1_D,
				CNT_MONTH_C_D,
				TOTAL_D	
		FROM 	CLAIM_DO_BACK
		ORDER
		BY		SEQ
  	</select>
  	<select id="selectProc" resultMap="procResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT SEQ,READ_YN,
		GUBUN,
		CNT_MONTH_6,
		CNT_MONTH_5,
		CNT_MONTH_4,
		CNT_MONTH_3,
		CNT_MONTH_2,
		CNT_MONTH_1,
		CNT_MONTH_C,
		TOTAL,		
		CNT_MONTH_6_D,
		CNT_MONTH_5_D,
		CNT_MONTH_4_D,
		CNT_MONTH_3_D,
		CNT_MONTH_2_D,
		CNT_MONTH_1_D,
		CNT_MONTH_C_D,
		TOTAL_D	
		FROM CLTPT003
  	</select>
  
  
  <resultMap id="tunnedAllResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="GUBUN" property="gubun" jdbcType="VARCHAR" />
  	    <result column="D1" property="d1" jdbcType="VARCHAR" />
	    <result column="D2" property="d2" jdbcType="VARCHAR" />
	    <result column="D3" property="d3" jdbcType="VARCHAR" />
	    <result column="D4" property="d4" jdbcType="VARCHAR" />
	    <result column="D5" property="d5" jdbcType="VARCHAR" />
	    <result column="D6" property="d6" jdbcType="VARCHAR" />
	    <result column="D7" property="d7" jdbcType="VARCHAR" />
	    <result column="TOTAL" property="total" jdbcType="VARCHAR" />
 </resultMap>
  	<select id="selectTunnedAll" resultMap="tunnedAllResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
	  	SELECT	'미방문' GUBUN,
	  			SUM(D1) D1,
	  			SUM(D2) D2,
	  			SUM(D3) D3,
	  			SUM(D4) D4,
	  			SUM(D5) D5,
	  			SUM(D6) D6,
	  			SUM(D7) D7,
	  			SUM(TOTAL) TOTAL
	  	FROM	(
		  		SELECT 
		            NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 1, 'YYYYMMDD'),1)),0) D1, NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 2, 'YYYYMMDD'),1)),0) D2, 
		            NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 3, 'YYYYMMDD'),1)),0) D3, NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 4, 'YYYYMMDD'),1)),0) D4, 
		            NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 5, 'YYYYMMDD'),1)),0) D5, NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 6, 'YYYYMMDD'),1)),0) D6,             
		            NVL(SUM(DECODE(LEAST(DAT,TO_CHAR (SYSDATE - 7, 'YYYYMMDD')),DAT,1)),0) D7, NVL(SUM(1), 0) AS TOTAL                                                                                             
		        FROM                                                                                                                                                                                        
		        (                                                                                                                                                                                           
		            SELECT SUBSTR(B.ACEP_DATE, 1, 8) DAT                                                                                                                                              
		            FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST B                                                                                                                                                             
		            WHERE A.ACEPNO = B.ACEPNO                                                                                                                                                               
		            AND B.CNCL_TYPE_CD = '1'   
		            AND B.PROS_DIV_CD_1 IS NOT NULL                                                                                                                                                             
		            AND B.PROGR_STAT = '1'                                                                                                                                                                   
		            AND B.PROS_DIV_CD_1 = '3'                                                                                                                                                               
		        )                                                                                                                                                                                           
		        UNION ALL                                                                                                                                                                                   
		        SELECT 
		            NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 1, 'YYYYMMDD'),1)),0) D1, NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 2, 'YYYYMMDD'),1)),0) D2, 
		            NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 3, 'YYYYMMDD'),1)),0) D3, NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 4, 'YYYYMMDD'),1)),0) D4, 
		            NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 5, 'YYYYMMDD'),1)),0) D5, NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 6, 'YYYYMMDD'),1)),0) D6,             
		            NVL(SUM(DECODE(LEAST(DAT,TO_CHAR (SYSDATE - 7, 'YYYYMMDD')),DAT,1)),0) D7, NVL(SUM(1), 0) AS TOTAL                                                                                             
		        FROM                                                                                                                                                                                        
		        (                                                                                                                                                                                           
		            SELECT SUBSTR(B.ACEP_DATE, 1, 8) DAT                                                                                                                                              
		            FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST B                                                                                                                                                             
		            WHERE A.ACEPNO = B.ACEPNO                                                                                                                                                               
		            AND B.CNCL_TYPE_CD = '1'  
		            AND B.PROS_DIV_CD_1 IS NOT NULL                                                                                                                                                                
		            AND B.PROGR_STAT = '1'                                                                                                                                                                    
		            AND B.PROS_DIV_CD_1 IN ('4', '7', '8')                                                                                                                                                  
		        )
	    	)  
  	</select>
  
  <resultMap id="tunnedResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="GUBUN" property="gubun" jdbcType="VARCHAR" />
  	    <result column="D1" property="d1" jdbcType="VARCHAR" />
	    <result column="D2" property="d2" jdbcType="VARCHAR" />
	    <result column="D3" property="d3" jdbcType="VARCHAR" />
	    <result column="D4" property="d4" jdbcType="VARCHAR" />
	    <result column="D5" property="d5" jdbcType="VARCHAR" />
	    <result column="D6" property="d6" jdbcType="VARCHAR" />
	    <result column="D7" property="d7" jdbcType="VARCHAR" />
	    <result column="TOTAL" property="total" jdbcType="VARCHAR" />
 </resultMap>
  	<select id="selectTunned" resultMap="tunnedResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT 'CS마스터' GUBUN,
            NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 1, 'YYYYMMDD'),1)),0) D1, NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 2, 'YYYYMMDD'),1)),0) D2, 
            NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 3, 'YYYYMMDD'),1)),0) D3, NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 4, 'YYYYMMDD'),1)),0) D4, 
            NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 5, 'YYYYMMDD'),1)),0) D5, NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 6, 'YYYYMMDD'),1)),0) D6,             
            NVL(SUM(DECODE(LEAST(DAT,TO_CHAR (SYSDATE - 7, 'YYYYMMDD')),DAT,1)),0) D7, NVL(SUM(1), 0) AS TOTAL                                                                                             
        FROM                                                                                                                                                                                        
        (                                                                                                                                                                                           
            SELECT SUBSTR(B.ACEP_DATE, 1, 8) DAT                                                                                                                                              
            FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST B                                                                                                                                                             
            WHERE A.ACEPNO = B.ACEPNO                                                                                                                                                               
            AND B.CNCL_TYPE_CD = '1'     
            AND B.PROS_DIV_CD_1 IS NOT NULL                                                                                                                                                             
            AND B.PROGR_STAT = '1'                                                                                                                                                                   
            AND B.PROS_DIV_CD_1 = '3'                                                                                                                                                               
        )                                                                                                                                                                                           
        UNION ALL                                                                                                                                                                                   
        SELECT '영업' GUBUN,
            NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 1, 'YYYYMMDD'),1)),0) D1, NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 2, 'YYYYMMDD'),1)),0) D2, 
            NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 3, 'YYYYMMDD'),1)),0) D3, NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 4, 'YYYYMMDD'),1)),0) D4, 
            NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 5, 'YYYYMMDD'),1)),0) D5, NVL(SUM(DECODE(DAT,TO_CHAR (SYSDATE - 6, 'YYYYMMDD'),1)),0) D6,             
            NVL(SUM(DECODE(LEAST(DAT,TO_CHAR (SYSDATE - 7, 'YYYYMMDD')),DAT,1)),0) D7, NVL(SUM(1), 0) AS TOTAL                                                                                             
        FROM                                                                                                                                                                                        
        (                                                                                                                                                                                           
            SELECT SUBSTR(B.ACEP_DATE, 1, 8) DAT                                                                                                                                              
            FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST B                                                                                                                                                             
            WHERE A.ACEPNO = B.ACEPNO                                                                                                                                                               
            AND B.CNCL_TYPE_CD = '1'       
            AND B.PROS_DIV_CD_1 IS NOT NULL                                                                                                                                                           
            AND B.PROGR_STAT = '1'                                                                                                                                                                    
            AND B.PROS_DIV_CD_1 IN ('4', '7', '8')                                                                                                                                                  
        )  
  	</select>
  	
  	
  	<resultMap id="modyResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="ODER" property="oder" jdbcType="VARCHAR" />
  	    <result column="OCCUR_DT" property="occur_dt" jdbcType="VARCHAR" />
	    <result column="ACEPNO" property="acepno" jdbcType="VARCHAR" />
	    <result column="PROS_DEPT_NM" property="pros_dept_nm" jdbcType="VARCHAR" />
	    <result column="CLERK" property="clerk" jdbcType="VARCHAR" />
	    <result column="CLERK_CELL" property="clerk_cell" jdbcType="VARCHAR" />    
	    <result column="PROD_NM" property="prod_nm" jdbcType="VARCHAR" />
	    <result column="MANF_FACT_CD" property="manf_fact_cd" jdbcType="VARCHAR" />
	    <result column="TYPE_NM" property="type_nm" jdbcType="VARCHAR" />
	    <result column="ACEP_DATE" property="acep_date" jdbcType="VARCHAR" />
	    <result column="PASS_DATE" property="pass_date" jdbcType="VARCHAR" />
 </resultMap>
  	<select id="selectMody" resultMap="modyResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	 SELECT     AA.ODER,
  	 			TO_CHAR (TO_DATE(SUBSTR(AA.ACEP_DATE, 1, 8), 'YYYYMMDD'), 'YY/MM') OCCUR_DT, AA.ACEPNO,                                              
                 (SELECT NVL (DEPT_NAME_ABBR, '-')                                                                                      
                                FROM NCOMT001                                                                                           
                               WHERE DEPT_CODE = AA.PROS_DEPT) PROS_DEPT_NM,                                                            
                 CASE                                                                                                                   
                    WHEN AA.SEQ <![CDATA[<>]]> BB.SEQ                                                                                               
                       THEN (SELECT (SELECT HAN_NAME                                                                                    
                                       FROM NCOMT005                                                                                    
                                      WHERE EMP_NO = CLERK)                                                                             
                               FROM CLT_CLAIM_MST_EXP_PROS                                                                                            
                              WHERE ACEPNO = AA.ACEPNO                                                                                  
                                AND CLERK IS NOT NULL                                                                                   
                                AND SEQ =                                                                                               
                                       (SELECT MAX (SEQ)                                                                                
                                          FROM CLT_CLAIM_MST_EXP_PROS                                                                                 
                                         WHERE ACEPNO = AA.ACEPNO                                                                       
                                               AND CLERK IS NOT NULL))                                                                  
                    ELSE (SELECT HAN_NAME                                                                                               
                            FROM NCOMT005                                                                                               
                           WHERE EMP_NO = BB.CLERK_REAL)                                                                                
                 END CLERK,                                                                                                             
                 CASE                                                                                                                   
                    WHEN AA.SEQ <![CDATA[<>]]> BB.SEQ                                                                                               
                       THEN (SELECT (SELECT CELA_TEL                                                                                    
                                       FROM NCOMT005                                                                                    
                                      WHERE EMP_NO = CLERK)                                                                             
                               FROM CLT_CLAIM_MST_EXP_PROS                                                                                            
                              WHERE ACEPNO = AA.ACEPNO                                                                                  
                                AND CLERK IS NOT NULL                                                                                   
                                AND SEQ =                                                                                               
                                       (SELECT MAX (SEQ)                                                                                
                                          FROM CLT_CLAIM_MST_EXP_PROS                                                                                 
                                         WHERE ACEPNO = AA.ACEPNO                                                                       
                                               AND CLERK IS NOT NULL))                                                                  
                    ELSE BB.CLERK_REAL_CELLNO                                                                                           
                 END CLERK_CELL,                                                                                                        
                 (SELECT DISTINCT PROD_NAME                                                                                             
                             FROM SDSTT301 A                                                                                            
                            WHERE A.PROD_CODE = AA.PROD_CD) PROD_NM,                                                                    
                 (SELECT NVL(TYPE_NAME, '-')
                 FROM CLT_CLAIM_TYPE_CD
                 WHERE TYPE_CD = AA.TYPE_CD) TYPE_NM, 
                 (SELECT DISTINCT NVL(CD_KNM, '-') 
                    FROM CLT_COMM_CD 
                  WHERE CD_id = 'N034'
                    AND CD_TP = NVL(AA.MANF_FACT_CD, '9999')) MANF_FACT_CD, 
                 TO_CHAR(TO_DATE(SUBSTR(AA.ACEP_DATE, 1, 8), 'YYYYMMDD'), 'YYYY/MM/DD') ACEP_DATE,                                                                        
                 (TO_DATE(SYSDATE)-TO_DATE(SUBSTR(AA.ACEP_DATE, 1, 8), 'YYYYMMDD')) PASS_DATE   
            FROM (SELECT ROWNUM AS ODER,
            			 A.ACEPNO, A.POTO_APPEND_FILENO, B.PROD_CD, B.TYPE_CD,                                                          
                         A.PROS_GRAD, B.PROS_DEPT, B.MANF_FACT_CD,                                                                      
                         CASE                                                                                                           
                            WHEN (    A.SAMPLE_REMOVE_TRAN_CD IS NOT NULL                                                               
                                  AND A.SAMPLE_TRAN_DATE IS NOT NULL                                                                    
                                  AND A.SAMPLE_ACEP_DATE IS NULL                                                                        
                                 )                                                                                                      
                               THEN 'prog'                                                                                              
                            WHEN (    A.SAMPLE_REMOVE_TRAN_CD IS NOT NULL                                                               
                                  AND A.SAMPLE_TRAN_DATE IS NOT NULL                                                                    
                                  AND A.SAMPLE_ACEP_DATE IS NOT NULL                                                                    
                                 )                                                                                                      
                               THEN 'end'                                                                                               
                         END STAT,                                                                                                      
                         A.SAMPLE_REMOVE_TRAN_CD, B.ACEP_DATE, A.KFTA_REPORT_DATE,                                                      
                         DECODE (B.PROGR_STAT, '', '1', '0', '1', B.PROGR_STAT) SEQ,                                                      
                         B.ACEPPRSN_id, B.CHECK_1, B.CHECK_2                                                                            
                    FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST B                                                                                         
                   WHERE A.ACEPNO = B.ACEPNO                                                                                            
                     AND B.CNCL_TYPE_CD = '1'  
                     AND B.PROS_DIV_CD_1 IS NOT NULL                                                                                           
                     AND B.PROS_DIV_CD_1 IN ('3', '4', '7', '8')                                                                        
                     AND B.PROGR_STAT = '1' AND SUBSTR(B.ACEP_DATE, 1, 8) <![CDATA[<>]]> TO_CHAR(SYSDATE,'YYYYMMDD')) AA,                                                                                         
                 (SELECT Q.ACEPNO, Q.CLERK, Q.PROS_DEPT, Q.CLERK_REAL,                                                                  
                         Q.CLERK_REAL_CELLNO, DECODE (QQ.SEQ, '', '1', QQ.SEQ) SEQ                                                      
                    FROM CLT_CLAIM_MST_EXP_PROS Q,                                                                                                    
                         (SELECT   Q.ACEPNO, MAX (Q.SEQ) SEQ                                                                            
                              FROM CLT_CLAIM_MST_EXP_PROS Q                                                                                           
                             WHERE Q.ACEPNO IN (                                                                                        
                                      SELECT A.ACEPNO                                                                                   
                                        FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST B                                                                     
                                       WHERE A.ACEPNO = B.ACEPNO                                                                        
                                         AND B.CNCL_TYPE_CD = '1'    
                                         AND B.PROS_DIV_CD_1 IS NOT NULL                                                                     
                                         AND B.PROS_DIV_CD_1 IN ('3', '4', '7', '8')                                                    
                                         AND B.PROGR_STAT = '1'  AND SUBSTR(B.ACEP_DATE, 1, 8) <![CDATA[<>]]> TO_CHAR(SYSDATE,'YYYYMMDD'))                                                                         
                          GROUP BY Q.ACEPNO) QQ                                                                                         
                   WHERE Q.ACEPNO IN (                                                                                                  
                            SELECT A.ACEPNO                                                                                             
                              FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST B                                                                               
                             WHERE A.ACEPNO = B.ACEPNO                                                                                  
                               AND B.CNCL_TYPE_CD = '1'                 
                               AND B.PROS_DIV_CD_1 IS NOT NULL                                                                  
                               AND B.PROS_DIV_CD_1 IN ('3', '4', '7', '8')                                                              
                               AND B.PROGR_STAT = '1'  AND SUBSTR(B.ACEP_DATE, 1, 8) <![CDATA[<>]]> TO_CHAR(SYSDATE,'YYYYMMDD'))                                                                                   
                     AND Q.SEQ = QQ.SEQ                                                                                                 
                     AND Q.ACEPNO = QQ.ACEPNO) BB,                                                                                      
                 (SELECT AA.ACEPNO, BB.EXPLDOC_PRESENT_LIMIT VISIT_DATE                                                                 
                    FROM (SELECT   C.ACEPNO, MAX (C.SEQ) SEQ                                                                            
                              FROM CLT_CLAIM_MST_EXP_PROS C                                                                                           
                             WHERE C.ACEPNO IN (                                                                                        
                                      SELECT A.ACEPNO                                                                                   
                                        FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST B                                                                     
                                       WHERE A.ACEPNO = B.ACEPNO                                                                        
                                         AND B.CNCL_TYPE_CD = '1'  
                                         AND B.PROS_DIV_CD_1 IS NOT NULL                                                                       
                                         AND B.PROS_DIV_CD_1 IN ('3', '4', '7', '8')                                                    
                                         AND B.PROGR_STAT = '1'  AND SUBSTR(B.ACEP_DATE, 1, 8) <![CDATA[<>]]> TO_CHAR(SYSDATE,'YYYYMMDD'))                                                                         
                          GROUP BY C.ACEPNO) AA,                                                                                        
                         CLT_CLAIM_MST_INFO_PROS BB                                                                                                    
                   WHERE AA.ACEPNO = BB.ACEPNO) CC                                                                                      
           WHERE AA.ACEPNO = BB.ACEPNO(+) AND AA.ACEPNO = CC.ACEPNO(+)                                                                  
        ORDER BY AA.ODER
  	</select>
  	
 	<resultMap id="dontCntResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="READ_YN" property="read_yn" jdbcType="VARCHAR" />
	    <result column="GUBUN" property="gubun" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH1" property="data1" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH2" property="data2" jdbcType="VARCHAR" />	 
	    <result column="TOTAL" property="total" jdbcType="VARCHAR" />
 </resultMap>
  	<select id="selectDontCnt" resultMap="dontCntResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT SEQ,
  		READ_YN,
  		GUBUN,
  		CNT_MONTH1,CNT_MONTH2,
  		DECODE(SEQ,1,'TOTAL',CNT_MONTH1 + CNT_MONTH2)  TOTAL
  		FROM CLTPT004
  	</select>
  	
  	<resultMap id="dontResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="READ_YN" property="read_yn" jdbcType="VARCHAR" />
	    <result column="OCCUR_DT" property="occur_dt" jdbcType="VARCHAR" />
	    <result column="ACEP_NO" property="acepno" jdbcType="VARCHAR" />
	    <result column="PROS_DEPT_NM" property="pros_dept_nm" jdbcType="VARCHAR" />
	    <result column="PROS_USER_NM" property="pros_user_nm" jdbcType="VARCHAR" />
	    <result column="PROC_NM" property="proc_nm" jdbcType="VARCHAR" />
	    <result column="TYPE_NM" property="type_nm" jdbcType="VARCHAR" />
	    <result column="PROS_GRAD_NM" property="pros_grad_nm" jdbcType="VARCHAR" />
	    <result column="ACEP_DT" property="acep_dt" jdbcType="VARCHAR" />
	    <result column="VISIT_DT" property="visit_dt" jdbcType="VARCHAR" />
	    <result column="PROC_SEQ" property="proc_seq" jdbcType="VARCHAR" />
	    <result column="KFDA_DT" property="kfda_dt" jdbcType="VARCHAR" />
	    <result column="MANF_FACT_CD" property="manf_fact_cd" jdbcType="VARCHAR" />
	    <result column="DURATION" property="duration" jdbcType="VARCHAR" />	   
 	</resultMap>
  	<select id="selectDont" resultMap="dontResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT SEQ,READ_YN,OCCUR_DT,ACEP_NO,PROS_DEPT_NM,PROS_USER_NM,PROC_NM,TYPE_NM,PROS_GRAD_NM,ACEP_DT,VISIT_DT,PROC_SEQ,KFDA_DT,
  			    (SELECT DISTINCT NVL(CD_KNM, '-') 
                    FROM CLT_COMM_CD 
                  WHERE CD_id = 'N034'
                    AND CD_TP = NVL(MANF_FACT_CD, '9999')) MANF_FACT_CD,
               DURATION	
 		FROM CLTPT005
  	</select>
  	
 
 <resultMap id="todResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="READ_YN" property="read_yn" jdbcType="VARCHAR" />
	    <result column="REPORT_YN" property="t_report_yn" jdbcType="VARCHAR" />
	    <result column="ACEP_NO" property="acepno" jdbcType="VARCHAR" />
	    <result column="PROS_DEPT_NM" property="pros_dept_nm" jdbcType="VARCHAR" />
	    <result column="PROS_USER_NM" property="pros_user_nm" jdbcType="VARCHAR" />
	    <result column="PROC_NM" property="proc_nm" jdbcType="VARCHAR" />
	    <result column="TYPE_NM" property="type_nm" jdbcType="VARCHAR" />
	    <result column="PROS_GRAD_NM" property="pros_grad_nm" jdbcType="VARCHAR" />
	    <result column="PROC_SAMPLE" property="proc_sample" jdbcType="VARCHAR" />
	    <result column="FACT_SAMPLE" property="fact_sample" jdbcType="VARCHAR" />
	    <result column="ACEP_DT" property="acep_dt" jdbcType="VARCHAR" />
	    <result column="EXP_INS_DT" property="exp_ins_dt" jdbcType="VARCHAR" />
	    <result column="VISIT_DT" property="visit_dt" jdbcType="VARCHAR" />
	    <result column="PROC_SEQ" property="proc_seq" jdbcType="VARCHAR" />
	    <result column="KFDA_DT" property="kfda_dt" jdbcType="VARCHAR" />
	     <result column="DURATION" property="duration" jdbcType="VARCHAR" />
	 </resultMap>
	 <select id="selectTod" resultMap="todResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
	  	SELECT	SEQ,
	  			READ_YN,
	  			REPORT_YN,
	  			ACEP_NO,
	  			PROS_DEPT_NM,
	  			PROS_USER_NM,
	  			PROC_NM,
	  			TYPE_NM,
	  			PROS_GRAD_NM,
	  			PROC_SAMPLE,
	  			FACT_SAMPLE,
	  			ACEP_DT,
	  			EXP_INS_DT,
	  			VISIT_DT,
	  			PROC_SEQ,
	  			KFDA_DT,
	  			DURATION
	  FROM		CLTPT011			
	  </select>
  	
  	
  	<resultMap id="expDay1Result" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="READ_YN" property="read_yn" jdbcType="VARCHAR" />
	    <result column="T_REPORT_YN" property="t_report_yn" jdbcType="VARCHAR" />
	    <result column="ACEPNO" property="acepno" jdbcType="VARCHAR" />
	    <result column="PROS_DEPT_NM" property="pros_dept_nm" jdbcType="VARCHAR" />
	    <result column="PROS_USER_NM" property="pros_user_nm" jdbcType="VARCHAR" />
	    <result column="PROC_NM" property="proc_nm" jdbcType="VARCHAR" />
	    <result column="TYPE_NM" property="type_nm" jdbcType="VARCHAR" />
	    <result column="PROS_GRAD_NM" property="pros_grad_nm" jdbcType="VARCHAR" />
	    <result column="ACEP_DT" property="acep_dt" jdbcType="VARCHAR" />
	    <result column="VISIT_DT" property="visit_dt" jdbcType="VARCHAR" />
	    <result column="PROC_SEQ" property="proc_seq" jdbcType="VARCHAR" />
	    <result column="KFDA_DT" property="kfda_dt" jdbcType="VARCHAR" />
	    <result column="PROC_SAMPLE" property="proc_sample" jdbcType="VARCHAR" />
	    <result column="EXP_INS_DT" property="exp_ins_dt" jdbcType="VARCHAR" />
	    <result column="FACT_SAMPLE" property="fact_sample" jdbcType="VARCHAR" />
	    <result column="DURATION" property="duration" jdbcType="VARCHAR" />
 	</resultMap>
 	<select id="selectExpDay1_b" resultMap="expDay1Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
 		SELECT	SEQ,
  				READ_YN,
  				T_REPORT_YN,
  				ACEPNO,
  				PROS_DEPT_NM,
  				PROS_USER_NM,
  				PROC_NM,
  				TYPE_NM,
  				PROS_GRAD_NM,
  				ACEP_DT,
  				VISIT_DT,
  				PROC_SEQ,
  				KFDA_DT,
  				PROC_SAMPLE,
  				EXP_INS_DT,
  				FACT_SAMPLE,
  				DURATION
  		FROM	CLAIM_DAY1_BACK
  		ORDER BY ACEPNO DESC
 	</select>
 	<select id="selectExpDay1" resultMap="expDay1Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT	SEQ,
  				READ_YN,
  				REPORT_YN T_REPORT_YN,
  				ACEP_NO	ACEPNO,
  				PROS_DEPT_NM,
  				PROS_USER_NM,
  				PROC_NM,
  				TYPE_NM,
  				PROS_GRAD_NM,
  				ACEP_DT,
  				VISIT_DT,
  				PROC_SEQ,
  				KFDA_DT,
  				PROC_SAMPLE,
  				EXP_INS_DT,
  				FACT_SAMPLE,
  				DURATION
  		FROM	CLTPT012
  		ORDER BY ACEPNO DESC
  	</select>
  	
  	
  	<resultMap id="expDay2Result" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="READ_YN" property="read_yn" jdbcType="VARCHAR" />
	    <result column="T_REPORT_YN" property="t_report_yn" jdbcType="VARCHAR" />
	    <result column="ACEPNO" property="acepno" jdbcType="VARCHAR" />
	    <result column="PROS_DEPT_NM" property="pros_dept_nm" jdbcType="VARCHAR" />
	    <result column="PROS_USER_NM" property="pros_user_nm" jdbcType="VARCHAR" />
	    <result column="PROC_NM" property="proc_nm" jdbcType="VARCHAR" />
	    <result column="TYPE_NM" property="type_nm" jdbcType="VARCHAR" />
	    <result column="PROS_GRAD_NM" property="pros_grad_nm" jdbcType="VARCHAR" />
	    <result column="PROC_SAMPLE" property="proc_sample" jdbcType="VARCHAR" />
	    <result column="FACT_SAMPLE" property="fact_sample" jdbcType="VARCHAR" />
	    <result column="ACEP_DT" property="acep_dt" jdbcType="VARCHAR" />
	    <result column="EXP_INS_DT" property="exp_ins_dt" jdbcType="VARCHAR" />
	    <result column="VISIT_DT" property="visit_dt" jdbcType="VARCHAR" />
	    <result column="PROC_SEQ" property="proc_seq" jdbcType="VARCHAR" />
	    <result column="KFDA_DT" property="kfda_dt" jdbcType="VARCHAR" />
	    <result column="DURATION" property="duration" jdbcType="VARCHAR" /> 	
 	</resultMap>
 	<select id="selectExpDay2_b" resultMap="expDay2Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
 		SELECT	SEQ,
  				READ_YN,
  				T_REPORT_YN,
  				ACEPNO,
  				PROS_DEPT_NM,
  				PROS_USER_NM,
  				PROC_NM,
  				TYPE_NM,
  				PROS_GRAD_NM,
  				ACEP_DT,
  				VISIT_DT,
  				PROC_SEQ,
  				KFDA_DT,
  				PROC_SAMPLE,
  				EXP_INS_DT,
  				FACT_SAMPLE,
  				DURATION
  		FROM	CLAIM_DAY2_BACK
  		ORDER BY ACEPNO DESC
 	</select>
 	<select id="selectExpDay2" resultMap="expDay2Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT	SEQ,
  				READ_YN,
  				REPORT_YN T_REPORT_YN,
  				ACEP_NO	ACEPNO,
  				PROS_DEPT_NM,
  				PROS_USER_NM,
  				PROC_NM,
  				TYPE_NM,
  				PROS_GRAD_NM,
  				ACEP_DT,
  				VISIT_DT,
  				PROC_SEQ,
  				KFDA_DT,
  				PROC_SAMPLE,
  				EXP_INS_DT,
  				FACT_SAMPLE,
  				DURATION
  		FROM	CLTPT013
  		ORDER BY ACEPNO DESC
  	</select>
  	
  	
  	<resultMap id="expDay3Result" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="READ_YN" property="read_yn" jdbcType="VARCHAR" />
	    <result column="T_REPORT_YN" property="t_report_yn" jdbcType="VARCHAR" />
	    <result column="ACEPNO" property="acepno" jdbcType="VARCHAR" />
	    <result column="PROS_DEPT_NM" property="pros_dept_nm" jdbcType="VARCHAR" />
	    <result column="PROS_USER_NM" property="pros_user_nm" jdbcType="VARCHAR" />
	    <result column="PROC_NM" property="proc_nm" jdbcType="VARCHAR" />
	    <result column="TYPE_NM" property="type_nm" jdbcType="VARCHAR" />
	    <result column="PROS_GRAD_NM" property="pros_grad_nm" jdbcType="VARCHAR" />
	    <result column="PROC_SAMPLE" property="proc_sample" jdbcType="VARCHAR" />
	    <result column="FACT_SAMPLE" property="fact_sample" jdbcType="VARCHAR" />
	    <result column="ACEP_DT" property="acep_dt" jdbcType="VARCHAR" />
	    <result column="EXP_INS_DT" property="exp_ins_dt" jdbcType="VARCHAR" />
	    <result column="VISIT_DT" property="visit_dt" jdbcType="VARCHAR" />
	    <result column="PROC_SEQ" property="proc_seq" jdbcType="VARCHAR" />
	    <result column="KFDA_DT" property="kfda_dt" jdbcType="VARCHAR" />
	    <result column="DURATION" property="duration" jdbcType="VARCHAR" />
 	</resultMap>
 	<select id="selectExpDay3_b" resultMap="expDay3Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
 		SELECT	SEQ,
  				READ_YN,
  				T_REPORT_YN,
  				ACEPNO,
  				PROS_DEPT_NM,
  				PROS_USER_NM,
  				PROC_NM,
  				TYPE_NM,
  				PROS_GRAD_NM,
  				ACEP_DT,
  				VISIT_DT,
  				PROC_SEQ,
  				KFDA_DT,
  				PROC_SAMPLE,
  				EXP_INS_DT,
  				FACT_SAMPLE,
  				DURATION
  		FROM	CLAIM_DAY3_BACK
  		ORDER BY ACEPNO DESC
 	</select>
 	<select id="selectExpDay3" resultMap="expDay3Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT	SEQ,
  				READ_YN,
  				REPORT_YN T_REPORT_YN,
  				ACEP_NO	ACEPNO,
  				PROS_DEPT_NM,
  				PROS_USER_NM,
  				PROC_NM,
  				TYPE_NM,
  				PROS_GRAD_NM,
  				ACEP_DT,
  				VISIT_DT,
  				PROC_SEQ,
  				KFDA_DT,
  				PROC_SAMPLE,
  				EXP_INS_DT,
  				FACT_SAMPLE,
  				DURATION
  		FROM	CLTPT016
  		ORDER BY ACEPNO DESC
  	</select>
  
  	
  	<resultMap id="splResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="READ_YN" property="read_yn" jdbcType="VARCHAR" />	    
	    <result column="ACEPNO" property="acepno" jdbcType="VARCHAR" />
	    <result column="ACEP_TIME" property="acep_time" jdbcType="VARCHAR" />	    
	    <result column="PROD_NM" property="prod_nm" jdbcType="VARCHAR" />
	    <result column="TYPE_NM" property="type_nm" jdbcType="VARCHAR" />
	    <result column="FACT_NM" property="fact_nm" jdbcType="VARCHAR" />	    
	    <result column="PROS_DEPT_NM" property="pros_dept_nm" jdbcType="VARCHAR" />
	    <result column="PROS_USER_NM" property="pros_user_nm" jdbcType="VARCHAR" />
	    <result column="PROC_TIME" property="proc_time" jdbcType="VARCHAR" />
	    <result column="PROC_SEQ" property="proc_seq" jdbcType="VARCHAR" />
	    <result column="ACCP_DEPT" property="accp_dept" jdbcType="VARCHAR" />
 </resultMap>
  	<select id="selectSpl" resultMap="splResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT ROWNUM SEQ, 
         'Y' READ_YN,
       X.ACEPNO, 
       X.ACEP_DATE AS ACEP_TIME, 
       CASE 
         WHEN LENGTH(X.PROD_NM) > 5 THEN 
          SUBSTR(X.PROD_NM, 1, 5) || '..' 
         ELSE 
          X.PROD_NM 
       END PROD_NM, 
       CASE 
         WHEN LENGTH(X.TYPE_NM) > 5 THEN 
          SUBSTR(X.TYPE_NM, 1, 5) || '..' 
         ELSE 
          X.TYPE_NM 
       END TYPE_NM, 
       CASE 
         WHEN LENGTH(X.MANF_FACT_NM) > 5 THEN 
          SUBSTR(X.MANF_FACT_NM, 1, 5) || '..' 
         ELSE 
          X.MANF_FACT_NM 
       END FACT_NM, 
       CASE 
         WHEN LENGTH(X.PROS_DEPT) > 6 THEN 
          SUBSTR(X.PROS_DEPT, 1, 6) || '..' 
         ELSE 
          X.PROS_DEPT 
       END PROS_DEPT_NM, 
       CASE 
         WHEN LENGTH(X.CLERK) > 4 THEN 
          SUBSTR(X.CLERK, 1, 4) || '..' 
         ELSE 
          X.CLERK 
       END PROS_USER_NM, 
       X.VISIT_DT AS PROC_TIME, 
       X.PROGR_STAT AS PROC_SEQ,
       X.ACCP_DEPT                       
    FROM (SELECT ROWNUM NUM, 
               SUBSTR(AA.ACEPNO, 5, 2) || '-' || SUBSTR(AA.ACEPNO, -4, 4) ACEPNO, 
               SUBSTR(AA.ACEP_DATE, 9, 2)||':'||SUBSTR(AA.ACEP_DATE, 11, 2) ACEP_DATE,
               AA.PROD_NM, 
               (SELECT NVL(TYPE_NAME, '-')
                FROM CLT_CLAIM_TYPE_CD
                WHERE TYPE_CD = AA.TYPE_CD) TYPE_NM, 
               (SELECT DISTINCT NVL(CD_KNM, '-') 
                FROM CLT_COMM_CD 
                WHERE CD_id = 'N034'
                    AND CD_TP = NVL(AA.MANF_FACT_CD, '9999')) MANF_FACT_NM, 
               (SELECT NVL(DEPT_NAME_ABBR, '-') 
                  FROM NCOMT001 
                 WHERE DEPT_CODE = AA.PROS_DEPT) PROS_DEPT, 
               NVL((SELECT E.HAN_NAME 
                     FROM NCOMT005 E 
                    WHERE E.EMP_NO = AA.CLERK), 
                   '-') CLERK, 
               AA.VISIT_DT, 
               CASE 
                 WHEN AA.PROGR_STAT = '1' THEN 
                  '1차' 
                 WHEN AA.PROGR_STAT = '2' THEN 
                  '2차' 
                 WHEN AA.PROGR_STAT = '3' THEN 
                  '3차' 
                 WHEN AA.PROGR_STAT <![CDATA[>=]]> '4' AND AA.PROGR_STAT <![CDATA[<>]]> 'Y' THEN 
                  '4차 이상' 
                 WHEN AA.PROGR_STAT = 'Y' THEN 
                  '완료' 
                 ELSE 
                  '-' 
               END PROGR_STAT, 
               (SELECT NVL(DEPT_NAME_ABBR, '-') 
                  FROM NCOMT001 
                 WHERE DEPT_CODE = AA.ACCP_DEPT) ACCP_DEPT
          FROM (SELECT A.MANF_FACT_CD, 
                       A.ACEPNO, 
                       A.ACEP_DATE,                        
                       (SELECT DISTINCT PROD_NAME  
                        FROM SDSTT301  
                       WHERE PROD_CODE = A.PROD_CD) PROD_NM,  
                       A.TYPE_CD, 
                       C.SEQ, 
                       A.PROGR_STAT, 
                       C.PROS_DEPT, 
                       C.CLERK, 
                       B.FINISH_CLERK, 
                       CASE WHEN C.VISIT_DATE IS NOT NULL THEN   
                                 SUBSTR(C.VISIT_DATE,1,2) || CHR(58) || SUBSTR(C.VISIT_DATE,3,2)  
                            ELSE  
                                 '' 
                       END VISIT_DT,
                       A.PROS_DEPT ACCP_DEPT 
                  FROM CLT_CLAIM_MST A, 
                       CLT_CLAIM_MST_INFO_PROS B, 
                       (SELECT DISTINCT BB.ACEPNO, 
                                        BB.CLERK, 
                                        BB.PROS_DEPT, 
                                        CC.SEQ, 
                                        CC.VISIT_DATE 
                          FROM (SELECT Q.ACEPNO, Q.CLERK, Q.PROS_DEPT 
                                  FROM CLT_CLAIM_MST_EXP_PROS Q 
                                 WHERE Q.ACEPNO IN 
                                       (SELECT A.ACEPNO 
                                          FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST B 
                                         WHERE A.ACEPNO = B.ACEPNO 
                                           AND SUBSTR(B.ACEP_DATE, 1, 8) = TO_CHAR(SYSDATE, 'YYYYMMDD')
                                           AND B.CNCL_TYPE_CD = '1' 
                                           AND B.PROS_DIV_CD_1 IS NOT NULL  
                                           AND B.ACEP_GRAD_CD = '0') 
                                   AND Q.SEQ = '1') BB, 
                               (SELECT AA.ACEPNO, 
                                       CC.PROGR_STAT SEQ, 
                                       BB.VISIT_TIME VISIT_DATE 
                                  FROM (SELECT C.ACEPNO, MAX(C.SEQ) SEQ 
                                          FROM CLT_CLAIM_MST_EXP_PROS C 
                                         WHERE C.ACEPNO IN 
                                               (SELECT A.ACEPNO 
                                                  FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST B 
                                                 WHERE A.ACEPNO = B.ACEPNO 
                                                   AND SUBSTR(B.ACEP_DATE, 1, 8) = TO_CHAR(SYSDATE, 'YYYYMMDD') 
                                                   AND B.CNCL_TYPE_CD = '1' 
                                                   AND B.PROS_DIV_CD_1 IS NOT NULL  
                                                   AND B.ACEP_GRAD_CD = '0') 
                                         GROUP BY C.ACEPNO) AA, 
                                       CLT_CLAIM_MST_EXP_PROS BB, 
                                       CLT_CLAIM_MST CC 
                                 WHERE AA.ACEPNO = BB.ACEPNO 
                                   AND AA.SEQ = BB.SEQ 
                                   AND AA.ACEPNO(+) = CC.ACEPNO) CC 
                         WHERE BB.ACEPNO = CC.ACEPNO(+)) C 
                 WHERE A.ACEPNO = B.ACEPNO(+) 
                   AND A.ACEPNO = C.ACEPNO(+) 
                   AND A.CNCL_TYPE_CD = '1' 
                   AND A.PROS_DIV_CD_1 IS NOT NULL  
                   AND A.ACEP_GRAD_CD = '0' 
                   AND SUBSTR(A.ACEP_DATE, 1, 8) = TO_CHAR(SYSDATE, 'YYYYMMDD') 
                 ORDER BY 2 DESC) AA 
         ORDER BY 1 ASC) X 
  	</select>
  	
  	
  	<resultMap id="reptResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" property="seq" jdbcType="VARCHAR" />
	    <result column="READ_YN" property="read_yn" jdbcType="VARCHAR" />
	    <result column="ACEPNO" property="acepno" jdbcType="VARCHAR" />
	    <result column="APPR_USER_NM" property="appr_user_nm" jdbcType="VARCHAR" />
	    <result column="PROD_NM" property="prod_nm" jdbcType="VARCHAR" />
	    <result column="TYPE_NM" property="type_nm" jdbcType="VARCHAR" />
	    <result column="FACT_NM" property="face_nm" jdbcType="VARCHAR" />
	    <result column="ADD_DT" property="add_dt" jdbcType="VARCHAR" />
	    <result column="EXP_DT" property="exp_dt" jdbcType="VARCHAR" />	   
 </resultMap>
 <select id="selectRept" resultMap="reptResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	SELECT	SEQ,
  			READ_YN,
  			ACEP_NO AS ACEPNO,
  			APPR_USER_NM,
  			PROD_NM,
  			TYPE_NM,
  			FACT_NM,
  			ADD_DT,
  			EXP_DT
  	FROM	CLTPT015
  	
  </select>
  	
  	
  	<resultMap id="kfdaAllResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" 			property="seq" jdbcType="VARCHAR" />
	    <result column="READ_YN" 		property="read_yn" jdbcType="VARCHAR" />
	    <result column="GUBUN" 			property="gubun" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH1" 	property="data1" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_H_1" 	property="allData1" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH2" 	property="data2" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_H_2"	property="allData2" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH3" 	property="data3" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_H_3" 	property="allData3" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH4" 	property="data4" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_H_4" 	property="allData4" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH5" 	property="data5" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_H_5" 	property="allData5" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH6" 	property="data6" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_H_6"	property="allData6" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH7" 	property="data7" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_H_7" 	property="allData7" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH8" 	property="data8" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_H_8" 	property="allData8" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH9" 	property="data9" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_H_9" 	property="allData9" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH10" 	property="data10" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_H_10"	property="allData10" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH11" 	property="data11" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_H_11" property="allData11" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH12" 	property="data12" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH_H_12" property="allData12" jdbcType="VARCHAR" />	    
	    <result column="CNT_TOTAL" 	property="total" jdbcType="VARCHAR" />
	    <result column="CNT_TOTAL_H" property="allTotal" jdbcType="VARCHAR" />  
 	</resultMap>
 	<select id="selectKfdaAll_b" resultMap="kfdaAllResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT	SEQ,
  				READ_YN,
  				GUBUN,
  				CNT_MONTH1,
  				CNT_MONTH_H_1,
  				CNT_MONTH2,
  				CNT_MONTH_H_2,
  				CNT_MONTH3,
  				CNT_MONTH_H_3,
  				CNT_MONTH4,
  				CNT_MONTH_H_4,
  				CNT_MONTH5,
  				CNT_MONTH_H_5,
  				CNT_MONTH6,
  				CNT_MONTH_H_6,
  				CNT_MONTH7,
  				CNT_MONTH_H_7,
  				CNT_MONTH8,
  				CNT_MONTH_H_8,
  				CNT_MONTH9,
  				CNT_MONTH_H_9,
  				CNT_MONTH10,
  				CNT_MONTH_H_10,
  				CNT_MONTH11,
  				CNT_MONTH_H_11,
  				CNT_MONTH12,
  				CNT_MONTH_H_12,
  				CNT_TOTAL,
  				CNT_TOTAL_H
  		FROM	CLAIM_KFDA_BACK
  		ORDER BY SEQ
  	</select>	
  	<select id="selectKfdaAll" resultMap="kfdaAllResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	     SELECT   A.SEQ, 
                   A.READ_YN, 
                   A.GUBUN, 
                   DECODE(CNT_MONTH1,'0','-',CNT_MONTH1)   CNT_MONTH1,
                   DECODE(CNT_MONTH_H_1,'0','-',CNT_MONTH_H_1)   CNT_MONTH_H_1,
                   DECODE(CNT_MONTH2,'0','-',CNT_MONTH2)   CNT_MONTH2,
                   DECODE(CNT_MONTH_H_2,'0','-',CNT_MONTH_H_2)   CNT_MONTH_H_2,
                   DECODE(CNT_MONTH3,'0','-',CNT_MONTH3)   CNT_MONTH3, 
                   DECODE(CNT_MONTH_H_3,'0','-',CNT_MONTH_H_3)   CNT_MONTH_H_3,
                   DECODE(CNT_MONTH4,'0','-',CNT_MONTH4)   CNT_MONTH4,
                   DECODE(CNT_MONTH_H_4,'0','-',CNT_MONTH_H_4)   CNT_MONTH_H_4,
                   DECODE(CNT_MONTH5,'0','-',CNT_MONTH5)   CNT_MONTH5, 
                   DECODE(CNT_MONTH_H_5,'0','-',CNT_MONTH_H_5)   CNT_MONTH_H_5,
                   DECODE(CNT_MONTH6,'0','-',CNT_MONTH6)   CNT_MONTH6,
                   DECODE(CNT_MONTH_H_6,'0','-',CNT_MONTH_H_6)   CNT_MONTH_H_6,
                   DECODE(CNT_MONTH7,'0','-',CNT_MONTH7)   CNT_MONTH7,
                   DECODE(CNT_MONTH_H_7,'0','-',CNT_MONTH_H_7)   CNT_MONTH_H_7,
                   DECODE(CNT_MONTH8,'0','-',CNT_MONTH8)   CNT_MONTH8,
                   DECODE(CNT_MONTH_H_8,'0','-',CNT_MONTH_H_8)   CNT_MONTH_H_8, 
                   DECODE(CNT_MONTH9,'0','-',CNT_MONTH9)   CNT_MONTH9, 
                   DECODE(CNT_MONTH_H_9,'0','-',CNT_MONTH_H_9)   CNT_MONTH_H_9,
                   DECODE(CNT_MONTH10,'0','-',CNT_MONTH10)   CNT_MONTH10, 
                   DECODE(CNT_MONTH_H_10,'0','-',CNT_MONTH_H_10)   CNT_MONTH_H_10, 
                   DECODE(CNT_MONTH11,'0','-',CNT_MONTH11)   CNT_MONTH11,
                   DECODE(CNT_MONTH_H_11,'0','-',CNT_MONTH_H_11)   CNT_MONTH_H_11,
                   DECODE(CNT_MONTH12,'0','-',CNT_MONTH12)   CNT_MONTH12,
                   DECODE(CNT_MONTH_H_12,'0','-',CNT_MONTH_H_12)   CNT_MONTH_H_12,
                   CNT_TOTAL,
                   CASE WHEN TO_CHAR(SYSDATE,'MM') = '01' 
                        THEN CNT_TOTAL - DECODE(CNT_MONTH1,'-','0',CNT_MONTH1) + DECODE(CNT_MONTH_H_1,'-','0',CNT_MONTH_H_1)   
                        WHEN TO_CHAR(SYSDATE,'MM') = '02' 
                        THEN CNT_TOTAL - DECODE(CNT_MONTH2,'-','0',CNT_MONTH2) + DECODE(CNT_MONTH_H_2,'-','0',CNT_MONTH_H_2)  
                        WHEN TO_CHAR(SYSDATE,'MM') = '03' 
                        THEN CNT_TOTAL - DECODE(CNT_MONTH3,'-','0',CNT_MONTH3) + DECODE(CNT_MONTH_H_3,'-','0',CNT_MONTH_H_3) 
                        WHEN TO_CHAR(SYSDATE,'MM') = '04' 
                        THEN CNT_TOTAL - DECODE(CNT_MONTH4,'-','0',CNT_MONTH4) + DECODE(CNT_MONTH_H_4,'-','0',CNT_MONTH_H_4)  
                        WHEN TO_CHAR(SYSDATE,'MM') = '05' 
                        THEN CNT_TOTAL - DECODE(CNT_MONTH5,'-','0',CNT_MONTH5) + DECODE(CNT_MONTH_H_5,'-','0',CNT_MONTH_H_5)  
                        WHEN TO_CHAR(SYSDATE,'MM') = '06' 
                        THEN CNT_TOTAL - DECODE(CNT_MONTH6,'-','0',CNT_MONTH6) + DECODE(CNT_MONTH_H_6,'-','0',CNT_MONTH_H_6)  
                        WHEN TO_CHAR(SYSDATE,'MM') = '07' 
                        THEN CNT_TOTAL - DECODE(CNT_MONTH7,'-','0',CNT_MONTH7) + DECODE(CNT_MONTH_H_7,'-','0',CNT_MONTH_H_7)  
                        WHEN TO_CHAR(SYSDATE,'MM') = '08' 
                        THEN CNT_TOTAL - DECODE(CNT_MONTH8,'-','0',CNT_MONTH8) + DECODE(CNT_MONTH_H_8,'-','0',CNT_MONTH_H_8)  
                        WHEN TO_CHAR(SYSDATE,'MM') = '09' 
                        THEN CNT_TOTAL - DECODE(CNT_MONTH9,'-','0',CNT_MONTH9) + DECODE(CNT_MONTH_H_9,'-','0',CNT_MONTH_H_9)  
                        WHEN TO_CHAR(SYSDATE,'MM') = '10' 
                        THEN CNT_TOTAL - DECODE(CNT_MONTH10,'-','0',CNT_MONTH10) + DECODE(CNT_MONTH_H_10,'-','0',CNT_MONTH_H_10)  
                        WHEN TO_CHAR(SYSDATE,'MM') = '11' 
                        THEN CNT_TOTAL - DECODE(CNT_MONTH11,'-','0',CNT_MONTH11) + DECODE(CNT_MONTH_H_10,'-','0',CNT_MONTH_H_11)  
                        ELSE CNT_TOTAL - DECODE(CNT_MONTH12,'-','0',CNT_MONTH12) + DECODE(CNT_MONTH_H_10,'-','0',CNT_MONTH_H_12)
                   END CNT_TOTAL_H
                FROM CLTPT008 A
                WHERE A.READ_YN = 'Y'
          ORDER BY SEQ  
  	</select>
  	
  	<resultMap id="kfdaGrpResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	   <result column="GUBUN" 			property="gubun" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH1" 	property="data1" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH2" 	property="data2" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH3" 	property="data3" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH4" 	property="data4" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH5" 	property="data5" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH6" 	property="data6" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH7" 	property="data7" jdbcType="VARCHAR" />
	    <result column="CNT_MONTH8" 	property="data8" jdbcType="VARCHAR" />	   
	    <result column="CNT_MONTH9" 	property="data9" jdbcType="VARCHAR" />	    
	    <result column="CNT_MONTH10" 	property="data10" jdbcType="VARCHAR" />	    
	    <result column="CNT_MONTH11" 	property="data11" jdbcType="VARCHAR" />	    
	    <result column="CNT_MONTH12" 	property="data12" jdbcType="VARCHAR" />	    
 	</resultMap>	
 	<select id="selectKfdaGrp_b" resultMap="kfdaGrpResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT	GUBUN,
  				CNT_MONTH1,
  				CNT_MONTH2,
  				CNT_MONTH3,
  				CNT_MONTH4,
  				CNT_MONTH5,
  				CNT_MONTH6,
  				CNT_MONTH7,
  				CNT_MONTH8,
  				CNT_MONTH9,
  				CNT_MONTH10,
  				CNT_MONTH11,
  				CNT_MONTH12
  		FROM	CLAIM_KFDA_GRP_BACK
  		ORDER
  		BY		SEQ
  	</select>
  	<select id="selectKfdaGrp" resultMap="kfdaGrpResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	     SELECT    GUBUN,
                    DECODE(TO_CHAR(SYSDATE,'MM'),'01',DECODE(CNT_MONTH_H_1, 0,'-',CNT_MONTH_H_1), DECODE(CNT_MONTH1,'0',CASE WHEN TO_CHAR(SYSDATE,'MM') <![CDATA[>=]]> '01' THEN '0' ELSE '-' END,CNT_MONTH1))  CNT_MONTH1,
                    DECODE(TO_CHAR(SYSDATE,'MM'),'02',DECODE(CNT_MONTH_H_2, 0,'-',CNT_MONTH_H_2), DECODE(CNT_MONTH2,'0',CASE WHEN TO_CHAR(SYSDATE,'MM') <![CDATA[>=]]> '02' THEN '0' ELSE '-' END,CNT_MONTH2))  CNT_MONTH2,
                    DECODE(TO_CHAR(SYSDATE,'MM'),'03',DECODE(CNT_MONTH_H_3, 0,'-',CNT_MONTH_H_3), DECODE(CNT_MONTH3,'0',CASE WHEN TO_CHAR(SYSDATE,'MM') <![CDATA[>=]]> '03' THEN '0' ELSE '-' END,CNT_MONTH3))  CNT_MONTH3,
                    DECODE(TO_CHAR(SYSDATE,'MM'),'04',DECODE(CNT_MONTH_H_4, 0,'-',CNT_MONTH_H_4), DECODE(CNT_MONTH4,'0',CASE WHEN TO_CHAR(SYSDATE,'MM') <![CDATA[>=]]> '04' THEN '0' ELSE '-' END,CNT_MONTH4))  CNT_MONTH4,
                    DECODE(TO_CHAR(SYSDATE,'MM'),'05',DECODE(CNT_MONTH_H_5, 0,'-',CNT_MONTH_H_5), DECODE(CNT_MONTH5,'0',CASE WHEN TO_CHAR(SYSDATE,'MM') <![CDATA[>=]]> '05' THEN '0' ELSE '-' END,CNT_MONTH5))  CNT_MONTH5,
                    DECODE(TO_CHAR(SYSDATE,'MM'),'06',DECODE(CNT_MONTH_H_6, 0,'-',CNT_MONTH_H_6), DECODE(CNT_MONTH6,'0',CASE WHEN TO_CHAR(SYSDATE,'MM') <![CDATA[>=]]> '06' THEN '0' ELSE '-' END,CNT_MONTH6))  CNT_MONTH6,
                    DECODE(TO_CHAR(SYSDATE,'MM'),'07',DECODE(CNT_MONTH_H_7, 0,'-',CNT_MONTH_H_7), DECODE(CNT_MONTH7,'0',CASE WHEN TO_CHAR(SYSDATE,'MM') <![CDATA[>=]]> '07' THEN '0' ELSE '-' END,CNT_MONTH7))  CNT_MONTH7,
                    DECODE(TO_CHAR(SYSDATE,'MM'),'08',DECODE(CNT_MONTH_H_8, 0,'-',CNT_MONTH_H_8), DECODE(CNT_MONTH8,'0',CASE WHEN TO_CHAR(SYSDATE,'MM') <![CDATA[>=]]> '08' THEN '0' ELSE '-' END,CNT_MONTH8))  CNT_MONTH8,
                    DECODE(TO_CHAR(SYSDATE,'MM'),'09',DECODE(CNT_MONTH_H_9, 0,'-',CNT_MONTH_H_9), DECODE(CNT_MONTH9,'0',CASE WHEN TO_CHAR(SYSDATE,'MM') <![CDATA[>=]]> '09' THEN '0' ELSE '-' END,CNT_MONTH9))  CNT_MONTH9,
                    DECODE(TO_CHAR(SYSDATE,'MM'),'10',DECODE(CNT_MONTH_H_10,0,'-',CNT_MONTH_H_10),DECODE(CNT_MONTH10,'0',CASE WHEN TO_CHAR(SYSDATE,'MM') <![CDATA[>=]]> '10' THEN '0' ELSE '-' END,CNT_MONTH10)) CNT_MONTH10,
                    DECODE(TO_CHAR(SYSDATE,'MM'),'11',DECODE(CNT_MONTH_H_11,0,'-',CNT_MONTH_H_11),DECODE(CNT_MONTH11,'0',CASE WHEN TO_CHAR(SYSDATE,'MM') <![CDATA[>=]]> '11' THEN '0' ELSE '-' END,CNT_MONTH11)) CNT_MONTH11,
                    DECODE(TO_CHAR(SYSDATE,'MM'),'12',DECODE(CNT_MONTH_H_12,0,'-',CNT_MONTH_H_12),DECODE(CNT_MONTH12,'0',CASE WHEN TO_CHAR(SYSDATE,'MM') <![CDATA[>=]]> '12' THEN '0' ELSE '-' END,CNT_MONTH12)) CNT_MONTH12
          FROM  CLTPT008
          ORDER
          BY	SEQ
  	</select>
  
  	
  	<resultMap id="kfdaResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" 			property="seq" jdbcType="VARCHAR" />
	    <result column="READ_YN" 		property="read_yn" jdbcType="VARCHAR" />
	    <result column="GUBUN" 			property="gubun" jdbcType="VARCHAR" />
	    <result column="MONTH_6" 	property="data6" jdbcType="VARCHAR" />
	    <result column="MONTH_5" 	property="data5" jdbcType="VARCHAR" />
	    <result column="MONTH_4" 	property="data4" jdbcType="VARCHAR" />
	    <result column="MONTH_3"	property="data3" jdbcType="VARCHAR" />
	    <result column="MONTH_2" 	property="data2" jdbcType="VARCHAR" />
	    <result column="MONTH_1" 	property="data1" jdbcType="VARCHAR" />
	    <result column="MONTH_C" 	property="allData1" jdbcType="VARCHAR" />
	    <result column="TOTAL" 		property="total" jdbcType="VARCHAR" />	  
 	</resultMap>
 	<select id="selectKfda_b" resultMap="kfdaResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT	SEQ,
  				READ_YN,
  				GUBUN,
  				MONTH_6,
  				MONTH_5,
  				MONTH_4,
  				MONTH_3,
  				MONTH_2,
  				MONTH_1,
  				MONTH_C,
  				TOTAL
  		FROM	CLAIM_KFDA2_BACK
  		ORDER
  		BY		SEQ
  	</select>
 	<select id="selectKfda" resultMap="kfdaResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT	SEQ,
  				READ_YN,
  				GUBUN,
  				MONTH_6,
  				MONTH_5,
  				MONTH_4,
  				MONTH_3,
  				MONTH_2,
  				MONTH_1,
  				MONTH_C,
  				TOTAL
  		FROM	CLTPT009
  	
  	</select>
  
  	
  	<resultMap id="kfdaProcResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="SEQ" 			property="seq" jdbcType="VARCHAR" />
	    <result column="READ_YN" 		property="read_yn" jdbcType="VARCHAR" />
	    <result column="REPORT_YN" 		property="t_report_yn" jdbcType="VARCHAR" />
	    <result column="ACEP_NO" 		property="acepno" jdbcType="VARCHAR" />
	    <result column="PROS_DEPT_NM" 	property="pros_dept_nm" jdbcType="VARCHAR" />
	    <result column="PROS_USER_NM" 	property="pros_user_nm" jdbcType="VARCHAR" />
	    <result column="PROC_NM"		property="proc_nm" jdbcType="VARCHAR" />
	    <result column="TYPE_NM" 		property="type_nm" jdbcType="VARCHAR" />
	    <result column="PROS_GRAD_NM" 	property="pros_grad_nm" jdbcType="VARCHAR" />
	    <result column="PROC_SAMPLE" 	property="proc_sample" jdbcType="VARCHAR" />
	    <result column="FACT_SAMPLE" 	property="fact_sample" jdbcType="VARCHAR" />	  
	    <result column="ACEP_DT" 		property="acep_dt" jdbcType="VARCHAR" />
	    <result column="EXP_INS_DT" 	property="exp_ins_dt" jdbcType="VARCHAR" />
	    <result column="VISIT_DT" 		property="visit_dt" jdbcType="VARCHAR" />
	    <result column="PROC_SEQ" 		property="proc_seq" jdbcType="VARCHAR" />
	    <result column="KFDA_DT" 		property="kfda_dt" jdbcType="VARCHAR" />	
	    <result column="DURATION" 		property="duration" jdbcType="VARCHAR" />   
 	</resultMap>
 	<select id="selectKfdaProc_b" resultMap="kfdaProcResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT	SEQ,
  				READ_YN,
  				REPORT_YN,
  				ACEP_NO,
  				PROS_DEPT_NM,
  				PROS_USER_NM,
  				PROC_NM,
  				TYPE_NM,
  				PROS_GRAD_NM,
  				PROC_SAMPLE,
  				FACT_SAMPLE,
  				ACEP_DT,
  				EXP_INS_DT,
  				VISIT_DT,
  				PROC_SEQ,
  				KFDA_DT,
  				DURATION
  		FROM	CLAIM_KFDA2_GRP_BACK
  		ORDER BY SEQ
  	</select>
 	<select id="selectKfdaProc" resultMap="kfdaProcResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT	SEQ,
  				READ_YN,
  				REPORT_YN,
  				ACEP_NO,
  				PROS_DEPT_NM,
  				PROS_USER_NM,
  				PROC_NM,
  				TYPE_NM,
  				PROS_GRAD_NM,
  				PROC_SAMPLE,
  				FACT_SAMPLE,
  				ACEP_DT,
  				EXP_INS_DT,
  				VISIT_DT,
  				PROC_SEQ,
  				KFDA_DT,
  				DURATION
  		FROM	CLTPT019
  	</select>
  
  	
  	<resultMap id="todAssResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	    <result column="READ_YN" 		property="read_yn" jdbcType="VARCHAR" />
	    <result column="CNT_TEL" 		property="cnt_tel" jdbcType="VARCHAR" />
	    <result column="CNT_CSMA" 		property="cnt_csma" jdbcType="VARCHAR" />
	    <result column="CNT_BUSIN" 	property="cnt_busin" jdbcType="VARCHAR" />
	    <result column="CNT_ETC" 	property="cnt_etc" jdbcType="VARCHAR" />
	    <result column="CNT_TOTAL"		property="cnt_total" jdbcType="VARCHAR" />	
	    <result column="RATE_TEL"		property="rate_tel" jdbcType="VARCHAR" />      
 	</resultMap>
  	<select id="selectTodAss" resultMap="todAssResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT READ_YN,CNT_TEL,CNT_CSMA,CNT_BUSIN,CNT_ETC,CNT_TOTAL, RATE_TEL FROM CLTPT037
  	</select>
  	
  	<resultMap id="todVstResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	 	<result column="SEQ" 			property="seq" jdbcType="VARCHAR" />
  	    <result column="READ_YN" 		property="read_yn" jdbcType="VARCHAR" />
  	    <result column="GUBUN" 			property="gubun" jdbcType="VARCHAR" />
	    <result column="CNT_PRE_WEEK" 	property="cnt_pre_week" jdbcType="VARCHAR" />
	    <result column="CNT_MON" 		property="cnt_mon" jdbcType="VARCHAR" />
	    <result column="CNT_TUE" 		property="cnt_tue" jdbcType="VARCHAR" />
	    <result column="CNT_WED" 		property="cnt_wed" jdbcType="VARCHAR" />
	    <result column="CNT_THU"		property="cnt_thu" jdbcType="VARCHAR" />	      
	    <result column="CNT_FRI" 		property="cnt_fri" jdbcType="VARCHAR" />
	    <result column="CNT_CUR_WEEK" 	property="cnt_cur_week" jdbcType="VARCHAR" />	  
 	</resultMap>
  	<select id="selectTodVst" resultMap="todVstResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT TRIM(SEQ) SEQ,READ_YN,GUBUN,CNT_PRE_WEEK,CNT_MON,CNT_TUE,CNT_WED,CNT_THU,CNT_FRI,CNT_CUR_WEEK FROM CLTPT017
  	</select>
  	
  	<resultMap id="dont2Result" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	 	<result column="SEQ" 			property="seq" jdbcType="VARCHAR" />
  	    <result column="READ_YN" 		property="read_yn" jdbcType="VARCHAR" />
  	    <result column="ACEP_NO" 		property="acepno" jdbcType="VARCHAR" />
	    <result column="PROS_DEPT_NM" 	property="pros_dept_nm" jdbcType="VARCHAR" />
	    <result column="PROS_USER_NM" 	property="pros_user_nm" jdbcType="VARCHAR" />
	    <result column="PROC_NM" 		property="proc_nm" jdbcType="VARCHAR" />
	    <result column="TYPE_NM" 		property="type_nm" jdbcType="VARCHAR" />
	    <result column="PROS_GRAD_NM"	property="pros_grad_nm" jdbcType="VARCHAR" />	      
	    <result column="PROC_SAMPLE" 	property="proc_sample" jdbcType="VARCHAR" />
	    <result column="FACT_SAMPLE" 	property="fact_sample" jdbcType="VARCHAR" />
	    <result column="ACEP_DT" 		property="acep_dt" jdbcType="VARCHAR" />
	    <result column="EXP_INS_DT" 	property="exp_ins_dt" jdbcType="VARCHAR" />
	    <result column="VISIT_DT" 		property="visit_date" jdbcType="VARCHAR" />
	    <result column="GAP"			property="gap" jdbcType="VARCHAR" />	      
	    <result column="PROC_SEQ" 		property="proc_seq" jdbcType="VARCHAR" />
	    <result column="KFDA_DT" 		property="kfda_dt" jdbcType="VARCHAR" />	
	    <result column="MANF_FACT_CD" 	property="manf_fact_cd" jdbcType="VARCHAR" />	
	    <result column="DURATION" 		property="duration" jdbcType="VARCHAR" />
 	</resultMap>
 	<select id="selectDont2_b" resultMap="dont2Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT	SEQ,
  				READ_YN,
  				ACEP_NO,
  				PROS_DEPT_NM,
  				PROS_USER_NM,
  				PROC_NM,
  				TYPE_NM,
  				PROS_GRAD_NM,
  				ACEP_DT,
  				VISIT_DT,
  				PROC_SEQ,
  				KFDA_DT,
  				PROC_SAMPLE,  				
  				EXP_INS_DT,
  				FACT_SAMPLE,
  				GAP,
  				(SELECT DISTINCT NVL(CD_KNM, '-') 
                    FROM CLT_COMM_CD 
                  WHERE CD_id = 'N034'
                    AND CD_TP = NVL(MANF_FACT_CD , '9999')) MANF_FACT_CD,
  				DURATION
  	 	FROM	CLAIM_DONT2_BACK
  	 	ORDER
  	 	BY		SEQ
  				
  	</select>
 	<select id="selectDont2" resultMap="dont2Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  		SELECT	SEQ,
  				READ_YN,
  				ACEP_NO,
  				PROS_DEPT_NM,
  				PROS_USER_NM,
  				PROC_NM,
  				TYPE_NM,
  				PROS_GRAD_NM,
  				ACEP_DT,
  				VISIT_DT,
  				PROC_SEQ,
  				KFDA_DT,
  				PROC_SAMPLE,  				
  				EXP_INS_DT,
  				FACT_SAMPLE,
  				GAP,
  				(SELECT DISTINCT NVL(CD_KNM, '-') 
                    FROM CLT_COMM_CD 
                  WHERE CD_id = 'N034'
                    AND CD_TP = NVL(MANF_FACT_CD , '9999')) MANF_FACT_CD,
  				DURATION
  	 	FROM	CLTPT010
  				
  	</select>
  	
	<resultMap id="jeboCntResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  	 	<result column="CNTJEBO" 			property="cntjebo" jdbcType="INT" />
  	</resultMap>
  <select id="selectJeboCnt" resultMap="jeboCntResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
 SELECT COUNT(*) CNTJEBO       
   FROM CLT_INTERNET_CLAIM             
  WHERE MEDIA_GUBN = 'P'          
    AND JEBO_YN = 'Y'    
    AND JEBO_DATE >= TO_CHAR((SYSDATE-15),'YYYYMMDD') 
   </select>
   
   <resultMap id="countResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
     <result column="NOT_PROC_NUM"    property="data1" jdbcType="VARCHAR" />
       <result column="PROC_TODAY_NUM"   property="data2" jdbcType="VARCHAR" />
       <result column="EXP_DOC_NOT_ADD_NUM"  property="data3" jdbcType="VARCHAR" />
  </resultMap>
   <select id="selectCount_b" resultMap="countResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
   	SELECT	NOT_PROC_NUM,
   			PROC_TODAY_NUM,
   			EXP_DOC_NOT_ADD_NUM
   	FROM	CLAIM_DONT2_COUNT_BACK
   </select>
   
   <select id="selectCount" resultMap="countResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
  SELECT AAA.CNT NOT_PROC_NUM,        
         BBB.CNT PROC_TODAY_NUM,   
         CCC.CNT EXP_DOC_NOT_ADD_NUM          
    FROM(
          SELECT COUNT(A.ACEPNO) CNT   
            FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST B
           WHERE A.ACEPNO = B.ACEPNO   
             AND B.CNCL_TYPE_CD = '1'   
             AND B.PROS_DIV_CD_1 IS NOT NULL  
             AND A.EXPLDOC_EXPL_CD = 'Y'   
             AND A.EXPLDOC_PRESENT_LIMIT  <![CDATA[<=]]>  TO_CHAR(SYSDATE - 1, 'YYYYMMDD')   
             AND B.PROGR_STAT <![CDATA[<>]]> 'Y'
             AND B.PROGR_STAT <![CDATA[>=]]> '2'
         ) AAA,   
         (
          SELECT COUNT(*) CNT   
            FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST B
           WHERE A.ACEPNO = B.ACEPNO    
             AND B.CNCL_TYPE_CD = '1'  
             AND B.PROS_DIV_CD_1 IS NOT NULL   
             AND A.FINISH_YN = 'Y'   
             AND A.EXPLDOC_PRESENT_LIMIT <![CDATA[<=]]>  TO_CHAR(SYSDATE - 1, 'YYYYMMDD')   
             AND SUBSTR(A.FINISH_DATE, 1, 8) = TO_CHAR(SYSDATE, 'YYYYMMDD') 
         ) BBB,   
         (  
          SELECT AA.CNT + BB.CNT CNT  
            FROM ( 
                   SELECT count(*) CNT 
                     FROM CLT_CLAIM_MST_FILE A, (
                                                 SELECT A.ACEPNO     
                                                   FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST B
                                                  WHERE A.ACEPNO = B.ACEPNO
                                                    AND B.CNCL_TYPE_CD = '1'    
                                                    AND B.PROS_DIV_CD_1 IS NOT NULL   
                                                    AND A.EXPLDOC_EXPL_CD = 'Y'     
                                                    AND A.EXPLDOC_PRESENT_LIMIT <![CDATA[<=]]> TO_CHAR(SYSDATE-1, 'YYYYMMDD')
                                                    AND B.PROGR_STAT <![CDATA[<>]]> 'Y'
                                                    AND B.PROGR_STAT <![CDATA[>=]]> '2'
                                                ) b 
                   WHERE A.ACEPNO(+) = b.acepno 
                           AND A.acepno IS NOT NULL 
                           AND A.fileno2 IS NULL   
                           AND A.doc_div = 'EXP' 
                  ) AA, 
                  (
                   SELECT count(*) CNT 
                     FROM CLT_CLAIM_MST_FILE A, (
                                                 SELECT A.ACEPNO     
                                                   FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST B
                                                  WHERE A.ACEPNO = B.ACEPNO
                                                    AND B.CNCL_TYPE_CD = '1'   
                                                    AND B.PROS_DIV_CD_1 IS NOT NULL    
                                                    AND A.EXPLDOC_EXPL_CD = 'Y'     
                                                    AND A.EXPLDOC_PRESENT_LIMIT <![CDATA[<=]]> TO_CHAR(SYSDATE-1, 'YYYYMMDD')
                                                    AND B.PROGR_STAT <![CDATA[<>]]> 'Y'
                                                    AND B.PROGR_STAT <![CDATA[>=]]> '2'
                                                ) b 
                    WHERE A.ACEPNO(+) = b.acepno 
                      AND A.acepno IS NULL 
                  ) BB  
         ) CCC   
    </select>
    
    <resultMap id="adminDont1InfoResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
            <result column="TERM_MONTH"     property="term_month" jdbcType="VARCHAR" />
            <result column="TERM_DAY"     property="term_day" jdbcType="VARCHAR" />
    </resultMap>
      <select id="selectAdminDont1Info" resultMap="adminDont1InfoResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
              SELECT TERM_MONTH,                 
                   TERM_DAY                    
            FROM CLMUT002                    
            WHERE MENU_CD    = 'C20004' 
      </select>
    
    <resultMap id="countTodResult" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
           <result column="EXP_TOD_NUM"             property="data1" jdbcType="VARCHAR" />
          <result column="PROC_COMPLETE_NUM"         property="data2" jdbcType="VARCHAR" />
          <result column="EXP_DOC_NOT_ADD_NUM"     property="data3" jdbcType="VARCHAR" />
     </resultMap>
      <select id="selectCountTod" resultMap="countTodResult" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
        SELECT AAA.CNT EXP_TOD_NUM,   
               BBB.CNT PROC_COMPLETE_NUM,   
               CCC.CNT EXP_DOC_NOT_ADD_NUM
          FROM (SELECT COUNT(A.acepno) CNT   
                  FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST b   
                 WHERE A.acepno = b.acepno   
                   AND b.CNCL_TYPE_CD = '1'   
                   AND B.PROS_DIV_CD_1 IS NOT NULL  
                   AND A.EXPLDOC_EXPL_CD = 'Y'   
                   AND A.EXPLDOC_PRESENT_LIMIT = TO_CHAR(SYSDATE, 'YYYYMMDD') 
                   AND B.PROGR_STAT <![CDATA[<>]]> 'Y'
                   AND B.PROGR_STAT <![CDATA[>=]]> '2'
               ) AAA,   
               (SELECT COUNT(A.acepno) CNT   
                  FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST b   
                 WHERE A.acepno = b.acepno   
                   AND b.CNCL_TYPE_CD = '1'   
                   AND B.PROS_DIV_CD_1 IS NOT NULL  
                   AND A.EXPLDOC_EXPL_CD = 'Y'   
                   AND A.EXPLDOC_PRESENT_LIMIT = TO_CHAR(SYSDATE, 'YYYYMMDD')   
                   AND A.finish_yn = 'Y'
               ) BBB,   
               ( 
                SELECT AA.CNT + BB.CNT CNT  
                  FROM ( 
                         SELECT count(*) CNT 
                          FROM CLT_CLAIM_MST_FILE A     
                              ,(SELECT A.ACEPNO     
                                          FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST B     
                                         WHERE A.ACEPNO = B.ACEPNO     
                                           AND B.CNCL_TYPE_CD = '1'   
                                           AND B.PROS_DIV_CD_1 IS NOT NULL    
                                           AND A.EXPLDOC_EXPL_CD = 'Y'     
                                           AND A.EXPLDOC_PRESENT_LIMIT = TO_CHAR(SYSDATE, 'YYYYMMDD')    
                                           AND B.PROGR_STAT <![CDATA[<>]]> 'Y'
                                           AND B.PROGR_STAT <![CDATA[>=]]> '2'
                               ) b 
                         WHERE A.ACEPNO(+) = b.acepno 
                           AND A.acepno IS NOT NULL 
                           AND A.fileno2 IS NULL   
                           AND A.doc_div = 'EXP' 
                       ) AA, 
                       (SELECT count(*) CNT 
                          FROM CLT_CLAIM_MST_FILE A     
                              ,(SELECT A.ACEPNO     
                                          FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST B     
                                         WHERE A.ACEPNO = B.ACEPNO     
                                           AND B.CNCL_TYPE_CD = '1'  
                                           AND B.PROS_DIV_CD_1 IS NOT NULL     
                                           AND A.EXPLDOC_EXPL_CD = 'Y'     
                                           AND A.EXPLDOC_PRESENT_LIMIT = TO_CHAR(SYSDATE, 'YYYYMMDD')    
                                           AND B.PROGR_STAT <![CDATA[<>]]> 'Y'
                                           AND B.PROGR_STAT <![CDATA[>=]]> '2'
                               ) b 
                         WHERE A.ACEPNO(+) = b.acepno 
                           AND A.acepno IS NULL 
                        ) BB  
               ) CCC
      </select>
      
      <resultMap id="countExp1Result" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
           <result column="EXP_DAY1_NUM"             property="data1" jdbcType="VARCHAR" />
          <result column="EXP_DOC_NOT_ADD_NUM"     property="data2" jdbcType="VARCHAR" />
      </resultMap>
       <select id="selectCountExp1_b" resultMap="countExp1Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
      	SELECT	EXP_DAY1_NUM,
      			EXP_DOC_NOT_ADD_NUM
      	FROM	CLAIM_EXP1_COUNT_BACK
      </select>
      <select id="selectCountExp1" resultMap="countExp1Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
        SELECT AAA.CNT EXP_DAY1_NUM,   
               BBB.CNT EXP_DOC_NOT_ADD_NUM 
          FROM (SELECT COUNT(A.acepno) CNT   
                  FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST b   
                 WHERE A.acepno = b.acepno   
                   AND b.CNCL_TYPE_CD = '1'   
                   AND B.PROS_DIV_CD_1 IS NOT NULL  
                   AND A.EXPLDOC_EXPL_CD = 'Y'   
                   AND A.EXPLDOC_PRESENT_LIMIT = TO_CHAR(SYSDATE+1, 'YYYYMMDD') 
                   AND B.PROGR_STAT <![CDATA[<>]]> 'Y'
                   AND B.PROGR_STAT <![CDATA[>=]]> '2'
               ) AAA,   
               ( 
                SELECT AA.CNT + BB.CNT CNT  
                  FROM ( 
                         SELECT count(*) CNT 
                          FROM CLT_CLAIM_MST_FILE A     
                              ,(SELECT A.ACEPNO     
                                          FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST B     
                                         WHERE A.ACEPNO = B.ACEPNO     
                                           AND B.CNCL_TYPE_CD = '1'     
                                           AND B.PROS_DIV_CD_1 IS NOT NULL  
                                           AND A.EXPLDOC_EXPL_CD = 'Y'     
                                           AND A.EXPLDOC_PRESENT_LIMIT = TO_CHAR(SYSDATE+1, 'YYYYMMDD')    
                                           AND B.PROGR_STAT <![CDATA[<>]]> 'Y'
                                           AND B.PROGR_STAT <![CDATA[>=]]> '2'
                                ) b 
                         WHERE A.ACEPNO(+) = b.acepno 
                           AND A.acepno IS NOT NULL 
                           AND A.fileno2 IS NULL   
                           AND A.doc_div = 'EXP' 
                       ) AA, 
                       (SELECT count(*) CNT 
                          FROM CLT_CLAIM_MST_FILE A     
                              ,(SELECT A.ACEPNO     
                                          FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST B     
                                         WHERE A.ACEPNO = B.ACEPNO     
                                           AND B.CNCL_TYPE_CD = '1'  
                                           AND B.PROS_DIV_CD_1 IS NOT NULL     
                                           AND A.EXPLDOC_EXPL_CD = 'Y'     
                                           AND A.EXPLDOC_PRESENT_LIMIT = TO_CHAR(SYSDATE+1, 'YYYYMMDD')    
                                           AND B.PROGR_STAT <![CDATA[<>]]> 'Y'
                                           AND B.PROGR_STAT <![CDATA[>=]]> '2'
                               ) b 
                         WHERE A.ACEPNO(+) = b.acepno 
                           AND A.acepno IS NULL 
                        ) BB  
               ) BBB 
      </select>
      
      <resultMap id="countExp2Result" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
           <result column="EXP_DAY2_NUM"             property="data1" jdbcType="VARCHAR" />
          <result column="EXP_DOC_NOT_ADD_NUM"     property="data2" jdbcType="VARCHAR" />
      </resultMap>
      <select id="selectCountExp2_b" resultMap="countExp2Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
      	SELECT	EXP_DAY2_NUM,
      			EXP_DOC_NOT_ADD_NUM
      	FROM	CLAIM_EXP2_COUNT_BACK
      </select>
      <select id="selectCountExp2" resultMap="countExp2Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
        SELECT AAA.CNT EXP_DAY2_NUM,   
               BBB.CNT EXP_DOC_NOT_ADD_NUM 
          FROM (SELECT COUNT(A.acepno) CNT   
                  FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST b   
                 WHERE A.acepno = b.acepno   
                   AND b.CNCL_TYPE_CD = '1' 
                   AND B.PROS_DIV_CD_1 IS NOT NULL    
                   AND A.EXPLDOC_EXPL_CD = 'Y'   
                   AND A.EXPLDOC_PRESENT_LIMIT = TO_CHAR(SYSDATE+2, 'YYYYMMDD') 
                   AND B.PROGR_STAT <![CDATA[<>]]> 'Y'
                   AND B.PROGR_STAT <![CDATA[>=]]> '2'
               ) AAA,   
               ( 
                SELECT AA.CNT + BB.CNT CNT  
                  FROM ( 
                         SELECT count(*) CNT 
                          FROM CLT_CLAIM_MST_FILE A     
                              ,(SELECT A.ACEPNO     
                                          FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST B     
                                         WHERE A.ACEPNO = B.ACEPNO     
                                           AND B.CNCL_TYPE_CD = '1'     
                                           AND B.PROS_DIV_CD_1 IS NOT NULL  
                                           AND A.EXPLDOC_EXPL_CD = 'Y'     
                                           AND A.EXPLDOC_PRESENT_LIMIT = TO_CHAR(SYSDATE+2, 'YYYYMMDD')    
                                           AND B.PROGR_STAT <![CDATA[<>]]> 'Y'
                                           AND B.PROGR_STAT <![CDATA[>=]]> '2'
                               ) b 
                         WHERE A.ACEPNO(+) = b.acepno 
                           AND A.acepno IS NOT NULL 
                           AND A.fileno2 IS NULL   
                           AND A.doc_div = 'EXP' 
                       ) AA, 
                       (SELECT count(*) CNT 
                          FROM CLT_CLAIM_MST_FILE A     
                              ,(SELECT A.ACEPNO     
                                          FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST B     
                                         WHERE A.ACEPNO = B.ACEPNO     
                                           AND B.CNCL_TYPE_CD = '1'  
                                           AND B.PROS_DIV_CD_1 IS NOT NULL     
                                           AND A.EXPLDOC_EXPL_CD = 'Y'     
                                           AND A.EXPLDOC_PRESENT_LIMIT = TO_CHAR(SYSDATE+2, 'YYYYMMDD')    
                                           AND B.PROGR_STAT <![CDATA[<>]]> 'Y'
                                           AND B.PROGR_STAT <![CDATA[>=]]> '2'
                               ) b 
                         WHERE A.ACEPNO(+) = b.acepno 
                           AND A.acepno IS NULL 
                        ) BB  
               ) BBB 
      </select>
      
      <resultMap id="countExp3Result" class="nds.rms.riskman.takyung.service.ClaimAvrVO" >
          <result column="EXP_DAY3_NUM"             property="data1" jdbcType="VARCHAR" />
          <result column="EXP_DOC_NOT_ADD_NUM"     property="data2" jdbcType="VARCHAR" />
      </resultMap>
      <select id="selectCountExp3_b" resultMap="countExp3Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
      	SELECT	EXP_DAY3_NUM,
      			EXP_DOC_NOT_ADD_NUM
      	FROM	CLAIM_EXP3_COUNT_BACK
      </select>
      <select id="selectCountExp3" resultMap="countExp3Result" parameterClass="nds.rms.riskman.takyung.service.ClaimAvrVO" >
        SELECT AAA.CNT EXP_DAY3_NUM,   
               BBB.CNT EXP_DOC_NOT_ADD_NUM 
          FROM (SELECT COUNT(A.acepno) CNT   
                  FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST b   
                 WHERE A.acepno = b.acepno   
                   AND b.CNCL_TYPE_CD = '1'  
                   AND B.PROS_DIV_CD_1 IS NOT NULL   
                   AND A.EXPLDOC_EXPL_CD = 'Y'   
                   AND A.EXPLDOC_PRESENT_LIMIT = TO_CHAR(SYSDATE+3, 'YYYYMMDD') 
                   AND B.PROGR_STAT <![CDATA[<>]]> 'Y'
                   AND B.PROGR_STAT <![CDATA[>=]]> '2'
               ) AAA,   
               ( 
                SELECT AA.CNT + BB.CNT CNT  
                  FROM ( 
                         SELECT count(*) CNT 
                          FROM CLT_CLAIM_MST_FILE A     
                              ,(SELECT A.ACEPNO     
                                          FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST B     
                                         WHERE A.ACEPNO = B.ACEPNO     
                                           AND B.CNCL_TYPE_CD = '1'   
                                           AND B.PROS_DIV_CD_1 IS NOT NULL    
                                           AND A.EXPLDOC_EXPL_CD = 'Y'     
                                           AND A.EXPLDOC_PRESENT_LIMIT = TO_CHAR(SYSDATE+3, 'YYYYMMDD')    
                                           AND B.PROGR_STAT <![CDATA[<>]]> 'Y'
                                           AND B.PROGR_STAT <![CDATA[>=]]> '2'
                               ) b 
                         WHERE A.ACEPNO(+) = b.acepno 
                           AND A.acepno IS NOT NULL 
                           AND A.fileno2 IS NULL   
                           AND A.doc_div = 'EXP' 
                       ) AA, 
                       (SELECT count(*) CNT 
                          FROM CLT_CLAIM_MST_FILE A     
                              ,(SELECT A.ACEPNO     
                                          FROM CLT_CLAIM_MST_INFO_PROS A, CLT_CLAIM_MST B     
                                         WHERE A.ACEPNO = B.ACEPNO     
                                           AND B.CNCL_TYPE_CD = '1'  
                                           AND B.PROS_DIV_CD_1 IS NOT NULL     
                                           AND A.EXPLDOC_EXPL_CD = 'Y'     
                                           AND A.EXPLDOC_PRESENT_LIMIT = TO_CHAR(SYSDATE+3, 'YYYYMMDD')    
                                           AND B.PROGR_STAT <![CDATA[<>]]> 'Y'
                                           AND B.PROGR_STAT <![CDATA[>=]]> '2'
                               ) b 
                         WHERE A.ACEPNO(+) = b.acepno 
                           AND A.acepno IS NULL 
                        ) BB  
               ) BBB 
      </select>

	
</sqlMap>